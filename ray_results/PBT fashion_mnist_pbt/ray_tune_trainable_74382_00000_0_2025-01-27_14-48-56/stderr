:actor_name:ray_tune_trainable
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:123: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'data.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:126: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'targets.pt')))
0:   0%|          | 0/1000 [00:00<?, ?it/s]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=2.31]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=2.23]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=2.21]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=2.19]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=2.12]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=2.05]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=1.96]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=2.06]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=1.89]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=1.85]0:   0%|          | 1/1000 [00:00<07:08,  2.33it/s, Loss/Training=1.85]0:   0%|          | 1/1000 [00:00<07:08,  2.33it/s, Loss/Training=1.87]0:   0%|          | 1/1000 [00:00<07:08,  2.33it/s, Loss/Training=1.79]0:   0%|          | 1/1000 [00:00<07:08,  2.33it/s, Loss/Training=1.81]0:   0%|          | 1/1000 [00:00<07:08,  2.33it/s, Loss/Training=1.61]0:   0%|          | 1/1000 [00:00<07:08,  2.33it/s, Loss/Training=1.58]0:   0%|          | 1/1000 [00:00<07:08,  2.33it/s, Loss/Training=1.52]0:   0%|          | 1/1000 [00:00<07:08,  2.33it/s, Loss/Training=1.66]0:   0%|          | 1/1000 [00:00<07:08,  2.33it/s, Loss/Training=1.67]0:   0%|          | 1/1000 [00:00<07:08,  2.33it/s, Loss/Training=1.5] 0:   0%|          | 1/1000 [00:00<07:08,  2.33it/s, Loss/Training=1.45]0:   0%|          | 2/1000 [00:00<06:08,  2.71it/s, Loss/Training=1.45]0:   0%|          | 2/1000 [00:00<06:08,  2.71it/s, Loss/Training=1.54]0:   0%|          | 2/1000 [00:00<06:08,  2.71it/s, Loss/Training=1.48]0:   0%|          | 2/1000 [00:00<06:08,  2.71it/s, Loss/Training=1.31]0:   0%|          | 2/1000 [00:00<06:08,  2.71it/s, Loss/Training=1.44]0:   0%|          | 2/1000 [00:00<06:08,  2.71it/s, Loss/Training=1.28]0:   0%|          | 2/1000 [00:00<06:08,  2.71it/s, Loss/Training=1.26]0:   0%|          | 2/1000 [00:00<06:08,  2.71it/s, Loss/Training=1.34]0:   0%|          | 2/1000 [00:00<06:08,  2.71it/s, Loss/Training=1.29]0:   0%|          | 2/1000 [00:01<06:08,  2.71it/s, Loss/Training=1.17]0:   0%|          | 2/1000 [00:01<06:08,  2.71it/s, Loss/Training=1.36]0:   0%|          | 3/1000 [00:01<05:51,  2.84it/s, Loss/Training=1.36]0:   0%|          | 3/1000 [00:01<05:51,  2.84it/s, Loss/Training=1.27]0:   0%|          | 3/1000 [00:01<05:51,  2.84it/s, Loss/Training=1.04]0:   0%|          | 3/1000 [00:01<05:51,  2.84it/s, Loss/Training=1.21]0:   0%|          | 3/1000 [00:01<05:51,  2.84it/s, Loss/Training=1.34]0:   0%|          | 3/1000 [00:01<05:51,  2.84it/s, Loss/Training=1.17]0:   0%|          | 3/1000 [00:01<05:51,  2.84it/s, Loss/Training=1.04]0:   0%|          | 3/1000 [00:01<05:51,  2.84it/s, Loss/Training=0.96]0:   0%|          | 3/1000 [00:01<05:51,  2.84it/s, Loss/Training=1.11]0:   0%|          | 3/1000 [00:01<05:51,  2.84it/s, Loss/Training=0.997]0:   0%|          | 3/1000 [00:01<05:51,  2.84it/s, Loss/Training=0.943]0:   0%|          | 4/1000 [00:01<05:43,  2.90it/s, Loss/Training=0.943]0:   0%|          | 4/1000 [00:01<05:43,  2.90it/s, Loss/Training=0.854]0:   0%|          | 4/1000 [00:01<05:43,  2.90it/s, Loss/Training=1.02] 0:   0%|          | 4/1000 [00:01<05:43,  2.90it/s, Loss/Training=1.02]0:   0%|          | 4/1000 [00:01<05:43,  2.90it/s, Loss/Training=1.12]0:   0%|          | 4/1000 [00:01<05:43,  2.90it/s, Loss/Training=0.843]0:   0%|          | 4/1000 [00:01<05:43,  2.90it/s, Loss/Training=0.993]0:   0%|          | 4/1000 [00:01<05:43,  2.90it/s, Loss/Training=1.02] 0:   0%|          | 4/1000 [00:01<05:43,  2.90it/s, Loss/Training=1.13]0:   0%|          | 4/1000 [00:01<05:43,  2.90it/s, Loss/Training=0.966]0:   0%|          | 4/1000 [00:01<05:43,  2.90it/s, Loss/Training=0.92] 0:   0%|          | 5/1000 [00:01<05:37,  2.95it/s, Loss/Training=0.92]0:   0%|          | 5/1000 [00:01<05:37,  2.95it/s, Loss/Training=0.988]0:   0%|          | 5/1000 [00:01<05:37,  2.95it/s, Loss/Training=1.03] 0:   0%|          | 5/1000 [00:01<05:37,  2.95it/s, Loss/Training=0.894]0:   0%|          | 5/1000 [00:01<05:37,  2.95it/s, Loss/Training=0.894]0:   0%|          | 5/1000 [00:01<05:37,  2.95it/s, Loss/Training=0.882]0:   0%|          | 5/1000 [00:01<05:37,  2.95it/s, Loss/Training=1.1]  0:   0%|          | 5/1000 [00:01<05:37,  2.95it/s, Loss/Training=0.944]0:   0%|          | 5/1000 [00:01<05:37,  2.95it/s, Loss/Training=0.695]0:   0%|          | 5/1000 [00:01<05:37,  2.95it/s, Loss/Training=1.05] 0:   0%|          | 5/1000 [00:02<05:37,  2.95it/s, Loss/Training=0.778]0:   1%|          | 6/1000 [00:02<05:31,  3.00it/s, Loss/Training=0.778]0:   1%|          | 6/1000 [00:02<05:31,  3.00it/s, Loss/Training=0.932]0:   1%|          | 6/1000 [00:02<05:31,  3.00it/s, Loss/Training=0.873]0:   1%|          | 6/1000 [00:02<05:31,  3.00it/s, Loss/Training=0.869]0:   1%|          | 6/1000 [00:02<05:31,  3.00it/s, Loss/Training=0.69] 0:   1%|          | 6/1000 [00:02<05:31,  3.00it/s, Loss/Training=0.883]0:   1%|          | 6/1000 [00:02<05:31,  3.00it/s, Loss/Training=0.784]0:   1%|          | 6/1000 [00:02<05:31,  3.00it/s, Loss/Training=0.686]0:   1%|          | 6/1000 [00:02<05:31,  3.00it/s, Loss/Training=0.787]0:   1%|          | 6/1000 [00:02<05:31,  3.00it/s, Loss/Training=0.956]0:   1%|          | 6/1000 [00:02<05:31,  3.00it/s, Loss/Training=0.669]0:   1%|          | 7/1000 [00:02<05:29,  3.02it/s, Loss/Training=0.669]0:   1%|          | 7/1000 [00:02<05:29,  3.02it/s, Loss/Training=0.675]0:   1%|          | 7/1000 [00:02<05:29,  3.02it/s, Loss/Training=0.826]0:   1%|          | 7/1000 [00:02<05:29,  3.02it/s, Loss/Training=0.702]0:   1%|          | 7/1000 [00:02<05:29,  3.02it/s, Loss/Training=0.55] 0:   1%|          | 7/1000 [00:02<05:29,  3.02it/s, Loss/Training=0.878]0:   1%|          | 7/1000 [00:02<05:29,  3.02it/s, Loss/Training=0.881]0:   1%|          | 7/1000 [00:02<05:29,  3.02it/s, Loss/Training=0.981]0:   1%|          | 7/1000 [00:02<05:29,  3.02it/s, Loss/Training=0.657]0:   1%|          | 7/1000 [00:02<05:29,  3.02it/s, Loss/Training=0.652]0:   1%|          | 7/1000 [00:02<05:29,  3.02it/s, Loss/Training=0.672]0:   1%|          | 8/1000 [00:02<05:25,  3.05it/s, Loss/Training=0.672]0:   1%|          | 8/1000 [00:02<05:25,  3.05it/s, Loss/Training=0.732]0:   1%|          | 8/1000 [00:02<05:25,  3.05it/s, Loss/Training=0.756]0:   1%|          | 8/1000 [00:02<05:25,  3.05it/s, Loss/Training=0.796]0:   1%|          | 8/1000 [00:02<05:25,  3.05it/s, Loss/Training=0.876]0:   1%|          | 8/1000 [00:02<05:25,  3.05it/s, Loss/Training=0.808]0:   1%|          | 8/1000 [00:02<05:25,  3.05it/s, Loss/Training=0.744]0:   1%|          | 8/1000 [00:02<05:25,  3.05it/s, Loss/Training=0.627]0:   1%|          | 8/1000 [00:02<05:25,  3.05it/s, Loss/Training=0.716]0:   1%|          | 8/1000 [00:02<05:25,  3.05it/s, Loss/Training=0.698]0:   1%|          | 8/1000 [00:02<05:25,  3.05it/s, Loss/Training=0.75] 0:   1%|          | 9/1000 [00:03<05:24,  3.06it/s, Loss/Training=0.75]0:   1%|          | 9/1000 [00:03<05:24,  3.06it/s, Loss/Training=0.686]0:   1%|          | 9/1000 [00:03<05:24,  3.06it/s, Loss/Training=0.625]0:   1%|          | 9/1000 [00:03<05:24,  3.06it/s, Loss/Training=0.714]0:   1%|          | 9/1000 [00:03<05:24,  3.06it/s, Loss/Training=0.678]0:   1%|          | 9/1000 [00:03<05:24,  3.06it/s, Loss/Training=1.21] 0:   1%|          | 9/1000 [00:03<05:24,  3.06it/s, Loss/Training=0.594]0:   1%|          | 9/1000 [00:03<05:24,  3.06it/s, Loss/Training=0.678]0:   1%|          | 9/1000 [00:03<05:24,  3.06it/s, Loss/Training=0.575]0:   1%|          | 9/1000 [00:03<05:24,  3.06it/s, Loss/Training=0.478]0:   1%|          | 9/1000 [00:03<05:24,  3.06it/s, Loss/Training=0.642]0:   1%|          | 9/1000 [00:03<06:23,  2.59it/s, Loss/Training=0.642]
:actor_name:ray_tune_trainable
Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_74382_00000_0_2025-01-27_14-48-56/checkpoint_tmp6ee0a3
[INFO 2025-01-27 14:49:30,529] trainable.py: 904  Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_74382_00000_0_2025-01-27_14-48-56/checkpoint_tmp6ee0a3
Current state after restoring: {'_iteration': 100, '_timesteps_total': None, '_time_total': 3.944286823272705, '_episodes_total': None}
[INFO 2025-01-27 14:49:30,529] trainable.py: 913  Current state after restoring: {'_iteration': 100, '_timesteps_total': None, '_time_total': 3.944286823272705, '_episodes_total': None}
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:123: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'data.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:126: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'targets.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/train.py:770: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = to.load(save_file)
0:   0%|          | 0/1000 [00:00<?, ?it/s]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.486]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.662]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.805]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.821]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.593]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.504]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.468]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.713]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.649]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.642]0:   0%|          | 1/1000 [00:00<07:07,  2.34it/s, Loss/Training=0.642]0:   0%|          | 1/1000 [00:00<07:07,  2.34it/s, Loss/Training=0.633]0:   0%|          | 1/1000 [00:00<07:07,  2.34it/s, Loss/Training=0.462]0:   0%|          | 1/1000 [00:00<07:07,  2.34it/s, Loss/Training=0.574]0:   0%|          | 1/1000 [00:00<07:07,  2.34it/s, Loss/Training=0.598]0:   0%|          | 1/1000 [00:00<07:07,  2.34it/s, Loss/Training=0.55] 0:   0%|          | 1/1000 [00:00<07:07,  2.34it/s, Loss/Training=0.673]0:   0%|          | 1/1000 [00:00<07:07,  2.34it/s, Loss/Training=0.619]0:   0%|          | 1/1000 [00:00<07:07,  2.34it/s, Loss/Training=0.69] 0:   0%|          | 1/1000 [00:00<07:07,  2.34it/s, Loss/Training=0.553]0:   0%|          | 1/1000 [00:00<07:07,  2.34it/s, Loss/Training=0.563]0:   0%|          | 2/1000 [00:00<06:16,  2.65it/s, Loss/Training=0.563]0:   0%|          | 2/1000 [00:00<06:16,  2.65it/s, Loss/Training=0.504]0:   0%|          | 2/1000 [00:00<06:16,  2.65it/s, Loss/Training=0.655]0:   0%|          | 2/1000 [00:00<06:16,  2.65it/s, Loss/Training=0.428]0:   0%|          | 2/1000 [00:00<06:16,  2.65it/s, Loss/Training=0.694]0:   0%|          | 2/1000 [00:00<06:16,  2.65it/s, Loss/Training=0.656]0:   0%|          | 2/1000 [00:00<06:16,  2.65it/s, Loss/Training=0.667]0:   0%|          | 2/1000 [00:00<06:16,  2.65it/s, Loss/Training=0.486]0:   0%|          | 2/1000 [00:01<06:16,  2.65it/s, Loss/Training=0.558]0:   0%|          | 2/1000 [00:01<06:16,  2.65it/s, Loss/Training=0.526]0:   0%|          | 2/1000 [00:01<06:16,  2.65it/s, Loss/Training=0.628]0:   0%|          | 3/1000 [00:01<06:03,  2.74it/s, Loss/Training=0.628]0:   0%|          | 3/1000 [00:01<06:03,  2.74it/s, Loss/Training=0.659]0:   0%|          | 3/1000 [00:01<06:03,  2.74it/s, Loss/Training=0.425]0:   0%|          | 3/1000 [00:01<06:03,  2.74it/s, Loss/Training=0.602]0:   0%|          | 3/1000 [00:01<06:03,  2.74it/s, Loss/Training=0.599]0:   0%|          | 3/1000 [00:01<06:03,  2.74it/s, Loss/Training=0.556]0:   0%|          | 3/1000 [00:01<06:03,  2.74it/s, Loss/Training=0.624]0:   0%|          | 3/1000 [00:01<06:03,  2.74it/s, Loss/Training=0.66] 0:   0%|          | 3/1000 [00:01<06:03,  2.74it/s, Loss/Training=0.63]0:   0%|          | 3/1000 [00:01<06:03,  2.74it/s, Loss/Training=0.705]0:   0%|          | 3/1000 [00:01<06:03,  2.74it/s, Loss/Training=0.706]0:   0%|          | 4/1000 [00:01<05:49,  2.85it/s, Loss/Training=0.706]0:   0%|          | 4/1000 [00:01<05:49,  2.85it/s, Loss/Training=0.565]0:   0%|          | 4/1000 [00:01<05:49,  2.85it/s, Loss/Training=0.61] 0:   0%|          | 4/1000 [00:01<05:49,  2.85it/s, Loss/Training=0.454]0:   0%|          | 4/1000 [00:01<05:49,  2.85it/s, Loss/Training=0.47] 0:   0%|          | 4/1000 [00:01<05:49,  2.85it/s, Loss/Training=0.978]0:   0%|          | 4/1000 [00:01<05:49,  2.85it/s, Loss/Training=0.597]0:   0%|          | 4/1000 [00:01<05:49,  2.85it/s, Loss/Training=0.418]0:   0%|          | 4/1000 [00:01<05:49,  2.85it/s, Loss/Training=0.578]0:   0%|          | 4/1000 [00:01<05:49,  2.85it/s, Loss/Training=0.433]0:   0%|          | 4/1000 [00:01<05:49,  2.85it/s, Loss/Training=0.583]0:   0%|          | 5/1000 [00:01<05:42,  2.91it/s, Loss/Training=0.583]0:   0%|          | 5/1000 [00:01<05:42,  2.91it/s, Loss/Training=0.574]0:   0%|          | 5/1000 [00:01<05:42,  2.91it/s, Loss/Training=0.692]0:   0%|          | 5/1000 [00:01<05:42,  2.91it/s, Loss/Training=0.644]0:   0%|          | 5/1000 [00:01<05:42,  2.91it/s, Loss/Training=0.636]0:   0%|          | 5/1000 [00:01<05:42,  2.91it/s, Loss/Training=0.466]0:   0%|          | 5/1000 [00:01<05:42,  2.91it/s, Loss/Training=0.598]0:   0%|          | 5/1000 [00:01<05:42,  2.91it/s, Loss/Training=0.419]0:   0%|          | 5/1000 [00:01<05:42,  2.91it/s, Loss/Training=0.65] 0:   0%|          | 5/1000 [00:02<05:42,  2.91it/s, Loss/Training=0.605]0:   0%|          | 5/1000 [00:02<05:42,  2.91it/s, Loss/Training=0.446]0:   1%|          | 6/1000 [00:02<05:38,  2.94it/s, Loss/Training=0.446]0:   1%|          | 6/1000 [00:02<05:38,  2.94it/s, Loss/Training=0.809]0:   1%|          | 6/1000 [00:02<05:38,  2.94it/s, Loss/Training=0.454]0:   1%|          | 6/1000 [00:02<05:38,  2.94it/s, Loss/Training=0.379]0:   1%|          | 6/1000 [00:02<05:38,  2.94it/s, Loss/Training=0.483]0:   1%|          | 6/1000 [00:02<05:38,  2.94it/s, Loss/Training=0.456]0:   1%|          | 6/1000 [00:02<05:38,  2.94it/s, Loss/Training=0.78] 0:   1%|          | 6/1000 [00:02<05:38,  2.94it/s, Loss/Training=0.4] 0:   1%|          | 6/1000 [00:02<05:38,  2.94it/s, Loss/Training=0.552]0:   1%|          | 6/1000 [00:02<05:38,  2.94it/s, Loss/Training=0.359]0:   1%|          | 6/1000 [00:02<05:38,  2.94it/s, Loss/Training=0.613]0:   1%|          | 7/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.613]0:   1%|          | 7/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.54] 0:   1%|          | 7/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.729]0:   1%|          | 7/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.495]0:   1%|          | 7/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.341]0:   1%|          | 7/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.585]0:   1%|          | 7/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.467]0:   1%|          | 7/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.532]0:   1%|          | 7/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.448]0:   1%|          | 7/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.577]0:   1%|          | 7/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.432]0:   1%|          | 8/1000 [00:02<05:32,  2.98it/s, Loss/Training=0.432]0:   1%|          | 8/1000 [00:02<05:32,  2.98it/s, Loss/Training=0.648]0:   1%|          | 8/1000 [00:02<05:32,  2.98it/s, Loss/Training=0.447]0:   1%|          | 8/1000 [00:02<05:32,  2.98it/s, Loss/Training=0.514]0:   1%|          | 8/1000 [00:02<05:32,  2.98it/s, Loss/Training=0.303]0:   1%|          | 8/1000 [00:02<05:32,  2.98it/s, Loss/Training=0.407]0:   1%|          | 8/1000 [00:02<05:32,  2.98it/s, Loss/Training=0.737]0:   1%|          | 8/1000 [00:02<05:32,  2.98it/s, Loss/Training=0.932]0:   1%|          | 8/1000 [00:02<05:32,  2.98it/s, Loss/Training=0.525]0:   1%|          | 8/1000 [00:03<05:32,  2.98it/s, Loss/Training=0.526]0:   1%|          | 8/1000 [00:03<05:32,  2.98it/s, Loss/Training=0.581]0:   1%|          | 9/1000 [00:03<05:32,  2.98it/s, Loss/Training=0.581]0:   1%|          | 9/1000 [00:03<05:32,  2.98it/s, Loss/Training=0.464]0:   1%|          | 9/1000 [00:03<05:32,  2.98it/s, Loss/Training=0.468]0:   1%|          | 9/1000 [00:03<05:32,  2.98it/s, Loss/Training=0.57] 0:   1%|          | 9/1000 [00:03<05:32,  2.98it/s, Loss/Training=0.559]0:   1%|          | 9/1000 [00:03<05:32,  2.98it/s, Loss/Training=0.401]0:   1%|          | 9/1000 [00:03<05:32,  2.98it/s, Loss/Training=0.677]0:   1%|          | 9/1000 [00:03<05:32,  2.98it/s, Loss/Training=0.546]0:   1%|          | 9/1000 [00:03<05:32,  2.98it/s, Loss/Training=0.372]0:   1%|          | 9/1000 [00:03<05:32,  2.98it/s, Loss/Training=0.405]0:   1%|          | 9/1000 [00:03<05:32,  2.98it/s, Loss/Training=0.661]:actor_name:ray_tune_trainable
Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_74382_00000_0_2025-01-27_14-48-56/checkpoint_tmp04ecae
[INFO 2025-01-27 14:49:59,054] trainable.py: 904  Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_74382_00000_0_2025-01-27_14-48-56/checkpoint_tmp04ecae
Current state after restoring: {'_iteration': 200, '_timesteps_total': None, '_time_total': 7.965668201446533, '_episodes_total': None}
[INFO 2025-01-27 14:49:59,054] trainable.py: 913  Current state after restoring: {'_iteration': 200, '_timesteps_total': None, '_time_total': 7.965668201446533, '_episodes_total': None}
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:123: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'data.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:126: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'targets.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/train.py:770: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = to.load(save_file)
0:   0%|          | 0/1000 [00:00<?, ?it/s]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.835]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.586]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.479]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.529]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.304]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.474]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.627]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.548]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.628]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.476]0:   0%|          | 1/1000 [00:00<07:18,  2.28it/s, Loss/Training=0.476]0:   0%|          | 1/1000 [00:00<07:18,  2.28it/s, Loss/Training=0.281]0:   0%|          | 1/1000 [00:00<07:18,  2.28it/s, Loss/Training=0.338]0:   0%|          | 1/1000 [00:00<07:18,  2.28it/s, Loss/Training=0.313]0:   0%|          | 1/1000 [00:00<07:18,  2.28it/s, Loss/Training=0.495]0:   0%|          | 1/1000 [00:00<07:18,  2.28it/s, Loss/Training=0.472]0:   0%|          | 1/1000 [00:00<07:18,  2.28it/s, Loss/Training=0.394]0:   0%|          | 1/1000 [00:00<07:18,  2.28it/s, Loss/Training=0.471]0:   0%|          | 1/1000 [00:00<07:18,  2.28it/s, Loss/Training=0.728]0:   0%|          | 1/1000 [00:00<07:18,  2.28it/s, Loss/Training=0.592]0:   0%|          | 1/1000 [00:00<07:18,  2.28it/s, Loss/Training=0.439]0:   0%|          | 2/1000 [00:00<06:20,  2.63it/s, Loss/Training=0.439]0:   0%|          | 2/1000 [00:00<06:20,  2.63it/s, Loss/Training=0.56] 0:   0%|          | 2/1000 [00:00<06:20,  2.63it/s, Loss/Training=0.36]0:   0%|          | 2/1000 [00:00<06:20,  2.63it/s, Loss/Training=0.411]0:   0%|          | 2/1000 [00:00<06:20,  2.63it/s, Loss/Training=0.614]0:   0%|          | 2/1000 [00:00<06:20,  2.63it/s, Loss/Training=0.587]0:   0%|          | 2/1000 [00:00<06:20,  2.63it/s, Loss/Training=0.532]0:   0%|          | 2/1000 [00:00<06:20,  2.63it/s, Loss/Training=0.506]0:   0%|          | 2/1000 [00:00<06:20,  2.63it/s, Loss/Training=0.509]0:   0%|          | 2/1000 [00:01<06:20,  2.63it/s, Loss/Training=0.538]0:   0%|          | 2/1000 [00:01<06:20,  2.63it/s, Loss/Training=0.433]0:   0%|          | 3/1000 [00:01<05:54,  2.81it/s, Loss/Training=0.433]0:   0%|          | 3/1000 [00:01<05:54,  2.81it/s, Loss/Training=0.514]0:   0%|          | 3/1000 [00:01<05:54,  2.81it/s, Loss/Training=0.697]0:   0%|          | 3/1000 [00:01<05:54,  2.81it/s, Loss/Training=0.549]0:   0%|          | 3/1000 [00:01<05:54,  2.81it/s, Loss/Training=0.39] 0:   0%|          | 3/1000 [00:01<05:54,  2.81it/s, Loss/Training=0.789]0:   0%|          | 3/1000 [00:01<05:54,  2.81it/s, Loss/Training=0.697]0:   0%|          | 3/1000 [00:01<05:54,  2.81it/s, Loss/Training=0.725]0:   0%|          | 3/1000 [00:01<05:54,  2.81it/s, Loss/Training=0.802]0:   0%|          | 3/1000 [00:01<05:54,  2.81it/s, Loss/Training=0.369]0:   0%|          | 3/1000 [00:01<05:54,  2.81it/s, Loss/Training=0.524]0:   0%|          | 4/1000 [00:01<05:43,  2.90it/s, Loss/Training=0.524]0:   0%|          | 4/1000 [00:01<05:43,  2.90it/s, Loss/Training=0.513]0:   0%|          | 4/1000 [00:01<05:43,  2.90it/s, Loss/Training=0.371]0:   0%|          | 4/1000 [00:01<05:43,  2.90it/s, Loss/Training=0.355]0:   0%|          | 4/1000 [00:01<05:43,  2.90it/s, Loss/Training=0.589]0:   0%|          | 4/1000 [00:01<05:43,  2.90it/s, Loss/Training=0.549]0:   0%|          | 4/1000 [00:01<05:43,  2.90it/s, Loss/Training=0.477]0:   0%|          | 4/1000 [00:01<05:43,  2.90it/s, Loss/Training=0.643]0:   0%|          | 4/1000 [00:01<05:43,  2.90it/s, Loss/Training=0.598]0:   0%|          | 4/1000 [00:01<05:43,  2.90it/s, Loss/Training=0.438]0:   0%|          | 4/1000 [00:01<05:43,  2.90it/s, Loss/Training=0.482]0:   0%|          | 5/1000 [00:01<05:37,  2.95it/s, Loss/Training=0.482]0:   0%|          | 5/1000 [00:01<05:37,  2.95it/s, Loss/Training=0.648]0:   0%|          | 5/1000 [00:01<05:37,  2.95it/s, Loss/Training=0.482]0:   0%|          | 5/1000 [00:01<05:37,  2.95it/s, Loss/Training=0.47] 0:   0%|          | 5/1000 [00:01<05:37,  2.95it/s, Loss/Training=0.405]0:   0%|          | 5/1000 [00:01<05:37,  2.95it/s, Loss/Training=0.733]0:   0%|          | 5/1000 [00:01<05:37,  2.95it/s, Loss/Training=0.387]0:   0%|          | 5/1000 [00:01<05:37,  2.95it/s, Loss/Training=0.419]0:   0%|          | 5/1000 [00:01<05:37,  2.95it/s, Loss/Training=0.474]0:   0%|          | 5/1000 [00:02<05:37,  2.95it/s, Loss/Training=0.551]0:   0%|          | 5/1000 [00:02<05:37,  2.95it/s, Loss/Training=0.557]0:   1%|          | 6/1000 [00:02<05:34,  2.98it/s, Loss/Training=0.557]0:   1%|          | 6/1000 [00:02<05:34,  2.98it/s, Loss/Training=0.475]0:   1%|          | 6/1000 [00:02<05:34,  2.98it/s, Loss/Training=0.453]0:   1%|          | 6/1000 [00:02<05:34,  2.98it/s, Loss/Training=0.733]0:   1%|          | 6/1000 [00:02<05:34,  2.98it/s, Loss/Training=0.335]0:   1%|          | 6/1000 [00:02<05:34,  2.98it/s, Loss/Training=0.566]0:   1%|          | 6/1000 [00:02<05:34,  2.98it/s, Loss/Training=0.396]0:   1%|          | 6/1000 [00:02<05:34,  2.98it/s, Loss/Training=0.543]0:   1%|          | 6/1000 [00:02<05:34,  2.98it/s, Loss/Training=0.374]0:   1%|          | 6/1000 [00:02<05:34,  2.98it/s, Loss/Training=0.65] 0:   1%|          | 6/1000 [00:02<05:34,  2.98it/s, Loss/Training=0.412]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.412]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.617]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.584]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.557]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.413]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.447]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.66] 0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.55]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.507]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.424]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.428]0:   1%|          | 8/1000 [00:02<05:30,  3.00it/s, Loss/Training=0.428]0:   1%|          | 8/1000 [00:02<05:30,  3.00it/s, Loss/Training=0.542]0:   1%|          | 8/1000 [00:02<05:30,  3.00it/s, Loss/Training=0.459]0:   1%|          | 8/1000 [00:02<05:30,  3.00it/s, Loss/Training=0.398]0:   1%|          | 8/1000 [00:02<05:30,  3.00it/s, Loss/Training=0.423]0:   1%|          | 8/1000 [00:02<05:30,  3.00it/s, Loss/Training=0.73] 0:   1%|          | 8/1000 [00:02<05:30,  3.00it/s, Loss/Training=0.444]0:   1%|          | 8/1000 [00:02<05:30,  3.00it/s, Loss/Training=0.495]0:   1%|          | 8/1000 [00:02<05:30,  3.00it/s, Loss/Training=0.76] 0:   1%|          | 8/1000 [00:02<05:30,  3.00it/s, Loss/Training=0.605]0:   1%|          | 8/1000 [00:03<05:30,  3.00it/s, Loss/Training=0.575]0:   1%|          | 9/1000 [00:03<05:26,  3.03it/s, Loss/Training=0.575]0:   1%|          | 9/1000 [00:03<05:26,  3.03it/s, Loss/Training=0.532]0:   1%|          | 9/1000 [00:03<05:26,  3.03it/s, Loss/Training=0.365]0:   1%|          | 9/1000 [00:03<05:26,  3.03it/s, Loss/Training=0.412]0:   1%|          | 9/1000 [00:03<05:26,  3.03it/s, Loss/Training=0.474]0:   1%|          | 9/1000 [00:03<05:26,  3.03it/s, Loss/Training=0.607]0:   1%|          | 9/1000 [00:03<05:26,  3.03it/s, Loss/Training=0.443]0:   1%|          | 9/1000 [00:03<05:26,  3.03it/s, Loss/Training=0.262]0:   1%|          | 9/1000 [00:03<05:26,  3.03it/s, Loss/Training=0.363]0:   1%|          | 9/1000 [00:03<05:26,  3.03it/s, Loss/Training=0.333]0:   1%|          | 9/1000 [00:03<05:26,  3.03it/s, Loss/Training=0.353]:actor_name:ray_tune_trainable
Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_74382_00000_0_2025-01-27_14-48-56/checkpoint_tmp5685af
[INFO 2025-01-27 14:50:26,142] trainable.py: 904  Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_74382_00000_0_2025-01-27_14-48-56/checkpoint_tmp5685af
Current state after restoring: {'_iteration': 300, '_timesteps_total': None, '_time_total': 11.944438457489014, '_episodes_total': None}
[INFO 2025-01-27 14:50:26,142] trainable.py: 913  Current state after restoring: {'_iteration': 300, '_timesteps_total': None, '_time_total': 11.944438457489014, '_episodes_total': None}
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:123: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'data.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:126: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'targets.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/train.py:770: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = to.load(save_file)
0:   0%|          | 0/1000 [00:00<?, ?it/s]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.409]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.313]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.459]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.53] 0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.451]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.393]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.505]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.491]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.406]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.655]0:   0%|          | 1/1000 [00:00<10:37,  1.57it/s, Loss/Training=0.655]0:   0%|          | 1/1000 [00:00<10:37,  1.57it/s, Loss/Training=0.509]0:   0%|          | 1/1000 [00:00<10:37,  1.57it/s, Loss/Training=0.44] 0:   0%|          | 1/1000 [00:00<10:37,  1.57it/s, Loss/Training=0.392]0:   0%|          | 1/1000 [00:00<10:37,  1.57it/s, Loss/Training=0.478]0:   0%|          | 1/1000 [00:00<10:37,  1.57it/s, Loss/Training=0.453]0:   0%|          | 1/1000 [00:00<10:37,  1.57it/s, Loss/Training=0.425]0:   0%|          | 1/1000 [00:00<10:37,  1.57it/s, Loss/Training=0.539]0:   0%|          | 1/1000 [00:00<10:37,  1.57it/s, Loss/Training=0.594]0:   0%|          | 1/1000 [00:00<10:37,  1.57it/s, Loss/Training=0.596]0:   0%|          | 1/1000 [00:00<10:37,  1.57it/s, Loss/Training=0.355]0:   0%|          | 2/1000 [00:01<08:05,  2.05it/s, Loss/Training=0.355]0:   0%|          | 2/1000 [00:01<08:05,  2.05it/s, Loss/Training=0.549]0:   0%|          | 2/1000 [00:01<08:05,  2.05it/s, Loss/Training=0.369]0:   0%|          | 2/1000 [00:01<08:05,  2.05it/s, Loss/Training=0.463]0:   0%|          | 2/1000 [00:01<08:05,  2.05it/s, Loss/Training=0.529]0:   0%|          | 2/1000 [00:01<08:05,  2.05it/s, Loss/Training=0.401]0:   0%|          | 2/1000 [00:01<08:05,  2.05it/s, Loss/Training=0.325]0:   0%|          | 2/1000 [00:01<08:05,  2.05it/s, Loss/Training=0.401]0:   0%|          | 2/1000 [00:01<08:05,  2.05it/s, Loss/Training=0.338]0:   0%|          | 2/1000 [00:01<08:05,  2.05it/s, Loss/Training=0.365]0:   0%|          | 2/1000 [00:01<08:05,  2.05it/s, Loss/Training=0.515]0:   0%|          | 3/1000 [00:01<06:50,  2.43it/s, Loss/Training=0.515]0:   0%|          | 3/1000 [00:01<06:50,  2.43it/s, Loss/Training=0.588]0:   0%|          | 3/1000 [00:01<06:50,  2.43it/s, Loss/Training=0.505]0:   0%|          | 3/1000 [00:01<06:50,  2.43it/s, Loss/Training=0.447]0:   0%|          | 3/1000 [00:01<06:50,  2.43it/s, Loss/Training=0.309]0:   0%|          | 3/1000 [00:01<06:50,  2.43it/s, Loss/Training=0.432]0:   0%|          | 3/1000 [00:01<06:50,  2.43it/s, Loss/Training=0.664]0:   0%|          | 3/1000 [00:01<06:50,  2.43it/s, Loss/Training=0.672]0:   0%|          | 3/1000 [00:01<06:50,  2.43it/s, Loss/Training=0.542]0:   0%|          | 3/1000 [00:01<06:50,  2.43it/s, Loss/Training=0.58] 0:   0%|          | 3/1000 [00:01<06:50,  2.43it/s, Loss/Training=0.796]0:   0%|          | 4/1000 [00:01<06:16,  2.64it/s, Loss/Training=0.796]0:   0%|          | 4/1000 [00:01<06:16,  2.64it/s, Loss/Training=0.651]0:   0%|          | 4/1000 [00:01<06:16,  2.64it/s, Loss/Training=0.365]0:   0%|          | 4/1000 [00:01<06:16,  2.64it/s, Loss/Training=0.491]0:   0%|          | 4/1000 [00:01<06:16,  2.64it/s, Loss/Training=0.752]0:   0%|          | 4/1000 [00:01<06:16,  2.64it/s, Loss/Training=0.568]0:   0%|          | 4/1000 [00:01<06:16,  2.64it/s, Loss/Training=0.463]0:   0%|          | 4/1000 [00:01<06:16,  2.64it/s, Loss/Training=0.678]0:   0%|          | 4/1000 [00:01<06:16,  2.64it/s, Loss/Training=0.399]0:   0%|          | 4/1000 [00:01<06:16,  2.64it/s, Loss/Training=0.342]0:   0%|          | 4/1000 [00:01<06:16,  2.64it/s, Loss/Training=0.356]0:   0%|          | 5/1000 [00:01<05:57,  2.78it/s, Loss/Training=0.356]0:   0%|          | 5/1000 [00:02<05:57,  2.78it/s, Loss/Training=0.52] 0:   0%|          | 5/1000 [00:02<05:57,  2.78it/s, Loss/Training=0.635]0:   0%|          | 5/1000 [00:02<05:57,  2.78it/s, Loss/Training=0.469]0:   0%|          | 5/1000 [00:02<05:57,  2.78it/s, Loss/Training=0.474]0:   0%|          | 5/1000 [00:02<05:57,  2.78it/s, Loss/Training=0.413]0:   0%|          | 5/1000 [00:02<05:57,  2.78it/s, Loss/Training=0.497]0:   0%|          | 5/1000 [00:02<05:57,  2.78it/s, Loss/Training=0.507]0:   0%|          | 5/1000 [00:02<05:57,  2.78it/s, Loss/Training=0.488]0:   0%|          | 5/1000 [00:02<05:57,  2.78it/s, Loss/Training=0.329]0:   0%|          | 5/1000 [00:02<05:57,  2.78it/s, Loss/Training=0.317]0:   1%|          | 6/1000 [00:02<05:45,  2.88it/s, Loss/Training=0.317]0:   1%|          | 6/1000 [00:02<05:45,  2.88it/s, Loss/Training=0.498]0:   1%|          | 6/1000 [00:02<05:45,  2.88it/s, Loss/Training=0.415]0:   1%|          | 6/1000 [00:02<05:45,  2.88it/s, Loss/Training=0.335]0:   1%|          | 6/1000 [00:02<05:45,  2.88it/s, Loss/Training=0.453]0:   1%|          | 6/1000 [00:02<05:45,  2.88it/s, Loss/Training=0.449]0:   1%|          | 6/1000 [00:02<05:45,  2.88it/s, Loss/Training=0.369]0:   1%|          | 6/1000 [00:02<05:45,  2.88it/s, Loss/Training=0.57] 0:   1%|          | 6/1000 [00:02<05:45,  2.88it/s, Loss/Training=0.527]0:   1%|          | 6/1000 [00:02<05:45,  2.88it/s, Loss/Training=0.336]0:   1%|          | 6/1000 [00:02<05:45,  2.88it/s, Loss/Training=0.51] 0:   1%|          | 7/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.51]0:   1%|          | 7/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.489]0:   1%|          | 7/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.446]0:   1%|          | 7/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.495]0:   1%|          | 7/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.242]0:   1%|          | 7/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.499]0:   1%|          | 7/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.607]0:   1%|          | 7/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.47] 0:   1%|          | 7/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.559]0:   1%|          | 7/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.382]0:   1%|          | 7/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.399]0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.399]0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.627]0:   1%|          | 8/1000 [00:03<05:31,  2.99it/s, Loss/Training=0.469]0:   1%|          | 8/1000 [00:03<05:31,  2.99it/s, Loss/Training=0.435]0:   1%|          | 8/1000 [00:03<05:31,  2.99it/s, Loss/Training=0.382]0:   1%|          | 8/1000 [00:03<05:31,  2.99it/s, Loss/Training=0.444]0:   1%|          | 8/1000 [00:03<05:31,  2.99it/s, Loss/Training=0.651]0:   1%|          | 8/1000 [00:03<05:31,  2.99it/s, Loss/Training=0.457]0:   1%|          | 8/1000 [00:03<05:31,  2.99it/s, Loss/Training=0.507]0:   1%|          | 8/1000 [00:03<05:31,  2.99it/s, Loss/Training=0.227]0:   1%|          | 8/1000 [00:03<05:31,  2.99it/s, Loss/Training=0.409]0:   1%|          | 9/1000 [00:03<05:28,  3.01it/s, Loss/Training=0.409]0:   1%|          | 9/1000 [00:03<05:28,  3.01it/s, Loss/Training=0.252]0:   1%|          | 9/1000 [00:03<05:28,  3.01it/s, Loss/Training=0.357]0:   1%|          | 9/1000 [00:03<05:28,  3.01it/s, Loss/Training=0.601]0:   1%|          | 9/1000 [00:03<05:28,  3.01it/s, Loss/Training=0.502]0:   1%|          | 9/1000 [00:03<05:28,  3.01it/s, Loss/Training=0.525]0:   1%|          | 9/1000 [00:03<05:28,  3.01it/s, Loss/Training=0.482]0:   1%|          | 9/1000 [00:03<05:28,  3.01it/s, Loss/Training=0.42] 0:   1%|          | 9/1000 [00:03<05:28,  3.01it/s, Loss/Training=0.678]0:   1%|          | 9/1000 [00:03<05:28,  3.01it/s, Loss/Training=0.358]0:   1%|          | 9/1000 [00:03<05:28,  3.01it/s, Loss/Training=0.406]0:   1%|          | 9/1000 [00:03<06:50,  2.41it/s, Loss/Training=0.406]
:actor_name:ray_tune_trainable
Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_74382_00000_0_2025-01-27_14-48-56/checkpoint_tmpc7d13a
[INFO 2025-01-27 14:50:54,895] trainable.py: 904  Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_74382_00000_0_2025-01-27_14-48-56/checkpoint_tmpc7d13a
Current state after restoring: {'_iteration': 300, '_timesteps_total': None, '_time_total': 11.93421196937561, '_episodes_total': None}
[INFO 2025-01-27 14:50:54,895] trainable.py: 913  Current state after restoring: {'_iteration': 300, '_timesteps_total': None, '_time_total': 11.93421196937561, '_episodes_total': None}
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:123: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'data.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:126: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'targets.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/train.py:770: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = to.load(save_file)
0:   0%|          | 0/1000 [00:00<?, ?it/s]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.437]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.417]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.423]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.366]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.329]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.541]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.309]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.392]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.272]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.565]0:   0%|          | 1/1000 [00:00<07:21,  2.26it/s, Loss/Training=0.565]0:   0%|          | 1/1000 [00:00<07:21,  2.26it/s, Loss/Training=0.698]0:   0%|          | 1/1000 [00:00<07:21,  2.26it/s, Loss/Training=0.566]0:   0%|          | 1/1000 [00:00<07:21,  2.26it/s, Loss/Training=0.575]0:   0%|          | 1/1000 [00:00<07:21,  2.26it/s, Loss/Training=0.358]0:   0%|          | 1/1000 [00:00<07:21,  2.26it/s, Loss/Training=0.396]0:   0%|          | 1/1000 [00:00<07:21,  2.26it/s, Loss/Training=0.587]0:   0%|          | 1/1000 [00:00<07:21,  2.26it/s, Loss/Training=0.535]0:   0%|          | 1/1000 [00:00<07:21,  2.26it/s, Loss/Training=0.251]0:   0%|          | 1/1000 [00:00<07:21,  2.26it/s, Loss/Training=0.415]0:   0%|          | 1/1000 [00:00<07:21,  2.26it/s, Loss/Training=0.535]0:   0%|          | 2/1000 [00:00<06:17,  2.65it/s, Loss/Training=0.535]0:   0%|          | 2/1000 [00:00<06:17,  2.65it/s, Loss/Training=0.445]0:   0%|          | 2/1000 [00:00<06:17,  2.65it/s, Loss/Training=0.851]0:   0%|          | 2/1000 [00:00<06:17,  2.65it/s, Loss/Training=0.6]  0:   0%|          | 2/1000 [00:00<06:17,  2.65it/s, Loss/Training=0.425]0:   0%|          | 2/1000 [00:00<06:17,  2.65it/s, Loss/Training=0.572]0:   0%|          | 2/1000 [00:00<06:17,  2.65it/s, Loss/Training=0.428]0:   0%|          | 2/1000 [00:00<06:17,  2.65it/s, Loss/Training=0.574]0:   0%|          | 2/1000 [00:00<06:17,  2.65it/s, Loss/Training=0.524]0:   0%|          | 2/1000 [00:01<06:17,  2.65it/s, Loss/Training=0.429]0:   0%|          | 2/1000 [00:01<06:17,  2.65it/s, Loss/Training=0.382]0:   0%|          | 3/1000 [00:01<05:59,  2.77it/s, Loss/Training=0.382]0:   0%|          | 3/1000 [00:01<05:59,  2.77it/s, Loss/Training=0.417]0:   0%|          | 3/1000 [00:01<05:59,  2.77it/s, Loss/Training=0.472]0:   0%|          | 3/1000 [00:01<05:59,  2.77it/s, Loss/Training=0.28] 0:   0%|          | 3/1000 [00:01<05:59,  2.77it/s, Loss/Training=0.402]0:   0%|          | 3/1000 [00:01<05:59,  2.77it/s, Loss/Training=0.699]0:   0%|          | 3/1000 [00:01<05:59,  2.77it/s, Loss/Training=0.243]0:   0%|          | 3/1000 [00:01<05:59,  2.77it/s, Loss/Training=0.347]0:   0%|          | 3/1000 [00:01<05:59,  2.77it/s, Loss/Training=0.582]0:   0%|          | 3/1000 [00:01<05:59,  2.77it/s, Loss/Training=0.633]0:   0%|          | 3/1000 [00:01<05:59,  2.77it/s, Loss/Training=0.625]0:   0%|          | 4/1000 [00:01<05:48,  2.86it/s, Loss/Training=0.625]0:   0%|          | 4/1000 [00:01<05:48,  2.86it/s, Loss/Training=0.463]0:   0%|          | 4/1000 [00:01<05:48,  2.86it/s, Loss/Training=0.311]0:   0%|          | 4/1000 [00:01<05:48,  2.86it/s, Loss/Training=0.408]0:   0%|          | 4/1000 [00:01<05:48,  2.86it/s, Loss/Training=0.369]0:   0%|          | 4/1000 [00:01<05:48,  2.86it/s, Loss/Training=0.384]0:   0%|          | 4/1000 [00:01<05:48,  2.86it/s, Loss/Training=0.287]0:   0%|          | 4/1000 [00:01<05:48,  2.86it/s, Loss/Training=0.429]0:   0%|          | 4/1000 [00:01<05:48,  2.86it/s, Loss/Training=0.552]0:   0%|          | 4/1000 [00:01<05:48,  2.86it/s, Loss/Training=0.357]0:   0%|          | 4/1000 [00:01<05:48,  2.86it/s, Loss/Training=0.317]0:   0%|          | 5/1000 [00:01<05:47,  2.86it/s, Loss/Training=0.317]0:   0%|          | 5/1000 [00:01<05:47,  2.86it/s, Loss/Training=0.804]0:   0%|          | 5/1000 [00:01<05:47,  2.86it/s, Loss/Training=0.383]0:   0%|          | 5/1000 [00:01<05:47,  2.86it/s, Loss/Training=0.318]0:   0%|          | 5/1000 [00:01<05:47,  2.86it/s, Loss/Training=0.497]0:   0%|          | 5/1000 [00:01<05:47,  2.86it/s, Loss/Training=0.459]0:   0%|          | 5/1000 [00:01<05:47,  2.86it/s, Loss/Training=0.519]0:   0%|          | 5/1000 [00:01<05:47,  2.86it/s, Loss/Training=0.628]0:   0%|          | 5/1000 [00:02<05:47,  2.86it/s, Loss/Training=0.521]0:   0%|          | 5/1000 [00:02<05:47,  2.86it/s, Loss/Training=0.375]0:   0%|          | 5/1000 [00:02<05:47,  2.86it/s, Loss/Training=0.42] 0:   1%|          | 6/1000 [00:02<05:42,  2.90it/s, Loss/Training=0.42]0:   1%|          | 6/1000 [00:02<05:42,  2.90it/s, Loss/Training=0.447]0:   1%|          | 6/1000 [00:02<05:42,  2.90it/s, Loss/Training=0.402]0:   1%|          | 6/1000 [00:02<05:42,  2.90it/s, Loss/Training=0.679]0:   1%|          | 6/1000 [00:02<05:42,  2.90it/s, Loss/Training=0.473]0:   1%|          | 6/1000 [00:02<05:42,  2.90it/s, Loss/Training=0.579]0:   1%|          | 6/1000 [00:02<05:42,  2.90it/s, Loss/Training=0.509]0:   1%|          | 6/1000 [00:02<05:42,  2.90it/s, Loss/Training=0.73] 0:   1%|          | 6/1000 [00:02<05:42,  2.90it/s, Loss/Training=0.359]0:   1%|          | 6/1000 [00:02<05:42,  2.90it/s, Loss/Training=0.535]0:   1%|          | 6/1000 [00:02<05:42,  2.90it/s, Loss/Training=0.188]0:   1%|          | 7/1000 [00:02<05:49,  2.84it/s, Loss/Training=0.188]0:   1%|          | 7/1000 [00:02<05:49,  2.84it/s, Loss/Training=0.406]0:   1%|          | 7/1000 [00:02<05:49,  2.84it/s, Loss/Training=0.458]0:   1%|          | 7/1000 [00:02<05:49,  2.84it/s, Loss/Training=0.416]0:   1%|          | 7/1000 [00:02<05:49,  2.84it/s, Loss/Training=0.418]0:   1%|          | 7/1000 [00:02<05:49,  2.84it/s, Loss/Training=0.462]0:   1%|          | 7/1000 [00:02<05:49,  2.84it/s, Loss/Training=0.409]0:   1%|          | 7/1000 [00:02<05:49,  2.84it/s, Loss/Training=0.294]0:   1%|          | 7/1000 [00:02<05:49,  2.84it/s, Loss/Training=0.486]0:   1%|          | 7/1000 [00:02<05:49,  2.84it/s, Loss/Training=0.421]0:   1%|          | 7/1000 [00:02<05:49,  2.84it/s, Loss/Training=0.558]0:   1%|          | 8/1000 [00:02<05:45,  2.87it/s, Loss/Training=0.558]0:   1%|          | 8/1000 [00:02<05:45,  2.87it/s, Loss/Training=0.526]0:   1%|          | 8/1000 [00:02<05:45,  2.87it/s, Loss/Training=0.604]0:   1%|          | 8/1000 [00:02<05:45,  2.87it/s, Loss/Training=0.46] 0:   1%|          | 8/1000 [00:02<05:45,  2.87it/s, Loss/Training=0.581]0:   1%|          | 8/1000 [00:02<05:45,  2.87it/s, Loss/Training=0.632]0:   1%|          | 8/1000 [00:03<05:45,  2.87it/s, Loss/Training=0.541]0:   1%|          | 8/1000 [00:03<05:45,  2.87it/s, Loss/Training=0.39] 0:   1%|          | 8/1000 [00:03<05:45,  2.87it/s, Loss/Training=0.282]0:   1%|          | 8/1000 [00:03<05:45,  2.87it/s, Loss/Training=0.457]0:   1%|          | 8/1000 [00:03<05:45,  2.87it/s, Loss/Training=0.395]0:   1%|          | 9/1000 [00:03<05:49,  2.84it/s, Loss/Training=0.395]0:   1%|          | 9/1000 [00:03<05:49,  2.84it/s, Loss/Training=0.404]0:   1%|          | 9/1000 [00:03<05:49,  2.84it/s, Loss/Training=0.506]0:   1%|          | 9/1000 [00:03<05:49,  2.84it/s, Loss/Training=0.437]0:   1%|          | 9/1000 [00:03<05:49,  2.84it/s, Loss/Training=0.473]0:   1%|          | 9/1000 [00:03<05:49,  2.84it/s, Loss/Training=0.773]0:   1%|          | 9/1000 [00:03<05:49,  2.84it/s, Loss/Training=0.624]0:   1%|          | 9/1000 [00:03<05:49,  2.84it/s, Loss/Training=0.365]0:   1%|          | 9/1000 [00:03<05:49,  2.84it/s, Loss/Training=0.443]0:   1%|          | 9/1000 [00:03<05:49,  2.84it/s, Loss/Training=0.442]0:   1%|          | 9/1000 [00:03<05:49,  2.84it/s, Loss/Training=0.549]0:   1%|          | 9/1000 [00:03<06:40,  2.47it/s, Loss/Training=0.549]
:actor_name:ray_tune_trainable
Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_74382_00000_0_2025-01-27_14-48-56/checkpoint_tmp319fcc
[INFO 2025-01-27 14:51:23,844] trainable.py: 904  Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_74382_00000_0_2025-01-27_14-48-56/checkpoint_tmp319fcc
Current state after restoring: {'_iteration': 400, '_timesteps_total': None, '_time_total': 15.925095558166504, '_episodes_total': None}
[INFO 2025-01-27 14:51:23,844] trainable.py: 913  Current state after restoring: {'_iteration': 400, '_timesteps_total': None, '_time_total': 15.925095558166504, '_episodes_total': None}
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:123: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'data.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:126: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'targets.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/train.py:770: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = to.load(save_file)
0:   0%|          | 0/1000 [00:00<?, ?it/s]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.294]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.466]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.591]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.262]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.228]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.569]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.404]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.344]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.404]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.714]0:   0%|          | 1/1000 [00:00<07:17,  2.29it/s, Loss/Training=0.714]0:   0%|          | 1/1000 [00:00<07:17,  2.29it/s, Loss/Training=0.4]  0:   0%|          | 1/1000 [00:00<07:17,  2.29it/s, Loss/Training=0.474]0:   0%|          | 1/1000 [00:00<07:17,  2.29it/s, Loss/Training=0.478]0:   0%|          | 1/1000 [00:00<07:17,  2.29it/s, Loss/Training=0.488]0:   0%|          | 1/1000 [00:00<07:17,  2.29it/s, Loss/Training=0.572]0:   0%|          | 1/1000 [00:00<07:17,  2.29it/s, Loss/Training=0.551]0:   0%|          | 1/1000 [00:00<07:17,  2.29it/s, Loss/Training=0.249]0:   0%|          | 1/1000 [00:00<07:17,  2.29it/s, Loss/Training=0.69] 0:   0%|          | 1/1000 [00:00<07:17,  2.29it/s, Loss/Training=0.355]0:   0%|          | 1/1000 [00:00<07:17,  2.29it/s, Loss/Training=0.391]0:   0%|          | 2/1000 [00:00<06:12,  2.68it/s, Loss/Training=0.391]0:   0%|          | 2/1000 [00:00<06:12,  2.68it/s, Loss/Training=0.789]0:   0%|          | 2/1000 [00:00<06:12,  2.68it/s, Loss/Training=0.48] 0:   0%|          | 2/1000 [00:00<06:12,  2.68it/s, Loss/Training=0.481]0:   0%|          | 2/1000 [00:00<06:12,  2.68it/s, Loss/Training=0.451]0:   0%|          | 2/1000 [00:00<06:12,  2.68it/s, Loss/Training=0.61] 0:   0%|          | 2/1000 [00:00<06:12,  2.68it/s, Loss/Training=0.409]0:   0%|          | 2/1000 [00:00<06:12,  2.68it/s, Loss/Training=0.356]0:   0%|          | 2/1000 [00:00<06:12,  2.68it/s, Loss/Training=0.354]0:   0%|          | 2/1000 [00:01<06:12,  2.68it/s, Loss/Training=0.619]0:   0%|          | 2/1000 [00:01<06:12,  2.68it/s, Loss/Training=0.354]0:   0%|          | 3/1000 [00:01<05:55,  2.80it/s, Loss/Training=0.354]0:   0%|          | 3/1000 [00:01<05:55,  2.80it/s, Loss/Training=0.413]0:   0%|          | 3/1000 [00:01<05:55,  2.80it/s, Loss/Training=0.488]0:   0%|          | 3/1000 [00:01<05:55,  2.80it/s, Loss/Training=0.412]0:   0%|          | 3/1000 [00:01<05:55,  2.80it/s, Loss/Training=0.551]0:   0%|          | 3/1000 [00:01<05:55,  2.80it/s, Loss/Training=0.726]0:   0%|          | 3/1000 [00:01<05:55,  2.80it/s, Loss/Training=0.704]0:   0%|          | 3/1000 [00:01<05:55,  2.80it/s, Loss/Training=0.319]0:   0%|          | 3/1000 [00:01<05:55,  2.80it/s, Loss/Training=0.592]0:   0%|          | 3/1000 [00:01<05:55,  2.80it/s, Loss/Training=0.303]0:   0%|          | 3/1000 [00:01<05:55,  2.80it/s, Loss/Training=0.487]0:   0%|          | 4/1000 [00:01<05:46,  2.88it/s, Loss/Training=0.487]0:   0%|          | 4/1000 [00:01<05:46,  2.88it/s, Loss/Training=0.529]0:   0%|          | 4/1000 [00:01<05:46,  2.88it/s, Loss/Training=0.556]0:   0%|          | 4/1000 [00:01<05:46,  2.88it/s, Loss/Training=0.465]0:   0%|          | 4/1000 [00:01<05:46,  2.88it/s, Loss/Training=0.468]0:   0%|          | 4/1000 [00:01<05:46,  2.88it/s, Loss/Training=0.445]0:   0%|          | 4/1000 [00:01<05:46,  2.88it/s, Loss/Training=0.406]0:   0%|          | 4/1000 [00:01<05:46,  2.88it/s, Loss/Training=0.374]0:   0%|          | 4/1000 [00:01<05:46,  2.88it/s, Loss/Training=0.458]0:   0%|          | 4/1000 [00:01<05:46,  2.88it/s, Loss/Training=0.556]0:   0%|          | 4/1000 [00:01<05:46,  2.88it/s, Loss/Training=0.346]0:   0%|          | 5/1000 [00:01<05:40,  2.92it/s, Loss/Training=0.346]0:   0%|          | 5/1000 [00:01<05:40,  2.92it/s, Loss/Training=0.233]0:   0%|          | 5/1000 [00:01<05:40,  2.92it/s, Loss/Training=0.367]0:   0%|          | 5/1000 [00:01<05:40,  2.92it/s, Loss/Training=0.456]0:   0%|          | 5/1000 [00:01<05:40,  2.92it/s, Loss/Training=0.45] 0:   0%|          | 5/1000 [00:01<05:40,  2.92it/s, Loss/Training=0.532]0:   0%|          | 5/1000 [00:01<05:40,  2.92it/s, Loss/Training=0.484]0:   0%|          | 5/1000 [00:01<05:40,  2.92it/s, Loss/Training=0.467]0:   0%|          | 5/1000 [00:01<05:40,  2.92it/s, Loss/Training=0.374]0:   0%|          | 5/1000 [00:02<05:40,  2.92it/s, Loss/Training=0.427]0:   0%|          | 5/1000 [00:02<05:40,  2.92it/s, Loss/Training=0.538]0:   1%|          | 6/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.538]0:   1%|          | 6/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.414]0:   1%|          | 6/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.464]0:   1%|          | 6/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.44] 0:   1%|          | 6/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.582]0:   1%|          | 6/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.244]0:   1%|          | 6/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.58] 0:   1%|          | 6/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.598]0:   1%|          | 6/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.335]0:   1%|          | 6/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.595]0:   1%|          | 6/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.257]0:   1%|          | 7/1000 [00:02<05:32,  2.99it/s, Loss/Training=0.257]0:   1%|          | 7/1000 [00:02<05:32,  2.99it/s, Loss/Training=0.414]0:   1%|          | 7/1000 [00:02<05:32,  2.99it/s, Loss/Training=0.408]0:   1%|          | 7/1000 [00:02<05:32,  2.99it/s, Loss/Training=0.417]0:   1%|          | 7/1000 [00:02<05:32,  2.99it/s, Loss/Training=0.38] 0:   1%|          | 7/1000 [00:02<05:32,  2.99it/s, Loss/Training=0.759]0:   1%|          | 7/1000 [00:02<05:32,  2.99it/s, Loss/Training=0.273]0:   1%|          | 7/1000 [00:02<05:32,  2.99it/s, Loss/Training=0.385]0:   1%|          | 7/1000 [00:02<05:32,  2.99it/s, Loss/Training=0.461]0:   1%|          | 7/1000 [00:02<05:32,  2.99it/s, Loss/Training=0.253]0:   1%|          | 7/1000 [00:02<05:32,  2.99it/s, Loss/Training=0.289]0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.289]0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.463]0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.764]0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.316]0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.268]0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.541]0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.589]0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.721]0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.39] 0:   1%|          | 8/1000 [00:03<05:31,  2.99it/s, Loss/Training=0.432]0:   1%|          | 8/1000 [00:03<05:31,  2.99it/s, Loss/Training=0.271]0:   1%|          | 9/1000 [00:03<05:28,  3.01it/s, Loss/Training=0.271]0:   1%|          | 9/1000 [00:03<05:28,  3.01it/s, Loss/Training=0.321]0:   1%|          | 9/1000 [00:03<05:28,  3.01it/s, Loss/Training=0.353]0:   1%|          | 9/1000 [00:03<05:28,  3.01it/s, Loss/Training=0.444]0:   1%|          | 9/1000 [00:03<05:28,  3.01it/s, Loss/Training=0.489]0:   1%|          | 9/1000 [00:03<05:28,  3.01it/s, Loss/Training=0.427]0:   1%|          | 9/1000 [00:03<05:28,  3.01it/s, Loss/Training=0.353]0:   1%|          | 9/1000 [00:03<05:28,  3.01it/s, Loss/Training=0.556]0:   1%|          | 9/1000 [00:03<05:28,  3.01it/s, Loss/Training=0.411]0:   1%|          | 9/1000 [00:03<05:28,  3.01it/s, Loss/Training=0.294]0:   1%|          | 9/1000 [00:03<05:28,  3.01it/s, Loss/Training=0.384]0:   1%|          | 9/1000 [00:03<06:35,  2.51it/s, Loss/Training=0.384]
:actor_name:ray_tune_trainable
Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_74382_00000_0_2025-01-27_14-48-56/checkpoint_tmp073aa9
[INFO 2025-01-27 14:51:52,581] trainable.py: 904  Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_74382_00000_0_2025-01-27_14-48-56/checkpoint_tmp073aa9
Current state after restoring: {'_iteration': 500, '_timesteps_total': None, '_time_total': 19.899428367614746, '_episodes_total': None}
[INFO 2025-01-27 14:51:52,581] trainable.py: 913  Current state after restoring: {'_iteration': 500, '_timesteps_total': None, '_time_total': 19.899428367614746, '_episodes_total': None}
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:123: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'data.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:126: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'targets.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/train.py:770: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = to.load(save_file)
0:   0%|          | 0/1000 [00:00<?, ?it/s]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.355]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.631]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.565]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.352]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.365]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.668]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.4]  0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.513]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.321]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.489]0:   0%|          | 1/1000 [00:00<07:19,  2.27it/s, Loss/Training=0.489]0:   0%|          | 1/1000 [00:00<07:19,  2.27it/s, Loss/Training=0.554]0:   0%|          | 1/1000 [00:00<07:19,  2.27it/s, Loss/Training=0.546]0:   0%|          | 1/1000 [00:00<07:19,  2.27it/s, Loss/Training=0.355]0:   0%|          | 1/1000 [00:00<07:19,  2.27it/s, Loss/Training=0.625]0:   0%|          | 1/1000 [00:00<07:19,  2.27it/s, Loss/Training=0.533]0:   0%|          | 1/1000 [00:00<07:19,  2.27it/s, Loss/Training=0.645]0:   0%|          | 1/1000 [00:00<07:19,  2.27it/s, Loss/Training=0.417]0:   0%|          | 1/1000 [00:00<07:19,  2.27it/s, Loss/Training=0.534]0:   0%|          | 1/1000 [00:00<07:19,  2.27it/s, Loss/Training=0.252]0:   0%|          | 1/1000 [00:00<07:19,  2.27it/s, Loss/Training=0.437]0:   0%|          | 2/1000 [00:00<06:15,  2.66it/s, Loss/Training=0.437]0:   0%|          | 2/1000 [00:00<06:15,  2.66it/s, Loss/Training=0.549]0:   0%|          | 2/1000 [00:00<06:15,  2.66it/s, Loss/Training=0.332]0:   0%|          | 2/1000 [00:00<06:15,  2.66it/s, Loss/Training=0.27] 0:   0%|          | 2/1000 [00:00<06:15,  2.66it/s, Loss/Training=0.487]0:   0%|          | 2/1000 [00:00<06:15,  2.66it/s, Loss/Training=0.471]0:   0%|          | 2/1000 [00:00<06:15,  2.66it/s, Loss/Training=0.43] 0:   0%|          | 2/1000 [00:00<06:15,  2.66it/s, Loss/Training=0.321]0:   0%|          | 2/1000 [00:00<06:15,  2.66it/s, Loss/Training=0.408]0:   0%|          | 2/1000 [00:01<06:15,  2.66it/s, Loss/Training=0.368]0:   0%|          | 2/1000 [00:01<06:15,  2.66it/s, Loss/Training=0.418]0:   0%|          | 3/1000 [00:01<07:17,  2.28it/s, Loss/Training=0.418]0:   0%|          | 3/1000 [00:01<07:17,  2.28it/s, Loss/Training=0.66] 0:   0%|          | 3/1000 [00:01<07:17,  2.28it/s, Loss/Training=0.622]0:   0%|          | 3/1000 [00:01<07:17,  2.28it/s, Loss/Training=0.577]0:   0%|          | 3/1000 [00:01<07:17,  2.28it/s, Loss/Training=0.298]0:   0%|          | 3/1000 [00:01<07:17,  2.28it/s, Loss/Training=0.42] 0:   0%|          | 3/1000 [00:01<07:17,  2.28it/s, Loss/Training=0.333]0:   0%|          | 3/1000 [00:01<07:17,  2.28it/s, Loss/Training=0.317]0:   0%|          | 3/1000 [00:01<07:17,  2.28it/s, Loss/Training=0.294]0:   0%|          | 3/1000 [00:01<07:17,  2.28it/s, Loss/Training=0.334]0:   0%|          | 3/1000 [00:01<07:17,  2.28it/s, Loss/Training=0.415]0:   0%|          | 4/1000 [00:01<06:54,  2.41it/s, Loss/Training=0.415]0:   0%|          | 4/1000 [00:01<06:54,  2.41it/s, Loss/Training=0.513]0:   0%|          | 4/1000 [00:01<06:54,  2.41it/s, Loss/Training=0.506]0:   0%|          | 4/1000 [00:01<06:54,  2.41it/s, Loss/Training=0.317]0:   0%|          | 4/1000 [00:01<06:54,  2.41it/s, Loss/Training=0.445]0:   0%|          | 4/1000 [00:01<06:54,  2.41it/s, Loss/Training=0.428]0:   0%|          | 4/1000 [00:01<06:54,  2.41it/s, Loss/Training=0.41] 0:   0%|          | 4/1000 [00:01<06:54,  2.41it/s, Loss/Training=0.419]0:   0%|          | 4/1000 [00:01<06:54,  2.41it/s, Loss/Training=0.514]0:   0%|          | 4/1000 [00:01<06:54,  2.41it/s, Loss/Training=0.479]0:   0%|          | 4/1000 [00:01<06:54,  2.41it/s, Loss/Training=0.308]0:   0%|          | 5/1000 [00:01<06:24,  2.59it/s, Loss/Training=0.308]0:   0%|          | 5/1000 [00:02<06:24,  2.59it/s, Loss/Training=0.361]0:   0%|          | 5/1000 [00:02<06:24,  2.59it/s, Loss/Training=0.376]0:   0%|          | 5/1000 [00:02<06:24,  2.59it/s, Loss/Training=0.5]  0:   0%|          | 5/1000 [00:02<06:24,  2.59it/s, Loss/Training=0.365]0:   0%|          | 5/1000 [00:02<06:24,  2.59it/s, Loss/Training=0.353]0:   0%|          | 5/1000 [00:02<06:24,  2.59it/s, Loss/Training=0.534]0:   0%|          | 5/1000 [00:02<06:24,  2.59it/s, Loss/Training=0.295]0:   0%|          | 5/1000 [00:02<06:24,  2.59it/s, Loss/Training=0.321]0:   0%|          | 5/1000 [00:02<06:24,  2.59it/s, Loss/Training=0.384]0:   0%|          | 5/1000 [00:02<06:24,  2.59it/s, Loss/Training=0.252]0:   1%|          | 6/1000 [00:02<06:04,  2.73it/s, Loss/Training=0.252]0:   1%|          | 6/1000 [00:02<06:04,  2.73it/s, Loss/Training=0.391]0:   1%|          | 6/1000 [00:02<06:04,  2.73it/s, Loss/Training=0.458]0:   1%|          | 6/1000 [00:02<06:04,  2.73it/s, Loss/Training=0.286]0:   1%|          | 6/1000 [00:02<06:04,  2.73it/s, Loss/Training=0.503]0:   1%|          | 6/1000 [00:02<06:04,  2.73it/s, Loss/Training=0.378]0:   1%|          | 6/1000 [00:02<06:04,  2.73it/s, Loss/Training=0.418]0:   1%|          | 6/1000 [00:02<06:04,  2.73it/s, Loss/Training=0.392]0:   1%|          | 6/1000 [00:02<06:04,  2.73it/s, Loss/Training=0.384]0:   1%|          | 6/1000 [00:02<06:04,  2.73it/s, Loss/Training=0.477]0:   1%|          | 6/1000 [00:02<06:04,  2.73it/s, Loss/Training=0.51] 0:   1%|          | 7/1000 [00:02<05:53,  2.81it/s, Loss/Training=0.51]0:   1%|          | 7/1000 [00:02<05:53,  2.81it/s, Loss/Training=0.479]0:   1%|          | 7/1000 [00:02<05:53,  2.81it/s, Loss/Training=0.472]0:   1%|          | 7/1000 [00:02<05:53,  2.81it/s, Loss/Training=0.403]0:   1%|          | 7/1000 [00:02<05:53,  2.81it/s, Loss/Training=0.42] 0:   1%|          | 7/1000 [00:02<05:53,  2.81it/s, Loss/Training=0.359]0:   1%|          | 7/1000 [00:02<05:53,  2.81it/s, Loss/Training=0.308]0:   1%|          | 7/1000 [00:02<05:53,  2.81it/s, Loss/Training=0.489]0:   1%|          | 7/1000 [00:02<05:53,  2.81it/s, Loss/Training=0.908]0:   1%|          | 7/1000 [00:02<05:53,  2.81it/s, Loss/Training=0.383]0:   1%|          | 7/1000 [00:02<05:53,  2.81it/s, Loss/Training=0.288]0:   1%|          | 8/1000 [00:02<05:44,  2.88it/s, Loss/Training=0.288]0:   1%|          | 8/1000 [00:03<05:44,  2.88it/s, Loss/Training=0.551]0:   1%|          | 8/1000 [00:03<05:44,  2.88it/s, Loss/Training=0.698]0:   1%|          | 8/1000 [00:03<05:44,  2.88it/s, Loss/Training=0.299]0:   1%|          | 8/1000 [00:03<05:44,  2.88it/s, Loss/Training=0.607]0:   1%|          | 8/1000 [00:03<05:44,  2.88it/s, Loss/Training=0.362]0:   1%|          | 8/1000 [00:03<05:44,  2.88it/s, Loss/Training=0.491]0:   1%|          | 8/1000 [00:03<05:44,  2.88it/s, Loss/Training=0.577]0:   1%|          | 8/1000 [00:03<05:44,  2.88it/s, Loss/Training=0.309]0:   1%|          | 8/1000 [00:03<05:44,  2.88it/s, Loss/Training=0.349]0:   1%|          | 8/1000 [00:03<05:44,  2.88it/s, Loss/Training=0.59] 0:   1%|          | 9/1000 [00:03<05:38,  2.93it/s, Loss/Training=0.59]0:   1%|          | 9/1000 [00:03<05:38,  2.93it/s, Loss/Training=0.647]0:   1%|          | 9/1000 [00:03<05:38,  2.93it/s, Loss/Training=0.505]0:   1%|          | 9/1000 [00:03<05:38,  2.93it/s, Loss/Training=0.575]0:   1%|          | 9/1000 [00:03<05:38,  2.93it/s, Loss/Training=0.506]0:   1%|          | 9/1000 [00:03<05:38,  2.93it/s, Loss/Training=0.634]0:   1%|          | 9/1000 [00:03<05:38,  2.93it/s, Loss/Training=0.47] 0:   1%|          | 9/1000 [00:03<05:38,  2.93it/s, Loss/Training=0.316]0:   1%|          | 9/1000 [00:03<05:38,  2.93it/s, Loss/Training=0.692]0:   1%|          | 9/1000 [00:03<05:38,  2.93it/s, Loss/Training=0.602]0:   1%|          | 9/1000 [00:03<05:38,  2.93it/s, Loss/Training=0.379]0:   1%|          | 9/1000 [00:03<06:52,  2.40it/s, Loss/Training=0.379]
:actor_name:ray_tune_trainable
Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_74382_00000_0_2025-01-27_14-48-56/checkpoint_tmpc43501
[INFO 2025-01-27 14:52:23,043] trainable.py: 904  Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_74382_00000_0_2025-01-27_14-48-56/checkpoint_tmpc43501
Current state after restoring: {'_iteration': 600, '_timesteps_total': None, '_time_total': 23.976471185684204, '_episodes_total': None}
[INFO 2025-01-27 14:52:23,044] trainable.py: 913  Current state after restoring: {'_iteration': 600, '_timesteps_total': None, '_time_total': 23.976471185684204, '_episodes_total': None}
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:123: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'data.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:126: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'targets.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/train.py:770: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = to.load(save_file)
0:   0%|          | 0/1000 [00:00<?, ?it/s]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.594]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.287]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.208]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.378]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.303]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.616]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.447]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.303]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.23] 0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.225]0:   0%|          | 1/1000 [00:00<07:22,  2.26it/s, Loss/Training=0.225]0:   0%|          | 1/1000 [00:00<07:22,  2.26it/s, Loss/Training=0.428]0:   0%|          | 1/1000 [00:00<07:22,  2.26it/s, Loss/Training=0.364]0:   0%|          | 1/1000 [00:00<07:22,  2.26it/s, Loss/Training=0.435]0:   0%|          | 1/1000 [00:00<07:22,  2.26it/s, Loss/Training=0.28] 0:   0%|          | 1/1000 [00:00<07:22,  2.26it/s, Loss/Training=0.458]0:   0%|          | 1/1000 [00:00<07:22,  2.26it/s, Loss/Training=0.484]0:   0%|          | 1/1000 [00:00<07:22,  2.26it/s, Loss/Training=0.286]0:   0%|          | 1/1000 [00:00<07:22,  2.26it/s, Loss/Training=0.321]0:   0%|          | 1/1000 [00:00<07:22,  2.26it/s, Loss/Training=0.444]0:   0%|          | 1/1000 [00:00<07:22,  2.26it/s, Loss/Training=0.456]0:   0%|          | 2/1000 [00:00<06:15,  2.65it/s, Loss/Training=0.456]0:   0%|          | 2/1000 [00:00<06:15,  2.65it/s, Loss/Training=0.644]0:   0%|          | 2/1000 [00:00<06:15,  2.65it/s, Loss/Training=0.397]0:   0%|          | 2/1000 [00:00<06:15,  2.65it/s, Loss/Training=0.365]0:   0%|          | 2/1000 [00:00<06:15,  2.65it/s, Loss/Training=0.416]0:   0%|          | 2/1000 [00:00<06:15,  2.65it/s, Loss/Training=0.286]0:   0%|          | 2/1000 [00:00<06:15,  2.65it/s, Loss/Training=0.225]0:   0%|          | 2/1000 [00:00<06:15,  2.65it/s, Loss/Training=0.303]0:   0%|          | 2/1000 [00:00<06:15,  2.65it/s, Loss/Training=0.318]0:   0%|          | 2/1000 [00:01<06:15,  2.65it/s, Loss/Training=0.309]0:   0%|          | 2/1000 [00:01<06:15,  2.65it/s, Loss/Training=0.29] 0:   0%|          | 3/1000 [00:01<05:56,  2.80it/s, Loss/Training=0.29]0:   0%|          | 3/1000 [00:01<05:56,  2.80it/s, Loss/Training=0.289]0:   0%|          | 3/1000 [00:01<05:56,  2.80it/s, Loss/Training=0.34] 0:   0%|          | 3/1000 [00:01<05:56,  2.80it/s, Loss/Training=0.532]0:   0%|          | 3/1000 [00:01<05:56,  2.80it/s, Loss/Training=0.276]0:   0%|          | 3/1000 [00:01<05:56,  2.80it/s, Loss/Training=0.258]0:   0%|          | 3/1000 [00:01<05:56,  2.80it/s, Loss/Training=0.469]0:   0%|          | 3/1000 [00:01<05:56,  2.80it/s, Loss/Training=0.466]0:   0%|          | 3/1000 [00:01<05:56,  2.80it/s, Loss/Training=0.237]0:   0%|          | 3/1000 [00:01<05:56,  2.80it/s, Loss/Training=0.502]0:   0%|          | 3/1000 [00:01<05:56,  2.80it/s, Loss/Training=0.307]0:   0%|          | 4/1000 [00:01<05:49,  2.85it/s, Loss/Training=0.307]0:   0%|          | 4/1000 [00:01<05:49,  2.85it/s, Loss/Training=0.442]0:   0%|          | 4/1000 [00:01<05:49,  2.85it/s, Loss/Training=0.256]0:   0%|          | 4/1000 [00:01<05:49,  2.85it/s, Loss/Training=0.332]0:   0%|          | 4/1000 [00:01<05:49,  2.85it/s, Loss/Training=0.366]0:   0%|          | 4/1000 [00:01<05:49,  2.85it/s, Loss/Training=0.28] 0:   0%|          | 4/1000 [00:01<05:49,  2.85it/s, Loss/Training=0.612]0:   0%|          | 4/1000 [00:01<05:49,  2.85it/s, Loss/Training=0.281]0:   0%|          | 4/1000 [00:01<05:49,  2.85it/s, Loss/Training=0.317]0:   0%|          | 4/1000 [00:01<05:49,  2.85it/s, Loss/Training=0.333]0:   0%|          | 4/1000 [00:01<05:49,  2.85it/s, Loss/Training=0.544]0:   0%|          | 5/1000 [00:01<05:40,  2.93it/s, Loss/Training=0.544]0:   0%|          | 5/1000 [00:01<05:40,  2.93it/s, Loss/Training=0.42] 0:   0%|          | 5/1000 [00:01<05:40,  2.93it/s, Loss/Training=0.42]0:   0%|          | 5/1000 [00:01<05:40,  2.93it/s, Loss/Training=0.47]0:   0%|          | 5/1000 [00:01<05:40,  2.93it/s, Loss/Training=0.616]0:   0%|          | 5/1000 [00:01<05:40,  2.93it/s, Loss/Training=0.302]0:   0%|          | 5/1000 [00:01<05:40,  2.93it/s, Loss/Training=0.41] 0:   0%|          | 5/1000 [00:01<05:40,  2.93it/s, Loss/Training=0.282]0:   0%|          | 5/1000 [00:01<05:40,  2.93it/s, Loss/Training=0.716]0:   0%|          | 5/1000 [00:02<05:40,  2.93it/s, Loss/Training=0.394]0:   0%|          | 5/1000 [00:02<05:40,  2.93it/s, Loss/Training=0.336]0:   1%|          | 6/1000 [00:02<05:35,  2.96it/s, Loss/Training=0.336]0:   1%|          | 6/1000 [00:02<05:35,  2.96it/s, Loss/Training=0.281]0:   1%|          | 6/1000 [00:02<05:35,  2.96it/s, Loss/Training=0.554]0:   1%|          | 6/1000 [00:02<05:35,  2.96it/s, Loss/Training=0.355]0:   1%|          | 6/1000 [00:02<05:35,  2.96it/s, Loss/Training=0.555]0:   1%|          | 6/1000 [00:02<05:35,  2.96it/s, Loss/Training=0.417]0:   1%|          | 6/1000 [00:02<05:35,  2.96it/s, Loss/Training=0.189]0:   1%|          | 6/1000 [00:02<05:35,  2.96it/s, Loss/Training=0.456]0:   1%|          | 6/1000 [00:02<05:35,  2.96it/s, Loss/Training=0.439]0:   1%|          | 6/1000 [00:02<05:35,  2.96it/s, Loss/Training=0.441]0:   1%|          | 6/1000 [00:02<05:35,  2.96it/s, Loss/Training=0.412]0:   1%|          | 7/1000 [00:02<05:31,  3.00it/s, Loss/Training=0.412]0:   1%|          | 7/1000 [00:02<05:31,  3.00it/s, Loss/Training=0.303]0:   1%|          | 7/1000 [00:02<05:31,  3.00it/s, Loss/Training=0.316]0:   1%|          | 7/1000 [00:02<05:31,  3.00it/s, Loss/Training=0.381]0:   1%|          | 7/1000 [00:02<05:31,  3.00it/s, Loss/Training=0.374]0:   1%|          | 7/1000 [00:02<05:31,  3.00it/s, Loss/Training=0.313]0:   1%|          | 7/1000 [00:02<05:31,  3.00it/s, Loss/Training=0.318]0:   1%|          | 7/1000 [00:02<05:31,  3.00it/s, Loss/Training=0.308]0:   1%|          | 7/1000 [00:02<05:31,  3.00it/s, Loss/Training=0.421]0:   1%|          | 7/1000 [00:02<05:31,  3.00it/s, Loss/Training=0.293]0:   1%|          | 7/1000 [00:02<05:31,  3.00it/s, Loss/Training=0.508]0:   1%|          | 8/1000 [00:02<05:28,  3.02it/s, Loss/Training=0.508]0:   1%|          | 8/1000 [00:02<05:28,  3.02it/s, Loss/Training=0.624]0:   1%|          | 8/1000 [00:02<05:28,  3.02it/s, Loss/Training=0.544]0:   1%|          | 8/1000 [00:02<05:28,  3.02it/s, Loss/Training=0.29] 0:   1%|          | 8/1000 [00:02<05:28,  3.02it/s, Loss/Training=0.418]0:   1%|          | 8/1000 [00:02<05:28,  3.02it/s, Loss/Training=0.518]0:   1%|          | 8/1000 [00:02<05:28,  3.02it/s, Loss/Training=0.359]0:   1%|          | 8/1000 [00:02<05:28,  3.02it/s, Loss/Training=0.394]0:   1%|          | 8/1000 [00:02<05:28,  3.02it/s, Loss/Training=0.256]0:   1%|          | 8/1000 [00:03<05:28,  3.02it/s, Loss/Training=0.457]0:   1%|          | 8/1000 [00:03<05:28,  3.02it/s, Loss/Training=0.478]0:   1%|          | 9/1000 [00:03<05:29,  3.00it/s, Loss/Training=0.478]0:   1%|          | 9/1000 [00:03<05:29,  3.00it/s, Loss/Training=0.306]0:   1%|          | 9/1000 [00:03<05:29,  3.00it/s, Loss/Training=0.451]0:   1%|          | 9/1000 [00:03<05:29,  3.00it/s, Loss/Training=0.571]0:   1%|          | 9/1000 [00:03<05:29,  3.00it/s, Loss/Training=0.311]0:   1%|          | 9/1000 [00:03<05:29,  3.00it/s, Loss/Training=0.219]0:   1%|          | 9/1000 [00:03<05:29,  3.00it/s, Loss/Training=0.364]0:   1%|          | 9/1000 [00:03<05:29,  3.00it/s, Loss/Training=0.245]0:   1%|          | 9/1000 [00:03<05:29,  3.00it/s, Loss/Training=0.291]0:   1%|          | 9/1000 [00:03<05:29,  3.00it/s, Loss/Training=0.487]0:   1%|          | 9/1000 [00:03<05:29,  3.00it/s, Loss/Training=0.5]  :actor_name:ray_tune_trainable
Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_74382_00000_0_2025-01-27_14-48-56/checkpoint_tmp42aa57
[INFO 2025-01-27 14:52:49,929] trainable.py: 904  Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_74382_00000_0_2025-01-27_14-48-56/checkpoint_tmp42aa57
Current state after restoring: {'_iteration': 700, '_timesteps_total': None, '_time_total': 27.96532678604126, '_episodes_total': None}
[INFO 2025-01-27 14:52:49,929] trainable.py: 913  Current state after restoring: {'_iteration': 700, '_timesteps_total': None, '_time_total': 27.96532678604126, '_episodes_total': None}
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:123: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'data.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:126: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'targets.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/train.py:770: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = to.load(save_file)
0:   0%|          | 0/1000 [00:00<?, ?it/s]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.538]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.402]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.626]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.488]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.297]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.348]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.374]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.672]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.212]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.392]0:   0%|          | 1/1000 [00:00<07:31,  2.21it/s, Loss/Training=0.392]0:   0%|          | 1/1000 [00:00<07:31,  2.21it/s, Loss/Training=0.491]0:   0%|          | 1/1000 [00:00<07:31,  2.21it/s, Loss/Training=0.417]0:   0%|          | 1/1000 [00:00<07:31,  2.21it/s, Loss/Training=0.305]0:   0%|          | 1/1000 [00:00<07:31,  2.21it/s, Loss/Training=0.379]0:   0%|          | 1/1000 [00:00<07:31,  2.21it/s, Loss/Training=0.325]0:   0%|          | 1/1000 [00:00<07:31,  2.21it/s, Loss/Training=0.448]0:   0%|          | 1/1000 [00:00<07:31,  2.21it/s, Loss/Training=0.337]0:   0%|          | 1/1000 [00:00<07:31,  2.21it/s, Loss/Training=0.272]0:   0%|          | 1/1000 [00:00<07:31,  2.21it/s, Loss/Training=0.301]0:   0%|          | 1/1000 [00:00<07:31,  2.21it/s, Loss/Training=0.31] 0:   0%|          | 2/1000 [00:00<06:28,  2.57it/s, Loss/Training=0.31]0:   0%|          | 2/1000 [00:00<06:28,  2.57it/s, Loss/Training=0.431]0:   0%|          | 2/1000 [00:00<06:28,  2.57it/s, Loss/Training=0.516]0:   0%|          | 2/1000 [00:00<06:28,  2.57it/s, Loss/Training=0.195]0:   0%|          | 2/1000 [00:00<06:28,  2.57it/s, Loss/Training=0.268]0:   0%|          | 2/1000 [00:00<06:28,  2.57it/s, Loss/Training=0.338]0:   0%|          | 2/1000 [00:00<06:28,  2.57it/s, Loss/Training=0.543]0:   0%|          | 2/1000 [00:00<06:28,  2.57it/s, Loss/Training=0.506]0:   0%|          | 2/1000 [00:01<06:28,  2.57it/s, Loss/Training=0.634]0:   0%|          | 2/1000 [00:01<06:28,  2.57it/s, Loss/Training=0.289]0:   0%|          | 2/1000 [00:01<06:28,  2.57it/s, Loss/Training=0.388]0:   0%|          | 3/1000 [00:01<05:59,  2.77it/s, Loss/Training=0.388]0:   0%|          | 3/1000 [00:01<05:59,  2.77it/s, Loss/Training=0.339]0:   0%|          | 3/1000 [00:01<05:59,  2.77it/s, Loss/Training=0.571]0:   0%|          | 3/1000 [00:01<05:59,  2.77it/s, Loss/Training=0.559]0:   0%|          | 3/1000 [00:01<05:59,  2.77it/s, Loss/Training=0.331]0:   0%|          | 3/1000 [00:01<05:59,  2.77it/s, Loss/Training=0.377]0:   0%|          | 3/1000 [00:01<05:59,  2.77it/s, Loss/Training=0.309]0:   0%|          | 3/1000 [00:01<05:59,  2.77it/s, Loss/Training=0.378]0:   0%|          | 3/1000 [00:01<05:59,  2.77it/s, Loss/Training=0.371]0:   0%|          | 3/1000 [00:01<05:59,  2.77it/s, Loss/Training=0.329]0:   0%|          | 3/1000 [00:01<05:59,  2.77it/s, Loss/Training=0.484]0:   0%|          | 4/1000 [00:01<05:51,  2.84it/s, Loss/Training=0.484]0:   0%|          | 4/1000 [00:01<05:51,  2.84it/s, Loss/Training=0.49] 0:   0%|          | 4/1000 [00:01<05:51,  2.84it/s, Loss/Training=0.356]0:   0%|          | 4/1000 [00:01<05:51,  2.84it/s, Loss/Training=0.445]0:   0%|          | 4/1000 [00:01<05:51,  2.84it/s, Loss/Training=0.335]0:   0%|          | 4/1000 [00:01<05:51,  2.84it/s, Loss/Training=0.386]0:   0%|          | 4/1000 [00:01<05:51,  2.84it/s, Loss/Training=0.431]0:   0%|          | 4/1000 [00:01<05:51,  2.84it/s, Loss/Training=0.204]0:   0%|          | 4/1000 [00:01<05:51,  2.84it/s, Loss/Training=0.376]0:   0%|          | 4/1000 [00:01<05:51,  2.84it/s, Loss/Training=0.269]0:   0%|          | 4/1000 [00:01<05:51,  2.84it/s, Loss/Training=0.345]0:   0%|          | 5/1000 [00:01<05:46,  2.87it/s, Loss/Training=0.345]0:   0%|          | 5/1000 [00:01<05:46,  2.87it/s, Loss/Training=0.366]0:   0%|          | 5/1000 [00:01<05:46,  2.87it/s, Loss/Training=0.299]0:   0%|          | 5/1000 [00:01<05:46,  2.87it/s, Loss/Training=0.484]0:   0%|          | 5/1000 [00:01<05:46,  2.87it/s, Loss/Training=0.233]0:   0%|          | 5/1000 [00:01<05:46,  2.87it/s, Loss/Training=0.412]0:   0%|          | 5/1000 [00:01<05:46,  2.87it/s, Loss/Training=0.574]0:   0%|          | 5/1000 [00:01<05:46,  2.87it/s, Loss/Training=0.47] 0:   0%|          | 5/1000 [00:02<05:46,  2.87it/s, Loss/Training=0.244]0:   0%|          | 5/1000 [00:02<05:46,  2.87it/s, Loss/Training=0.416]0:   0%|          | 5/1000 [00:02<05:46,  2.87it/s, Loss/Training=0.375]0:   1%|          | 6/1000 [00:02<05:39,  2.92it/s, Loss/Training=0.375]0:   1%|          | 6/1000 [00:02<05:39,  2.92it/s, Loss/Training=0.378]0:   1%|          | 6/1000 [00:02<05:39,  2.92it/s, Loss/Training=0.471]0:   1%|          | 6/1000 [00:02<05:39,  2.92it/s, Loss/Training=0.569]0:   1%|          | 6/1000 [00:02<05:39,  2.92it/s, Loss/Training=0.627]0:   1%|          | 6/1000 [00:02<05:39,  2.92it/s, Loss/Training=0.409]0:   1%|          | 6/1000 [00:02<05:39,  2.92it/s, Loss/Training=0.266]0:   1%|          | 6/1000 [00:02<05:39,  2.92it/s, Loss/Training=0.332]0:   1%|          | 6/1000 [00:02<05:39,  2.92it/s, Loss/Training=0.507]0:   1%|          | 6/1000 [00:02<05:39,  2.92it/s, Loss/Training=0.365]0:   1%|          | 6/1000 [00:02<05:39,  2.92it/s, Loss/Training=0.418]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.418]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.302]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.347]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.256]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.343]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.283]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.252]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.247]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.406]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.443]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.471]0:   1%|          | 8/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.471]0:   1%|          | 8/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.504]0:   1%|          | 8/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.26] 0:   1%|          | 8/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.441]0:   1%|          | 8/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.327]0:   1%|          | 8/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.528]0:   1%|          | 8/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.412]0:   1%|          | 8/1000 [00:03<05:34,  2.97it/s, Loss/Training=0.379]0:   1%|          | 8/1000 [00:03<05:34,  2.97it/s, Loss/Training=0.293]0:   1%|          | 8/1000 [00:03<05:34,  2.97it/s, Loss/Training=0.475]0:   1%|          | 8/1000 [00:03<05:34,  2.97it/s, Loss/Training=0.435]0:   1%|          | 9/1000 [00:03<05:41,  2.90it/s, Loss/Training=0.435]0:   1%|          | 9/1000 [00:03<05:41,  2.90it/s, Loss/Training=0.274]0:   1%|          | 9/1000 [00:03<05:41,  2.90it/s, Loss/Training=0.386]0:   1%|          | 9/1000 [00:03<05:41,  2.90it/s, Loss/Training=0.314]0:   1%|          | 9/1000 [00:03<05:41,  2.90it/s, Loss/Training=0.424]0:   1%|          | 9/1000 [00:03<05:41,  2.90it/s, Loss/Training=0.644]0:   1%|          | 9/1000 [00:03<05:41,  2.90it/s, Loss/Training=0.344]0:   1%|          | 9/1000 [00:03<05:41,  2.90it/s, Loss/Training=0.312]0:   1%|          | 9/1000 [00:03<05:41,  2.90it/s, Loss/Training=0.454]0:   1%|          | 9/1000 [00:03<05:41,  2.90it/s, Loss/Training=0.276]0:   1%|          | 9/1000 [00:03<05:41,  2.90it/s, Loss/Training=0.276]:actor_name:ray_tune_trainable
Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_74382_00000_0_2025-01-27_14-48-56/checkpoint_tmp6ef3f5
[INFO 2025-01-27 14:53:21,674] trainable.py: 904  Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_74382_00000_0_2025-01-27_14-48-56/checkpoint_tmp6ef3f5
Current state after restoring: {'_iteration': 800, '_timesteps_total': None, '_time_total': 32.16685175895691, '_episodes_total': None}
[INFO 2025-01-27 14:53:21,674] trainable.py: 913  Current state after restoring: {'_iteration': 800, '_timesteps_total': None, '_time_total': 32.16685175895691, '_episodes_total': None}
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:123: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'data.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:126: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'targets.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/train.py:770: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = to.load(save_file)
0:   0%|          | 0/1000 [00:00<?, ?it/s]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.459]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.424]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.472]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.479]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.435]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.566]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.356]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.446]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.398]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.352]0:   0%|          | 1/1000 [00:00<07:22,  2.26it/s, Loss/Training=0.352]0:   0%|          | 1/1000 [00:00<07:22,  2.26it/s, Loss/Training=0.387]0:   0%|          | 1/1000 [00:00<07:22,  2.26it/s, Loss/Training=0.465]0:   0%|          | 1/1000 [00:00<07:22,  2.26it/s, Loss/Training=0.302]0:   0%|          | 1/1000 [00:00<07:22,  2.26it/s, Loss/Training=0.333]0:   0%|          | 1/1000 [00:00<07:22,  2.26it/s, Loss/Training=0.416]0:   0%|          | 1/1000 [00:00<07:22,  2.26it/s, Loss/Training=0.415]0:   0%|          | 1/1000 [00:00<07:22,  2.26it/s, Loss/Training=0.242]0:   0%|          | 1/1000 [00:00<07:22,  2.26it/s, Loss/Training=0.384]0:   0%|          | 1/1000 [00:00<07:22,  2.26it/s, Loss/Training=0.435]0:   0%|          | 1/1000 [00:00<07:22,  2.26it/s, Loss/Training=0.344]0:   0%|          | 2/1000 [00:00<06:18,  2.64it/s, Loss/Training=0.344]0:   0%|          | 2/1000 [00:00<06:18,  2.64it/s, Loss/Training=0.324]0:   0%|          | 2/1000 [00:00<06:18,  2.64it/s, Loss/Training=0.397]0:   0%|          | 2/1000 [00:00<06:18,  2.64it/s, Loss/Training=0.466]0:   0%|          | 2/1000 [00:00<06:18,  2.64it/s, Loss/Training=0.634]0:   0%|          | 2/1000 [00:00<06:18,  2.64it/s, Loss/Training=0.444]0:   0%|          | 2/1000 [00:00<06:18,  2.64it/s, Loss/Training=0.372]0:   0%|          | 2/1000 [00:00<06:18,  2.64it/s, Loss/Training=0.663]0:   0%|          | 2/1000 [00:00<06:18,  2.64it/s, Loss/Training=0.544]0:   0%|          | 2/1000 [00:01<06:18,  2.64it/s, Loss/Training=0.351]0:   0%|          | 2/1000 [00:01<06:18,  2.64it/s, Loss/Training=0.387]0:   0%|          | 3/1000 [00:01<05:56,  2.80it/s, Loss/Training=0.387]0:   0%|          | 3/1000 [00:01<05:56,  2.80it/s, Loss/Training=0.365]0:   0%|          | 3/1000 [00:01<05:56,  2.80it/s, Loss/Training=0.291]0:   0%|          | 3/1000 [00:01<05:56,  2.80it/s, Loss/Training=0.415]0:   0%|          | 3/1000 [00:01<05:56,  2.80it/s, Loss/Training=0.585]0:   0%|          | 3/1000 [00:01<05:56,  2.80it/s, Loss/Training=0.233]0:   0%|          | 3/1000 [00:01<05:56,  2.80it/s, Loss/Training=0.542]0:   0%|          | 3/1000 [00:01<05:56,  2.80it/s, Loss/Training=0.28] 0:   0%|          | 3/1000 [00:01<05:56,  2.80it/s, Loss/Training=0.614]0:   0%|          | 3/1000 [00:01<05:56,  2.80it/s, Loss/Training=0.534]0:   0%|          | 3/1000 [00:01<05:56,  2.80it/s, Loss/Training=0.512]0:   0%|          | 4/1000 [00:01<05:41,  2.91it/s, Loss/Training=0.512]0:   0%|          | 4/1000 [00:01<05:41,  2.91it/s, Loss/Training=0.359]0:   0%|          | 4/1000 [00:01<05:41,  2.91it/s, Loss/Training=0.381]0:   0%|          | 4/1000 [00:01<05:41,  2.91it/s, Loss/Training=0.597]0:   0%|          | 4/1000 [00:01<05:41,  2.91it/s, Loss/Training=0.391]0:   0%|          | 4/1000 [00:01<05:41,  2.91it/s, Loss/Training=0.642]0:   0%|          | 4/1000 [00:01<05:41,  2.91it/s, Loss/Training=0.375]0:   0%|          | 4/1000 [00:01<05:41,  2.91it/s, Loss/Training=0.594]0:   0%|          | 4/1000 [00:01<05:41,  2.91it/s, Loss/Training=0.42] 0:   0%|          | 4/1000 [00:01<05:41,  2.91it/s, Loss/Training=0.423]0:   0%|          | 4/1000 [00:01<05:41,  2.91it/s, Loss/Training=0.339]0:   0%|          | 5/1000 [00:01<05:36,  2.95it/s, Loss/Training=0.339]0:   0%|          | 5/1000 [00:01<05:36,  2.95it/s, Loss/Training=0.379]0:   0%|          | 5/1000 [00:01<05:36,  2.95it/s, Loss/Training=0.199]0:   0%|          | 5/1000 [00:01<05:36,  2.95it/s, Loss/Training=0.451]0:   0%|          | 5/1000 [00:01<05:36,  2.95it/s, Loss/Training=0.285]0:   0%|          | 5/1000 [00:01<05:36,  2.95it/s, Loss/Training=0.452]0:   0%|          | 5/1000 [00:01<05:36,  2.95it/s, Loss/Training=0.363]0:   0%|          | 5/1000 [00:01<05:36,  2.95it/s, Loss/Training=0.341]0:   0%|          | 5/1000 [00:01<05:36,  2.95it/s, Loss/Training=0.352]0:   0%|          | 5/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.472]0:   0%|          | 5/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.506]0:   1%|          | 6/1000 [00:02<05:32,  2.99it/s, Loss/Training=0.506]0:   1%|          | 6/1000 [00:02<05:32,  2.99it/s, Loss/Training=0.598]0:   1%|          | 6/1000 [00:02<05:32,  2.99it/s, Loss/Training=0.506]0:   1%|          | 6/1000 [00:02<05:32,  2.99it/s, Loss/Training=0.242]0:   1%|          | 6/1000 [00:02<05:32,  2.99it/s, Loss/Training=0.476]0:   1%|          | 6/1000 [00:02<05:32,  2.99it/s, Loss/Training=0.57] 0:   1%|          | 6/1000 [00:02<05:32,  2.99it/s, Loss/Training=0.325]0:   1%|          | 6/1000 [00:02<05:32,  2.99it/s, Loss/Training=0.219]0:   1%|          | 6/1000 [00:02<05:32,  2.99it/s, Loss/Training=0.399]0:   1%|          | 6/1000 [00:02<05:32,  2.99it/s, Loss/Training=0.49] 0:   1%|          | 6/1000 [00:02<05:32,  2.99it/s, Loss/Training=0.586]0:   1%|          | 7/1000 [00:02<05:28,  3.02it/s, Loss/Training=0.586]0:   1%|          | 7/1000 [00:02<05:28,  3.02it/s, Loss/Training=0.374]0:   1%|          | 7/1000 [00:02<05:28,  3.02it/s, Loss/Training=0.2]  0:   1%|          | 7/1000 [00:02<05:28,  3.02it/s, Loss/Training=0.533]0:   1%|          | 7/1000 [00:02<05:28,  3.02it/s, Loss/Training=0.342]0:   1%|          | 7/1000 [00:02<05:28,  3.02it/s, Loss/Training=0.476]0:   1%|          | 7/1000 [00:02<05:28,  3.02it/s, Loss/Training=0.38] 0:   1%|          | 7/1000 [00:02<05:28,  3.02it/s, Loss/Training=0.294]0:   1%|          | 7/1000 [00:02<05:28,  3.02it/s, Loss/Training=0.306]0:   1%|          | 7/1000 [00:02<05:28,  3.02it/s, Loss/Training=0.357]0:   1%|          | 7/1000 [00:02<05:28,  3.02it/s, Loss/Training=0.302]0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.302]0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.414]0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.329]0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.4]  0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.365]0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.463]0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.386]0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.31] 0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.437]0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.461]0:   1%|          | 8/1000 [00:03<05:31,  2.99it/s, Loss/Training=0.272]0:   1%|          | 9/1000 [00:03<05:30,  3.00it/s, Loss/Training=0.272]0:   1%|          | 9/1000 [00:03<05:30,  3.00it/s, Loss/Training=0.296]0:   1%|          | 9/1000 [00:03<05:30,  3.00it/s, Loss/Training=0.542]0:   1%|          | 9/1000 [00:03<05:30,  3.00it/s, Loss/Training=0.339]0:   1%|          | 9/1000 [00:03<05:30,  3.00it/s, Loss/Training=0.325]0:   1%|          | 9/1000 [00:03<05:30,  3.00it/s, Loss/Training=0.327]0:   1%|          | 9/1000 [00:03<05:30,  3.00it/s, Loss/Training=0.369]0:   1%|          | 9/1000 [00:03<05:30,  3.00it/s, Loss/Training=0.294]0:   1%|          | 9/1000 [00:03<05:30,  3.00it/s, Loss/Training=0.273]0:   1%|          | 9/1000 [00:03<05:30,  3.00it/s, Loss/Training=0.379]0:   1%|          | 9/1000 [00:03<05:30,  3.00it/s, Loss/Training=0.531]:actor_name:ray_tune_trainable
Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_74382_00000_0_2025-01-27_14-48-56/checkpoint_tmp435a11
[INFO 2025-01-27 14:53:53,168] trainable.py: 904  Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_74382_00000_0_2025-01-27_14-48-56/checkpoint_tmp435a11
Current state after restoring: {'_iteration': 900, '_timesteps_total': None, '_time_total': 36.15765047073364, '_episodes_total': None}
[INFO 2025-01-27 14:53:53,168] trainable.py: 913  Current state after restoring: {'_iteration': 900, '_timesteps_total': None, '_time_total': 36.15765047073364, '_episodes_total': None}
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:123: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'data.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:126: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'targets.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/train.py:770: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = to.load(save_file)
0:   0%|          | 0/1000 [00:00<?, ?it/s]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.358]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.397]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.443]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.514]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.305]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.521]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.285]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.355]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.331]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.245]0:   0%|          | 1/1000 [00:00<07:23,  2.25it/s, Loss/Training=0.245]0:   0%|          | 1/1000 [00:00<07:23,  2.25it/s, Loss/Training=0.378]0:   0%|          | 1/1000 [00:00<07:23,  2.25it/s, Loss/Training=0.344]0:   0%|          | 1/1000 [00:00<07:23,  2.25it/s, Loss/Training=0.387]0:   0%|          | 1/1000 [00:00<07:23,  2.25it/s, Loss/Training=0.274]0:   0%|          | 1/1000 [00:00<07:23,  2.25it/s, Loss/Training=0.436]0:   0%|          | 1/1000 [00:00<07:23,  2.25it/s, Loss/Training=0.387]0:   0%|          | 1/1000 [00:00<07:23,  2.25it/s, Loss/Training=0.68] 0:   0%|          | 1/1000 [00:00<07:23,  2.25it/s, Loss/Training=0.496]0:   0%|          | 1/1000 [00:00<07:23,  2.25it/s, Loss/Training=0.358]0:   0%|          | 1/1000 [00:00<07:23,  2.25it/s, Loss/Training=0.357]0:   0%|          | 2/1000 [00:00<06:27,  2.57it/s, Loss/Training=0.357]0:   0%|          | 2/1000 [00:00<06:27,  2.57it/s, Loss/Training=0.465]0:   0%|          | 2/1000 [00:00<06:27,  2.57it/s, Loss/Training=0.52] 0:   0%|          | 2/1000 [00:00<06:27,  2.57it/s, Loss/Training=0.333]0:   0%|          | 2/1000 [00:00<06:27,  2.57it/s, Loss/Training=0.54] 0:   0%|          | 2/1000 [00:00<06:27,  2.57it/s, Loss/Training=0.394]0:   0%|          | 2/1000 [00:00<06:27,  2.57it/s, Loss/Training=0.427]0:   0%|          | 2/1000 [00:00<06:27,  2.57it/s, Loss/Training=0.368]0:   0%|          | 2/1000 [00:01<06:27,  2.57it/s, Loss/Training=0.394]0:   0%|          | 2/1000 [00:01<06:27,  2.57it/s, Loss/Training=0.534]0:   0%|          | 2/1000 [00:01<06:27,  2.57it/s, Loss/Training=0.43] 0:   0%|          | 3/1000 [00:01<06:03,  2.74it/s, Loss/Training=0.43]0:   0%|          | 3/1000 [00:01<06:03,  2.74it/s, Loss/Training=0.275]0:   0%|          | 3/1000 [00:01<06:03,  2.74it/s, Loss/Training=0.408]0:   0%|          | 3/1000 [00:01<06:03,  2.74it/s, Loss/Training=0.547]0:   0%|          | 3/1000 [00:01<06:03,  2.74it/s, Loss/Training=0.396]0:   0%|          | 3/1000 [00:01<06:03,  2.74it/s, Loss/Training=0.312]0:   0%|          | 3/1000 [00:01<06:03,  2.74it/s, Loss/Training=0.513]0:   0%|          | 3/1000 [00:01<06:03,  2.74it/s, Loss/Training=0.432]0:   0%|          | 3/1000 [00:01<06:03,  2.74it/s, Loss/Training=0.261]0:   0%|          | 3/1000 [00:01<06:03,  2.74it/s, Loss/Training=0.369]0:   0%|          | 3/1000 [00:01<06:03,  2.74it/s, Loss/Training=0.5]  0:   0%|          | 4/1000 [00:01<05:51,  2.84it/s, Loss/Training=0.5]0:   0%|          | 4/1000 [00:01<05:51,  2.84it/s, Loss/Training=0.212]0:   0%|          | 4/1000 [00:01<05:51,  2.84it/s, Loss/Training=0.438]0:   0%|          | 4/1000 [00:01<05:51,  2.84it/s, Loss/Training=0.392]0:   0%|          | 4/1000 [00:01<05:51,  2.84it/s, Loss/Training=0.201]0:   0%|          | 4/1000 [00:01<05:51,  2.84it/s, Loss/Training=0.4]  0:   0%|          | 4/1000 [00:01<05:51,  2.84it/s, Loss/Training=0.533]0:   0%|          | 4/1000 [00:01<05:51,  2.84it/s, Loss/Training=0.364]0:   0%|          | 4/1000 [00:01<05:51,  2.84it/s, Loss/Training=0.325]0:   0%|          | 4/1000 [00:01<05:51,  2.84it/s, Loss/Training=0.377]0:   0%|          | 4/1000 [00:01<05:51,  2.84it/s, Loss/Training=0.362]0:   0%|          | 5/1000 [00:01<05:42,  2.90it/s, Loss/Training=0.362]0:   0%|          | 5/1000 [00:01<05:42,  2.90it/s, Loss/Training=0.315]0:   0%|          | 5/1000 [00:01<05:42,  2.90it/s, Loss/Training=0.399]0:   0%|          | 5/1000 [00:01<05:42,  2.90it/s, Loss/Training=0.358]0:   0%|          | 5/1000 [00:01<05:42,  2.90it/s, Loss/Training=0.309]0:   0%|          | 5/1000 [00:01<05:42,  2.90it/s, Loss/Training=0.285]0:   0%|          | 5/1000 [00:01<05:42,  2.90it/s, Loss/Training=0.512]0:   0%|          | 5/1000 [00:01<05:42,  2.90it/s, Loss/Training=0.463]0:   0%|          | 5/1000 [00:02<05:42,  2.90it/s, Loss/Training=0.366]0:   0%|          | 5/1000 [00:02<05:42,  2.90it/s, Loss/Training=0.251]0:   0%|          | 5/1000 [00:02<05:42,  2.90it/s, Loss/Training=0.396]0:   1%|          | 6/1000 [00:02<05:37,  2.95it/s, Loss/Training=0.396]0:   1%|          | 6/1000 [00:02<05:37,  2.95it/s, Loss/Training=0.316]0:   1%|          | 6/1000 [00:02<05:37,  2.95it/s, Loss/Training=0.324]0:   1%|          | 6/1000 [00:02<05:37,  2.95it/s, Loss/Training=0.639]0:   1%|          | 6/1000 [00:02<05:37,  2.95it/s, Loss/Training=0.506]0:   1%|          | 6/1000 [00:02<05:37,  2.95it/s, Loss/Training=0.321]0:   1%|          | 6/1000 [00:02<05:37,  2.95it/s, Loss/Training=0.352]0:   1%|          | 6/1000 [00:02<05:37,  2.95it/s, Loss/Training=0.366]0:   1%|          | 6/1000 [00:02<05:37,  2.95it/s, Loss/Training=0.338]0:   1%|          | 6/1000 [00:02<05:37,  2.95it/s, Loss/Training=0.3]  0:   1%|          | 6/1000 [00:02<05:37,  2.95it/s, Loss/Training=0.387]0:   1%|          | 7/1000 [00:02<05:32,  2.98it/s, Loss/Training=0.387]0:   1%|          | 7/1000 [00:02<05:32,  2.98it/s, Loss/Training=0.416]0:   1%|          | 7/1000 [00:02<05:32,  2.98it/s, Loss/Training=0.39] 0:   1%|          | 7/1000 [00:02<05:32,  2.98it/s, Loss/Training=0.371]0:   1%|          | 7/1000 [00:02<05:32,  2.98it/s, Loss/Training=0.223]0:   1%|          | 7/1000 [00:02<05:32,  2.98it/s, Loss/Training=0.375]0:   1%|          | 7/1000 [00:02<05:32,  2.98it/s, Loss/Training=0.398]0:   1%|          | 7/1000 [00:02<05:32,  2.98it/s, Loss/Training=0.497]0:   1%|          | 7/1000 [00:02<05:32,  2.98it/s, Loss/Training=0.403]0:   1%|          | 7/1000 [00:02<05:32,  2.98it/s, Loss/Training=0.405]0:   1%|          | 7/1000 [00:02<05:32,  2.98it/s, Loss/Training=0.29] 0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.29]0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.342]0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.295]0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.434]0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.45] 0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.374]0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.311]0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.298]0:   1%|          | 8/1000 [00:03<05:31,  2.99it/s, Loss/Training=0.376]0:   1%|          | 8/1000 [00:03<05:31,  2.99it/s, Loss/Training=0.349]0:   1%|          | 8/1000 [00:03<05:31,  2.99it/s, Loss/Training=0.614]0:   1%|          | 9/1000 [00:03<05:30,  3.00it/s, Loss/Training=0.614]0:   1%|          | 9/1000 [00:03<05:30,  3.00it/s, Loss/Training=0.513]0:   1%|          | 9/1000 [00:03<05:30,  3.00it/s, Loss/Training=0.361]0:   1%|          | 9/1000 [00:03<05:30,  3.00it/s, Loss/Training=0.464]0:   1%|          | 9/1000 [00:03<05:30,  3.00it/s, Loss/Training=0.32] 0:   1%|          | 9/1000 [00:03<05:30,  3.00it/s, Loss/Training=0.175]0:   1%|          | 9/1000 [00:03<05:30,  3.00it/s, Loss/Training=0.31] 0:   1%|          | 9/1000 [00:03<05:30,  3.00it/s, Loss/Training=0.326]0:   1%|          | 9/1000 [00:03<05:30,  3.00it/s, Loss/Training=0.398]0:   1%|          | 9/1000 [00:03<05:30,  3.00it/s, Loss/Training=0.43] 0:   1%|          | 9/1000 [00:03<05:30,  3.00it/s, Loss/Training=0.618]0:   1%|          | 9/1000 [00:03<06:38,  2.49it/s, Loss/Training=0.618]
:actor_name:ray_tune_trainable
Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_74382_00000_0_2025-01-27_14-48-56/checkpoint_tmpf69ad1
[INFO 2025-01-27 14:54:24,198] trainable.py: 904  Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_74382_00000_0_2025-01-27_14-48-56/checkpoint_tmpf69ad1
Current state after restoring: {'_iteration': 1000, '_timesteps_total': None, '_time_total': 40.17171549797058, '_episodes_total': None}
[INFO 2025-01-27 14:54:24,198] trainable.py: 913  Current state after restoring: {'_iteration': 1000, '_timesteps_total': None, '_time_total': 40.17171549797058, '_episodes_total': None}
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:123: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'data.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:126: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'targets.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/train.py:770: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = to.load(save_file)
0:   0%|          | 0/1000 [00:00<?, ?it/s]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.399]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.421]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.555]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.439]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.266]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.458]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.372]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.235]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.294]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.443]0:   0%|          | 1/1000 [00:00<07:16,  2.29it/s, Loss/Training=0.443]0:   0%|          | 1/1000 [00:00<07:16,  2.29it/s, Loss/Training=0.531]0:   0%|          | 1/1000 [00:00<07:16,  2.29it/s, Loss/Training=0.373]0:   0%|          | 1/1000 [00:00<07:16,  2.29it/s, Loss/Training=0.21] 0:   0%|          | 1/1000 [00:00<07:16,  2.29it/s, Loss/Training=0.369]0:   0%|          | 1/1000 [00:00<07:16,  2.29it/s, Loss/Training=0.477]0:   0%|          | 1/1000 [00:00<07:16,  2.29it/s, Loss/Training=0.348]0:   0%|          | 1/1000 [00:00<07:16,  2.29it/s, Loss/Training=0.486]0:   0%|          | 1/1000 [00:00<07:16,  2.29it/s, Loss/Training=0.42] 0:   0%|          | 1/1000 [00:00<07:16,  2.29it/s, Loss/Training=0.575]0:   0%|          | 1/1000 [00:00<07:16,  2.29it/s, Loss/Training=0.379]0:   0%|          | 2/1000 [00:00<06:12,  2.68it/s, Loss/Training=0.379]0:   0%|          | 2/1000 [00:00<06:12,  2.68it/s, Loss/Training=0.394]0:   0%|          | 2/1000 [00:00<06:12,  2.68it/s, Loss/Training=0.478]0:   0%|          | 2/1000 [00:00<06:12,  2.68it/s, Loss/Training=0.316]0:   0%|          | 2/1000 [00:00<06:12,  2.68it/s, Loss/Training=0.298]0:   0%|          | 2/1000 [00:00<06:12,  2.68it/s, Loss/Training=0.411]0:   0%|          | 2/1000 [00:00<06:12,  2.68it/s, Loss/Training=0.235]0:   0%|          | 2/1000 [00:00<06:12,  2.68it/s, Loss/Training=0.372]0:   0%|          | 2/1000 [00:00<06:12,  2.68it/s, Loss/Training=0.582]0:   0%|          | 2/1000 [00:01<06:12,  2.68it/s, Loss/Training=0.45] 0:   0%|          | 2/1000 [00:01<06:12,  2.68it/s, Loss/Training=0.495]0:   0%|          | 3/1000 [00:01<05:53,  2.82it/s, Loss/Training=0.495]0:   0%|          | 3/1000 [00:01<05:53,  2.82it/s, Loss/Training=0.233]0:   0%|          | 3/1000 [00:01<05:53,  2.82it/s, Loss/Training=0.513]0:   0%|          | 3/1000 [00:01<05:53,  2.82it/s, Loss/Training=0.272]0:   0%|          | 3/1000 [00:01<05:53,  2.82it/s, Loss/Training=0.53] 0:   0%|          | 3/1000 [00:01<05:53,  2.82it/s, Loss/Training=0.389]0:   0%|          | 3/1000 [00:01<05:53,  2.82it/s, Loss/Training=0.367]0:   0%|          | 3/1000 [00:01<05:53,  2.82it/s, Loss/Training=0.368]0:   0%|          | 3/1000 [00:01<05:53,  2.82it/s, Loss/Training=0.345]0:   0%|          | 3/1000 [00:01<05:53,  2.82it/s, Loss/Training=0.479]0:   0%|          | 3/1000 [00:01<05:53,  2.82it/s, Loss/Training=0.334]0:   0%|          | 4/1000 [00:01<05:44,  2.89it/s, Loss/Training=0.334]0:   0%|          | 4/1000 [00:01<05:44,  2.89it/s, Loss/Training=0.392]0:   0%|          | 4/1000 [00:01<05:44,  2.89it/s, Loss/Training=0.397]0:   0%|          | 4/1000 [00:01<05:44,  2.89it/s, Loss/Training=0.495]0:   0%|          | 4/1000 [00:01<05:44,  2.89it/s, Loss/Training=0.322]0:   0%|          | 4/1000 [00:01<05:44,  2.89it/s, Loss/Training=0.261]0:   0%|          | 4/1000 [00:01<05:44,  2.89it/s, Loss/Training=0.325]0:   0%|          | 4/1000 [00:01<05:44,  2.89it/s, Loss/Training=0.298]0:   0%|          | 4/1000 [00:01<05:44,  2.89it/s, Loss/Training=0.398]0:   0%|          | 4/1000 [00:01<05:44,  2.89it/s, Loss/Training=0.385]0:   0%|          | 4/1000 [00:01<05:44,  2.89it/s, Loss/Training=0.402]0:   0%|          | 5/1000 [00:01<06:51,  2.42it/s, Loss/Training=0.402]0:   0%|          | 5/1000 [00:02<06:51,  2.42it/s, Loss/Training=0.249]0:   0%|          | 5/1000 [00:02<06:51,  2.42it/s, Loss/Training=0.338]0:   0%|          | 5/1000 [00:02<06:51,  2.42it/s, Loss/Training=0.244]0:   0%|          | 5/1000 [00:02<06:51,  2.42it/s, Loss/Training=0.291]0:   0%|          | 5/1000 [00:02<06:51,  2.42it/s, Loss/Training=0.289]0:   0%|          | 5/1000 [00:02<06:51,  2.42it/s, Loss/Training=0.432]0:   0%|          | 5/1000 [00:02<06:51,  2.42it/s, Loss/Training=0.416]0:   0%|          | 5/1000 [00:02<06:51,  2.42it/s, Loss/Training=0.23] 0:   0%|          | 5/1000 [00:02<06:51,  2.42it/s, Loss/Training=0.291]0:   0%|          | 5/1000 [00:02<06:51,  2.42it/s, Loss/Training=0.313]0:   1%|          | 6/1000 [00:02<06:38,  2.50it/s, Loss/Training=0.313]0:   1%|          | 6/1000 [00:02<06:38,  2.50it/s, Loss/Training=0.371]0:   1%|          | 6/1000 [00:02<06:38,  2.50it/s, Loss/Training=0.282]0:   1%|          | 6/1000 [00:02<06:38,  2.50it/s, Loss/Training=0.306]0:   1%|          | 6/1000 [00:02<06:38,  2.50it/s, Loss/Training=0.326]0:   1%|          | 6/1000 [00:02<06:38,  2.50it/s, Loss/Training=0.398]0:   1%|          | 6/1000 [00:02<06:38,  2.50it/s, Loss/Training=0.476]0:   1%|          | 6/1000 [00:02<06:38,  2.50it/s, Loss/Training=0.448]0:   1%|          | 6/1000 [00:02<06:38,  2.50it/s, Loss/Training=0.279]0:   1%|          | 6/1000 [00:02<06:38,  2.50it/s, Loss/Training=0.293]0:   1%|          | 6/1000 [00:02<06:38,  2.50it/s, Loss/Training=0.428]0:   1%|          | 7/1000 [00:02<06:16,  2.64it/s, Loss/Training=0.428]0:   1%|          | 7/1000 [00:02<06:16,  2.64it/s, Loss/Training=0.38] 0:   1%|          | 7/1000 [00:02<06:16,  2.64it/s, Loss/Training=0.42]0:   1%|          | 7/1000 [00:02<06:16,  2.64it/s, Loss/Training=0.35]0:   1%|          | 7/1000 [00:02<06:16,  2.64it/s, Loss/Training=0.484]0:   1%|          | 7/1000 [00:02<06:16,  2.64it/s, Loss/Training=0.589]0:   1%|          | 7/1000 [00:02<06:16,  2.64it/s, Loss/Training=0.506]0:   1%|          | 7/1000 [00:02<06:16,  2.64it/s, Loss/Training=0.319]0:   1%|          | 7/1000 [00:02<06:16,  2.64it/s, Loss/Training=0.377]0:   1%|          | 7/1000 [00:02<06:16,  2.64it/s, Loss/Training=0.352]0:   1%|          | 7/1000 [00:02<06:16,  2.64it/s, Loss/Training=0.27] 0:   1%|          | 8/1000 [00:03<06:03,  2.73it/s, Loss/Training=0.27]0:   1%|          | 8/1000 [00:03<06:03,  2.73it/s, Loss/Training=0.347]0:   1%|          | 8/1000 [00:03<06:03,  2.73it/s, Loss/Training=0.597]0:   1%|          | 8/1000 [00:03<06:03,  2.73it/s, Loss/Training=0.181]0:   1%|          | 8/1000 [00:03<06:03,  2.73it/s, Loss/Training=0.552]0:   1%|          | 8/1000 [00:03<06:03,  2.73it/s, Loss/Training=0.52] 0:   1%|          | 8/1000 [00:03<06:03,  2.73it/s, Loss/Training=0.307]0:   1%|          | 8/1000 [00:03<06:03,  2.73it/s, Loss/Training=0.402]0:   1%|          | 8/1000 [00:03<06:03,  2.73it/s, Loss/Training=0.312]0:   1%|          | 8/1000 [00:03<06:03,  2.73it/s, Loss/Training=0.722]0:   1%|          | 8/1000 [00:03<06:03,  2.73it/s, Loss/Training=0.626]0:   1%|          | 9/1000 [00:03<05:51,  2.82it/s, Loss/Training=0.626]0:   1%|          | 9/1000 [00:03<05:51,  2.82it/s, Loss/Training=0.417]0:   1%|          | 9/1000 [00:03<05:51,  2.82it/s, Loss/Training=0.428]0:   1%|          | 9/1000 [00:03<05:51,  2.82it/s, Loss/Training=0.355]0:   1%|          | 9/1000 [00:03<05:51,  2.82it/s, Loss/Training=0.456]0:   1%|          | 9/1000 [00:03<05:51,  2.82it/s, Loss/Training=0.324]0:   1%|          | 9/1000 [00:03<05:51,  2.82it/s, Loss/Training=0.238]0:   1%|          | 9/1000 [00:03<05:51,  2.82it/s, Loss/Training=0.471]0:   1%|          | 9/1000 [00:03<05:51,  2.82it/s, Loss/Training=0.232]0:   1%|          | 9/1000 [00:03<05:51,  2.82it/s, Loss/Training=0.43] 0:   1%|          | 9/1000 [00:03<05:51,  2.82it/s, Loss/Training=0.332]0:   1%|          | 9/1000 [00:03<07:03,  2.34it/s, Loss/Training=0.332]:actor_name:ray_tune_trainable
Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_74382_00000_0_2025-01-27_14-48-56/checkpoint_tmp5842d3
[INFO 2025-01-27 14:54:54,401] trainable.py: 904  Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_74382_00000_0_2025-01-27_14-48-56/checkpoint_tmp5842d3
Current state after restoring: {'_iteration': 1100, '_timesteps_total': None, '_time_total': 44.41896939277649, '_episodes_total': None}
[INFO 2025-01-27 14:54:54,401] trainable.py: 913  Current state after restoring: {'_iteration': 1100, '_timesteps_total': None, '_time_total': 44.41896939277649, '_episodes_total': None}
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:123: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'data.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:126: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'targets.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/train.py:770: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = to.load(save_file)
0:   0%|          | 0/1000 [00:00<?, ?it/s]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.639]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.416]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.611]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.206]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.582]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.423]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.322]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.459]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.36] 0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.392]0:   0%|          | 1/1000 [00:00<07:20,  2.27it/s, Loss/Training=0.392]0:   0%|          | 1/1000 [00:00<07:20,  2.27it/s, Loss/Training=0.412]0:   0%|          | 1/1000 [00:00<07:20,  2.27it/s, Loss/Training=0.311]0:   0%|          | 1/1000 [00:00<07:20,  2.27it/s, Loss/Training=0.507]0:   0%|          | 1/1000 [00:00<07:20,  2.27it/s, Loss/Training=0.336]0:   0%|          | 1/1000 [00:00<07:20,  2.27it/s, Loss/Training=0.248]0:   0%|          | 1/1000 [00:00<07:20,  2.27it/s, Loss/Training=0.422]0:   0%|          | 1/1000 [00:00<07:20,  2.27it/s, Loss/Training=0.233]0:   0%|          | 1/1000 [00:00<07:20,  2.27it/s, Loss/Training=0.35] 0:   0%|          | 1/1000 [00:00<07:20,  2.27it/s, Loss/Training=0.41]0:   0%|          | 1/1000 [00:00<07:20,  2.27it/s, Loss/Training=0.304]0:   0%|          | 2/1000 [00:00<06:20,  2.62it/s, Loss/Training=0.304]0:   0%|          | 2/1000 [00:00<06:20,  2.62it/s, Loss/Training=0.328]0:   0%|          | 2/1000 [00:00<06:20,  2.62it/s, Loss/Training=0.407]0:   0%|          | 2/1000 [00:00<06:20,  2.62it/s, Loss/Training=0.381]0:   0%|          | 2/1000 [00:00<06:20,  2.62it/s, Loss/Training=0.274]0:   0%|          | 2/1000 [00:00<06:20,  2.62it/s, Loss/Training=0.172]0:   0%|          | 2/1000 [00:00<06:20,  2.62it/s, Loss/Training=0.435]0:   0%|          | 2/1000 [00:00<06:20,  2.62it/s, Loss/Training=0.315]0:   0%|          | 2/1000 [00:00<06:20,  2.62it/s, Loss/Training=0.421]0:   0%|          | 2/1000 [00:01<06:20,  2.62it/s, Loss/Training=0.261]0:   0%|          | 2/1000 [00:01<06:20,  2.62it/s, Loss/Training=0.478]0:   0%|          | 3/1000 [00:01<05:56,  2.80it/s, Loss/Training=0.478]0:   0%|          | 3/1000 [00:01<05:56,  2.80it/s, Loss/Training=0.37] 0:   0%|          | 3/1000 [00:01<05:56,  2.80it/s, Loss/Training=0.321]0:   0%|          | 3/1000 [00:01<05:56,  2.80it/s, Loss/Training=0.264]0:   0%|          | 3/1000 [00:01<05:56,  2.80it/s, Loss/Training=0.45] 0:   0%|          | 3/1000 [00:01<05:56,  2.80it/s, Loss/Training=0.369]0:   0%|          | 3/1000 [00:01<05:56,  2.80it/s, Loss/Training=0.336]0:   0%|          | 3/1000 [00:01<05:56,  2.80it/s, Loss/Training=0.359]0:   0%|          | 3/1000 [00:01<05:56,  2.80it/s, Loss/Training=0.532]0:   0%|          | 3/1000 [00:01<05:56,  2.80it/s, Loss/Training=0.314]0:   0%|          | 3/1000 [00:01<05:56,  2.80it/s, Loss/Training=0.384]0:   0%|          | 4/1000 [00:01<05:42,  2.91it/s, Loss/Training=0.384]0:   0%|          | 4/1000 [00:01<05:42,  2.91it/s, Loss/Training=0.407]0:   0%|          | 4/1000 [00:01<05:42,  2.91it/s, Loss/Training=0.277]0:   0%|          | 4/1000 [00:01<05:42,  2.91it/s, Loss/Training=0.473]0:   0%|          | 4/1000 [00:01<05:42,  2.91it/s, Loss/Training=0.24] 0:   0%|          | 4/1000 [00:01<05:42,  2.91it/s, Loss/Training=0.332]0:   0%|          | 4/1000 [00:01<05:42,  2.91it/s, Loss/Training=0.223]0:   0%|          | 4/1000 [00:01<05:42,  2.91it/s, Loss/Training=0.416]0:   0%|          | 4/1000 [00:01<05:42,  2.91it/s, Loss/Training=0.405]0:   0%|          | 4/1000 [00:01<05:42,  2.91it/s, Loss/Training=0.348]0:   0%|          | 4/1000 [00:01<05:42,  2.91it/s, Loss/Training=0.389]0:   0%|          | 5/1000 [00:01<05:36,  2.96it/s, Loss/Training=0.389]0:   0%|          | 5/1000 [00:01<05:36,  2.96it/s, Loss/Training=0.555]0:   0%|          | 5/1000 [00:01<05:36,  2.96it/s, Loss/Training=0.439]0:   0%|          | 5/1000 [00:01<05:36,  2.96it/s, Loss/Training=0.141]0:   0%|          | 5/1000 [00:01<05:36,  2.96it/s, Loss/Training=0.412]0:   0%|          | 5/1000 [00:01<05:36,  2.96it/s, Loss/Training=0.525]0:   0%|          | 5/1000 [00:01<05:36,  2.96it/s, Loss/Training=0.321]0:   0%|          | 5/1000 [00:01<05:36,  2.96it/s, Loss/Training=0.345]0:   0%|          | 5/1000 [00:01<05:36,  2.96it/s, Loss/Training=0.236]0:   0%|          | 5/1000 [00:02<05:36,  2.96it/s, Loss/Training=0.819]0:   0%|          | 5/1000 [00:02<05:36,  2.96it/s, Loss/Training=0.485]0:   1%|          | 6/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.485]0:   1%|          | 6/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.351]0:   1%|          | 6/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.37] 0:   1%|          | 6/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.327]0:   1%|          | 6/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.444]0:   1%|          | 6/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.314]0:   1%|          | 6/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.249]0:   1%|          | 6/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.304]0:   1%|          | 6/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.396]0:   1%|          | 6/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.497]0:   1%|          | 6/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.501]0:   1%|          | 7/1000 [00:02<05:30,  3.01it/s, Loss/Training=0.501]0:   1%|          | 7/1000 [00:02<05:30,  3.01it/s, Loss/Training=0.381]0:   1%|          | 7/1000 [00:02<05:30,  3.01it/s, Loss/Training=0.347]0:   1%|          | 7/1000 [00:02<05:30,  3.01it/s, Loss/Training=0.56] 0:   1%|          | 7/1000 [00:02<05:30,  3.01it/s, Loss/Training=0.349]0:   1%|          | 7/1000 [00:02<05:30,  3.01it/s, Loss/Training=0.326]0:   1%|          | 7/1000 [00:02<05:30,  3.01it/s, Loss/Training=0.454]0:   1%|          | 7/1000 [00:02<05:30,  3.01it/s, Loss/Training=0.362]0:   1%|          | 7/1000 [00:02<05:30,  3.01it/s, Loss/Training=0.507]0:   1%|          | 7/1000 [00:02<05:30,  3.01it/s, Loss/Training=0.36] 0:   1%|          | 7/1000 [00:02<05:30,  3.01it/s, Loss/Training=0.505]0:   1%|          | 8/1000 [00:02<05:28,  3.02it/s, Loss/Training=0.505]0:   1%|          | 8/1000 [00:02<05:28,  3.02it/s, Loss/Training=0.316]0:   1%|          | 8/1000 [00:02<05:28,  3.02it/s, Loss/Training=0.304]0:   1%|          | 8/1000 [00:02<05:28,  3.02it/s, Loss/Training=0.333]0:   1%|          | 8/1000 [00:02<05:28,  3.02it/s, Loss/Training=0.437]0:   1%|          | 8/1000 [00:02<05:28,  3.02it/s, Loss/Training=0.399]0:   1%|          | 8/1000 [00:02<05:28,  3.02it/s, Loss/Training=0.516]0:   1%|          | 8/1000 [00:02<05:28,  3.02it/s, Loss/Training=0.379]0:   1%|          | 8/1000 [00:02<05:28,  3.02it/s, Loss/Training=0.334]0:   1%|          | 8/1000 [00:02<05:28,  3.02it/s, Loss/Training=0.498]0:   1%|          | 8/1000 [00:03<05:28,  3.02it/s, Loss/Training=0.442]0:   1%|          | 9/1000 [00:03<05:26,  3.03it/s, Loss/Training=0.442]0:   1%|          | 9/1000 [00:03<05:26,  3.03it/s, Loss/Training=0.327]0:   1%|          | 9/1000 [00:03<05:26,  3.03it/s, Loss/Training=0.498]0:   1%|          | 9/1000 [00:03<05:26,  3.03it/s, Loss/Training=0.311]0:   1%|          | 9/1000 [00:03<05:26,  3.03it/s, Loss/Training=0.281]0:   1%|          | 9/1000 [00:03<05:26,  3.03it/s, Loss/Training=0.28] 0:   1%|          | 9/1000 [00:03<05:26,  3.03it/s, Loss/Training=0.617]0:   1%|          | 9/1000 [00:03<05:26,  3.03it/s, Loss/Training=0.299]0:   1%|          | 9/1000 [00:03<05:26,  3.03it/s, Loss/Training=0.396]0:   1%|          | 9/1000 [00:03<05:26,  3.03it/s, Loss/Training=0.464]0:   1%|          | 9/1000 [00:03<05:26,  3.03it/s, Loss/Training=0.29] 0:   1%|          | 9/1000 [00:03<06:24,  2.58it/s, Loss/Training=0.29]
:actor_name:ray_tune_trainable
Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_74382_00000_0_2025-01-27_14-48-56/checkpoint_tmp3ac083
[INFO 2025-01-27 14:55:24,547] trainable.py: 904  Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_74382_00000_0_2025-01-27_14-48-56/checkpoint_tmp3ac083
Current state after restoring: {'_iteration': 1200, '_timesteps_total': None, '_time_total': 48.39382863044739, '_episodes_total': None}
[INFO 2025-01-27 14:55:24,547] trainable.py: 913  Current state after restoring: {'_iteration': 1200, '_timesteps_total': None, '_time_total': 48.39382863044739, '_episodes_total': None}
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:123: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'data.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:126: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'targets.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/train.py:770: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = to.load(save_file)
0:   0%|          | 0/1000 [00:00<?, ?it/s]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.221]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.232]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.256]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.386]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.292]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.388]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.241]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.157]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.386]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.354]0:   0%|          | 1/1000 [00:00<07:23,  2.25it/s, Loss/Training=0.354]0:   0%|          | 1/1000 [00:00<07:23,  2.25it/s, Loss/Training=0.447]0:   0%|          | 1/1000 [00:00<07:23,  2.25it/s, Loss/Training=0.262]0:   0%|          | 1/1000 [00:00<07:23,  2.25it/s, Loss/Training=0.161]0:   0%|          | 1/1000 [00:00<07:23,  2.25it/s, Loss/Training=0.487]0:   0%|          | 1/1000 [00:00<07:23,  2.25it/s, Loss/Training=0.363]0:   0%|          | 1/1000 [00:00<07:23,  2.25it/s, Loss/Training=0.202]0:   0%|          | 1/1000 [00:00<07:23,  2.25it/s, Loss/Training=0.404]0:   0%|          | 1/1000 [00:00<07:23,  2.25it/s, Loss/Training=0.555]0:   0%|          | 1/1000 [00:00<07:23,  2.25it/s, Loss/Training=0.405]0:   0%|          | 1/1000 [00:00<07:23,  2.25it/s, Loss/Training=0.254]0:   0%|          | 2/1000 [00:00<06:17,  2.64it/s, Loss/Training=0.254]0:   0%|          | 2/1000 [00:00<06:17,  2.64it/s, Loss/Training=0.367]0:   0%|          | 2/1000 [00:00<06:17,  2.64it/s, Loss/Training=0.3]  0:   0%|          | 2/1000 [00:00<06:17,  2.64it/s, Loss/Training=0.301]0:   0%|          | 2/1000 [00:00<06:17,  2.64it/s, Loss/Training=0.354]0:   0%|          | 2/1000 [00:00<06:17,  2.64it/s, Loss/Training=0.539]0:   0%|          | 2/1000 [00:00<06:17,  2.64it/s, Loss/Training=0.385]0:   0%|          | 2/1000 [00:00<06:17,  2.64it/s, Loss/Training=0.21] 0:   0%|          | 2/1000 [00:00<06:17,  2.64it/s, Loss/Training=0.244]0:   0%|          | 2/1000 [00:01<06:17,  2.64it/s, Loss/Training=0.278]0:   0%|          | 2/1000 [00:01<06:17,  2.64it/s, Loss/Training=0.429]0:   0%|          | 3/1000 [00:01<05:55,  2.80it/s, Loss/Training=0.429]0:   0%|          | 3/1000 [00:01<05:55,  2.80it/s, Loss/Training=0.417]0:   0%|          | 3/1000 [00:01<05:55,  2.80it/s, Loss/Training=0.365]0:   0%|          | 3/1000 [00:01<05:55,  2.80it/s, Loss/Training=0.449]0:   0%|          | 3/1000 [00:01<05:55,  2.80it/s, Loss/Training=0.324]0:   0%|          | 3/1000 [00:01<05:55,  2.80it/s, Loss/Training=0.289]0:   0%|          | 3/1000 [00:01<05:55,  2.80it/s, Loss/Training=0.391]0:   0%|          | 3/1000 [00:01<05:55,  2.80it/s, Loss/Training=0.345]0:   0%|          | 3/1000 [00:01<05:55,  2.80it/s, Loss/Training=0.545]0:   0%|          | 3/1000 [00:01<05:55,  2.80it/s, Loss/Training=0.246]0:   0%|          | 3/1000 [00:01<05:55,  2.80it/s, Loss/Training=0.309]0:   0%|          | 4/1000 [00:01<05:43,  2.90it/s, Loss/Training=0.309]0:   0%|          | 4/1000 [00:01<05:43,  2.90it/s, Loss/Training=0.365]0:   0%|          | 4/1000 [00:01<05:43,  2.90it/s, Loss/Training=0.317]0:   0%|          | 4/1000 [00:01<05:43,  2.90it/s, Loss/Training=0.414]0:   0%|          | 4/1000 [00:01<05:43,  2.90it/s, Loss/Training=0.36] 0:   0%|          | 4/1000 [00:01<05:43,  2.90it/s, Loss/Training=0.269]0:   0%|          | 4/1000 [00:01<05:43,  2.90it/s, Loss/Training=0.315]0:   0%|          | 4/1000 [00:01<05:43,  2.90it/s, Loss/Training=0.464]0:   0%|          | 4/1000 [00:01<05:43,  2.90it/s, Loss/Training=0.26] 0:   0%|          | 4/1000 [00:01<05:43,  2.90it/s, Loss/Training=0.469]0:   0%|          | 4/1000 [00:01<05:43,  2.90it/s, Loss/Training=0.325]0:   0%|          | 5/1000 [00:01<05:37,  2.94it/s, Loss/Training=0.325]0:   0%|          | 5/1000 [00:01<05:37,  2.94it/s, Loss/Training=0.243]0:   0%|          | 5/1000 [00:01<05:37,  2.94it/s, Loss/Training=0.334]0:   0%|          | 5/1000 [00:01<05:37,  2.94it/s, Loss/Training=0.3]  0:   0%|          | 5/1000 [00:01<05:37,  2.94it/s, Loss/Training=0.46]0:   0%|          | 5/1000 [00:01<05:37,  2.94it/s, Loss/Training=0.424]0:   0%|          | 5/1000 [00:01<05:37,  2.94it/s, Loss/Training=0.366]0:   0%|          | 5/1000 [00:01<05:37,  2.94it/s, Loss/Training=0.312]0:   0%|          | 5/1000 [00:01<05:37,  2.94it/s, Loss/Training=0.337]0:   0%|          | 5/1000 [00:02<05:37,  2.94it/s, Loss/Training=0.254]0:   0%|          | 5/1000 [00:02<05:37,  2.94it/s, Loss/Training=0.444]0:   1%|          | 6/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.444]0:   1%|          | 6/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.538]0:   1%|          | 6/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.197]0:   1%|          | 6/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.498]0:   1%|          | 6/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.489]0:   1%|          | 6/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.508]0:   1%|          | 6/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.365]0:   1%|          | 6/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.323]0:   1%|          | 6/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.526]0:   1%|          | 6/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.221]0:   1%|          | 6/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.221]0:   1%|          | 7/1000 [00:02<07:58,  2.08it/s, Loss/Training=0.221]0:   1%|          | 7/1000 [00:02<07:58,  2.08it/s, Loss/Training=0.502]0:   1%|          | 7/1000 [00:02<07:58,  2.08it/s, Loss/Training=0.536]0:   1%|          | 7/1000 [00:02<07:58,  2.08it/s, Loss/Training=0.328]0:   1%|          | 7/1000 [00:02<07:58,  2.08it/s, Loss/Training=0.483]0:   1%|          | 7/1000 [00:03<07:58,  2.08it/s, Loss/Training=0.281]0:   1%|          | 7/1000 [00:03<07:58,  2.08it/s, Loss/Training=0.256]0:   1%|          | 7/1000 [00:03<07:58,  2.08it/s, Loss/Training=0.512]0:   1%|          | 7/1000 [00:03<07:58,  2.08it/s, Loss/Training=0.44] 0:   1%|          | 7/1000 [00:03<07:58,  2.08it/s, Loss/Training=0.468]0:   1%|          | 7/1000 [00:03<07:58,  2.08it/s, Loss/Training=0.33] 0:   1%|          | 8/1000 [00:03<07:11,  2.30it/s, Loss/Training=0.33]0:   1%|          | 8/1000 [00:03<07:11,  2.30it/s, Loss/Training=0.476]0:   1%|          | 8/1000 [00:03<07:11,  2.30it/s, Loss/Training=0.361]0:   1%|          | 8/1000 [00:03<07:11,  2.30it/s, Loss/Training=0.356]0:   1%|          | 8/1000 [00:03<07:11,  2.30it/s, Loss/Training=0.354]0:   1%|          | 8/1000 [00:03<07:11,  2.30it/s, Loss/Training=0.284]0:   1%|          | 8/1000 [00:03<07:11,  2.30it/s, Loss/Training=0.489]0:   1%|          | 8/1000 [00:03<07:11,  2.30it/s, Loss/Training=0.347]0:   1%|          | 8/1000 [00:03<07:11,  2.30it/s, Loss/Training=0.338]0:   1%|          | 8/1000 [00:03<07:11,  2.30it/s, Loss/Training=0.335]0:   1%|          | 8/1000 [00:03<07:11,  2.30it/s, Loss/Training=0.385]0:   1%|          | 9/1000 [00:03<06:39,  2.48it/s, Loss/Training=0.385]0:   1%|          | 9/1000 [00:03<06:39,  2.48it/s, Loss/Training=0.562]0:   1%|          | 9/1000 [00:03<06:39,  2.48it/s, Loss/Training=0.425]0:   1%|          | 9/1000 [00:03<06:39,  2.48it/s, Loss/Training=0.304]0:   1%|          | 9/1000 [00:03<06:39,  2.48it/s, Loss/Training=0.322]0:   1%|          | 9/1000 [00:03<06:39,  2.48it/s, Loss/Training=0.496]0:   1%|          | 9/1000 [00:03<06:39,  2.48it/s, Loss/Training=0.276]0:   1%|          | 9/1000 [00:03<06:39,  2.48it/s, Loss/Training=0.566]0:   1%|          | 9/1000 [00:03<06:39,  2.48it/s, Loss/Training=0.569]0:   1%|          | 9/1000 [00:03<06:39,  2.48it/s, Loss/Training=0.59] 0:   1%|          | 9/1000 [00:03<06:39,  2.48it/s, Loss/Training=0.269]:actor_name:ray_tune_trainable
Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_74382_00000_0_2025-01-27_14-48-56/checkpoint_tmp6de380
[INFO 2025-01-27 14:55:56,319] trainable.py: 904  Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_74382_00000_0_2025-01-27_14-48-56/checkpoint_tmp6de380
Current state after restoring: {'_iteration': 1200, '_timesteps_total': None, '_time_total': 48.40232515335083, '_episodes_total': None}
[INFO 2025-01-27 14:55:56,319] trainable.py: 913  Current state after restoring: {'_iteration': 1200, '_timesteps_total': None, '_time_total': 48.40232515335083, '_episodes_total': None}
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:123: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'data.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:126: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'targets.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/train.py:770: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = to.load(save_file)
0:   0%|          | 0/1000 [00:00<?, ?it/s]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.506]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.586]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.404]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.434]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.416]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.464]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.324]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.693]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.503]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.328]0:   0%|          | 1/1000 [00:00<07:14,  2.30it/s, Loss/Training=0.328]0:   0%|          | 1/1000 [00:00<07:14,  2.30it/s, Loss/Training=0.545]0:   0%|          | 1/1000 [00:00<07:14,  2.30it/s, Loss/Training=0.219]0:   0%|          | 1/1000 [00:00<07:14,  2.30it/s, Loss/Training=0.391]0:   0%|          | 1/1000 [00:00<07:14,  2.30it/s, Loss/Training=0.327]0:   0%|          | 1/1000 [00:00<07:14,  2.30it/s, Loss/Training=0.275]0:   0%|          | 1/1000 [00:00<07:14,  2.30it/s, Loss/Training=0.345]0:   0%|          | 1/1000 [00:00<07:14,  2.30it/s, Loss/Training=0.295]0:   0%|          | 1/1000 [00:00<07:14,  2.30it/s, Loss/Training=0.39] 0:   0%|          | 1/1000 [00:00<07:14,  2.30it/s, Loss/Training=0.477]0:   0%|          | 1/1000 [00:00<07:14,  2.30it/s, Loss/Training=0.204]0:   0%|          | 2/1000 [00:00<06:12,  2.68it/s, Loss/Training=0.204]0:   0%|          | 2/1000 [00:00<06:12,  2.68it/s, Loss/Training=0.299]0:   0%|          | 2/1000 [00:00<06:12,  2.68it/s, Loss/Training=0.339]0:   0%|          | 2/1000 [00:00<06:12,  2.68it/s, Loss/Training=0.406]0:   0%|          | 2/1000 [00:00<06:12,  2.68it/s, Loss/Training=0.528]0:   0%|          | 2/1000 [00:00<06:12,  2.68it/s, Loss/Training=0.382]0:   0%|          | 2/1000 [00:00<06:12,  2.68it/s, Loss/Training=0.422]0:   0%|          | 2/1000 [00:00<06:12,  2.68it/s, Loss/Training=0.589]0:   0%|          | 2/1000 [00:00<06:12,  2.68it/s, Loss/Training=0.288]0:   0%|          | 2/1000 [00:01<06:12,  2.68it/s, Loss/Training=0.588]0:   0%|          | 2/1000 [00:01<06:12,  2.68it/s, Loss/Training=0.654]0:   0%|          | 3/1000 [00:01<05:52,  2.83it/s, Loss/Training=0.654]0:   0%|          | 3/1000 [00:01<05:52,  2.83it/s, Loss/Training=0.341]0:   0%|          | 3/1000 [00:01<05:52,  2.83it/s, Loss/Training=0.435]0:   0%|          | 3/1000 [00:01<05:52,  2.83it/s, Loss/Training=0.257]0:   0%|          | 3/1000 [00:01<05:52,  2.83it/s, Loss/Training=0.183]0:   0%|          | 3/1000 [00:01<05:52,  2.83it/s, Loss/Training=0.298]0:   0%|          | 3/1000 [00:01<05:52,  2.83it/s, Loss/Training=0.242]0:   0%|          | 3/1000 [00:01<05:52,  2.83it/s, Loss/Training=0.471]0:   0%|          | 3/1000 [00:01<05:52,  2.83it/s, Loss/Training=0.307]0:   0%|          | 3/1000 [00:01<05:52,  2.83it/s, Loss/Training=0.243]0:   0%|          | 3/1000 [00:01<05:52,  2.83it/s, Loss/Training=0.525]0:   0%|          | 4/1000 [00:01<05:44,  2.89it/s, Loss/Training=0.525]0:   0%|          | 4/1000 [00:01<05:44,  2.89it/s, Loss/Training=0.463]0:   0%|          | 4/1000 [00:01<05:44,  2.89it/s, Loss/Training=0.389]0:   0%|          | 4/1000 [00:01<05:44,  2.89it/s, Loss/Training=0.518]0:   0%|          | 4/1000 [00:01<05:44,  2.89it/s, Loss/Training=0.359]0:   0%|          | 4/1000 [00:01<05:44,  2.89it/s, Loss/Training=0.343]0:   0%|          | 4/1000 [00:01<05:44,  2.89it/s, Loss/Training=0.406]0:   0%|          | 4/1000 [00:01<05:44,  2.89it/s, Loss/Training=0.528]0:   0%|          | 4/1000 [00:01<05:44,  2.89it/s, Loss/Training=0.41] 0:   0%|          | 4/1000 [00:01<05:44,  2.89it/s, Loss/Training=0.515]0:   0%|          | 4/1000 [00:01<05:44,  2.89it/s, Loss/Training=0.341]0:   0%|          | 5/1000 [00:01<05:40,  2.92it/s, Loss/Training=0.341]0:   0%|          | 5/1000 [00:01<05:40,  2.92it/s, Loss/Training=0.333]0:   0%|          | 5/1000 [00:01<05:40,  2.92it/s, Loss/Training=0.434]0:   0%|          | 5/1000 [00:01<05:40,  2.92it/s, Loss/Training=0.445]0:   0%|          | 5/1000 [00:01<05:40,  2.92it/s, Loss/Training=0.348]0:   0%|          | 5/1000 [00:01<05:40,  2.92it/s, Loss/Training=0.63] 0:   0%|          | 5/1000 [00:01<05:40,  2.92it/s, Loss/Training=0.285]0:   0%|          | 5/1000 [00:01<05:40,  2.92it/s, Loss/Training=0.314]0:   0%|          | 5/1000 [00:01<05:40,  2.92it/s, Loss/Training=0.361]0:   0%|          | 5/1000 [00:02<05:40,  2.92it/s, Loss/Training=0.643]0:   0%|          | 5/1000 [00:02<05:40,  2.92it/s, Loss/Training=0.286]0:   1%|          | 6/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.286]0:   1%|          | 6/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.323]0:   1%|          | 6/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.32] 0:   1%|          | 6/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.32]0:   1%|          | 6/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.535]0:   1%|          | 6/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.533]0:   1%|          | 6/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.266]0:   1%|          | 6/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.445]0:   1%|          | 6/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.655]0:   1%|          | 6/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.359]0:   1%|          | 6/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.441]0:   1%|          | 7/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.441]0:   1%|          | 7/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.307]0:   1%|          | 7/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.204]0:   1%|          | 7/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.281]0:   1%|          | 7/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.391]0:   1%|          | 7/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.251]0:   1%|          | 7/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.421]0:   1%|          | 7/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.479]0:   1%|          | 7/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.31] 0:   1%|          | 7/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.398]0:   1%|          | 7/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.228]0:   1%|          | 8/1000 [00:02<05:32,  2.98it/s, Loss/Training=0.228]0:   1%|          | 8/1000 [00:02<05:32,  2.98it/s, Loss/Training=0.284]0:   1%|          | 8/1000 [00:02<05:32,  2.98it/s, Loss/Training=0.138]0:   1%|          | 8/1000 [00:02<05:32,  2.98it/s, Loss/Training=0.351]0:   1%|          | 8/1000 [00:02<05:32,  2.98it/s, Loss/Training=0.393]0:   1%|          | 8/1000 [00:02<05:32,  2.98it/s, Loss/Training=0.452]0:   1%|          | 8/1000 [00:02<05:32,  2.98it/s, Loss/Training=0.319]0:   1%|          | 8/1000 [00:02<05:32,  2.98it/s, Loss/Training=0.46] 0:   1%|          | 8/1000 [00:02<05:32,  2.98it/s, Loss/Training=0.242]0:   1%|          | 8/1000 [00:03<05:32,  2.98it/s, Loss/Training=0.48] 0:   1%|          | 8/1000 [00:03<05:32,  2.98it/s, Loss/Training=0.346]0:   1%|          | 9/1000 [00:03<05:29,  3.00it/s, Loss/Training=0.346]0:   1%|          | 9/1000 [00:03<05:29,  3.00it/s, Loss/Training=0.201]0:   1%|          | 9/1000 [00:03<05:29,  3.00it/s, Loss/Training=0.217]0:   1%|          | 9/1000 [00:03<05:29,  3.00it/s, Loss/Training=0.512]0:   1%|          | 9/1000 [00:03<05:29,  3.00it/s, Loss/Training=0.231]0:   1%|          | 9/1000 [00:03<05:29,  3.00it/s, Loss/Training=0.384]0:   1%|          | 9/1000 [00:03<05:29,  3.00it/s, Loss/Training=0.36] 0:   1%|          | 9/1000 [00:03<05:29,  3.00it/s, Loss/Training=0.322]0:   1%|          | 9/1000 [00:03<05:29,  3.00it/s, Loss/Training=0.563]0:   1%|          | 9/1000 [00:03<05:29,  3.00it/s, Loss/Training=0.312]0:   1%|          | 9/1000 [00:03<05:29,  3.00it/s, Loss/Training=0.242]0:   1%|          | 9/1000 [00:03<06:38,  2.49it/s, Loss/Training=0.242]
:actor_name:ray_tune_trainable
Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_74382_00000_0_2025-01-27_14-48-56/checkpoint_tmpa27d9c
[INFO 2025-01-27 14:56:30,159] trainable.py: 904  Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_74382_00000_0_2025-01-27_14-48-56/checkpoint_tmpa27d9c
Current state after restoring: {'_iteration': 1300, '_timesteps_total': None, '_time_total': 52.40592122077942, '_episodes_total': None}
[INFO 2025-01-27 14:56:30,159] trainable.py: 913  Current state after restoring: {'_iteration': 1300, '_timesteps_total': None, '_time_total': 52.40592122077942, '_episodes_total': None}
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:123: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'data.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:126: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'targets.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/train.py:770: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = to.load(save_file)
0:   0%|          | 0/1000 [00:00<?, ?it/s]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.351]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.366]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.576]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.426]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.398]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.57] 0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.485]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.211]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.31] 0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.609]0:   0%|          | 1/1000 [00:00<07:40,  2.17it/s, Loss/Training=0.609]0:   0%|          | 1/1000 [00:00<07:40,  2.17it/s, Loss/Training=0.306]0:   0%|          | 1/1000 [00:00<07:40,  2.17it/s, Loss/Training=0.278]0:   0%|          | 1/1000 [00:00<07:40,  2.17it/s, Loss/Training=0.503]0:   0%|          | 1/1000 [00:00<07:40,  2.17it/s, Loss/Training=0.419]0:   0%|          | 1/1000 [00:00<07:40,  2.17it/s, Loss/Training=0.406]0:   0%|          | 1/1000 [00:00<07:40,  2.17it/s, Loss/Training=0.398]0:   0%|          | 1/1000 [00:00<07:40,  2.17it/s, Loss/Training=0.415]0:   0%|          | 1/1000 [00:00<07:40,  2.17it/s, Loss/Training=0.412]0:   0%|          | 1/1000 [00:00<07:40,  2.17it/s, Loss/Training=0.61] 0:   0%|          | 1/1000 [00:00<07:40,  2.17it/s, Loss/Training=0.595]0:   0%|          | 2/1000 [00:00<06:27,  2.57it/s, Loss/Training=0.595]0:   0%|          | 2/1000 [00:00<06:27,  2.57it/s, Loss/Training=0.294]0:   0%|          | 2/1000 [00:00<06:27,  2.57it/s, Loss/Training=0.475]0:   0%|          | 2/1000 [00:00<06:27,  2.57it/s, Loss/Training=0.206]0:   0%|          | 2/1000 [00:00<06:27,  2.57it/s, Loss/Training=0.364]0:   0%|          | 2/1000 [00:00<06:27,  2.57it/s, Loss/Training=0.39] 0:   0%|          | 2/1000 [00:00<06:27,  2.57it/s, Loss/Training=0.245]0:   0%|          | 2/1000 [00:00<06:27,  2.57it/s, Loss/Training=0.264]0:   0%|          | 2/1000 [00:01<06:27,  2.57it/s, Loss/Training=0.3]  0:   0%|          | 2/1000 [00:01<06:27,  2.57it/s, Loss/Training=0.437]0:   0%|          | 2/1000 [00:01<06:27,  2.57it/s, Loss/Training=0.385]0:   0%|          | 3/1000 [00:02<13:12,  1.26it/s, Loss/Training=0.385]0:   0%|          | 3/1000 [00:02<13:12,  1.26it/s, Loss/Training=0.495]0:   0%|          | 3/1000 [00:02<13:12,  1.26it/s, Loss/Training=0.282]0:   0%|          | 3/1000 [00:02<13:12,  1.26it/s, Loss/Training=0.373]0:   0%|          | 3/1000 [00:02<13:12,  1.26it/s, Loss/Training=0.492]0:   0%|          | 3/1000 [00:02<13:12,  1.26it/s, Loss/Training=0.381]0:   0%|          | 3/1000 [00:02<13:12,  1.26it/s, Loss/Training=0.405]0:   0%|          | 3/1000 [00:02<13:12,  1.26it/s, Loss/Training=0.395]0:   0%|          | 3/1000 [00:02<13:12,  1.26it/s, Loss/Training=0.511]0:   0%|          | 3/1000 [00:02<13:12,  1.26it/s, Loss/Training=0.322]0:   0%|          | 3/1000 [00:02<13:12,  1.26it/s, Loss/Training=0.525]0:   0%|          | 4/1000 [00:02<10:11,  1.63it/s, Loss/Training=0.525]0:   0%|          | 4/1000 [00:02<10:11,  1.63it/s, Loss/Training=0.258]0:   0%|          | 4/1000 [00:02<10:11,  1.63it/s, Loss/Training=0.473]0:   0%|          | 4/1000 [00:02<10:11,  1.63it/s, Loss/Training=0.289]0:   0%|          | 4/1000 [00:02<10:11,  1.63it/s, Loss/Training=0.429]0:   0%|          | 4/1000 [00:02<10:11,  1.63it/s, Loss/Training=0.384]0:   0%|          | 4/1000 [00:02<10:11,  1.63it/s, Loss/Training=0.313]0:   0%|          | 4/1000 [00:02<10:11,  1.63it/s, Loss/Training=0.482]0:   0%|          | 4/1000 [00:02<10:11,  1.63it/s, Loss/Training=0.422]0:   0%|          | 4/1000 [00:02<10:11,  1.63it/s, Loss/Training=0.202]0:   0%|          | 4/1000 [00:02<10:11,  1.63it/s, Loss/Training=0.465]0:   0%|          | 5/1000 [00:02<08:27,  1.96it/s, Loss/Training=0.465]0:   0%|          | 5/1000 [00:02<08:27,  1.96it/s, Loss/Training=0.483]0:   0%|          | 5/1000 [00:02<08:27,  1.96it/s, Loss/Training=0.601]0:   0%|          | 5/1000 [00:02<08:27,  1.96it/s, Loss/Training=0.311]0:   0%|          | 5/1000 [00:02<08:27,  1.96it/s, Loss/Training=0.522]0:   0%|          | 5/1000 [00:02<08:27,  1.96it/s, Loss/Training=0.315]0:   0%|          | 5/1000 [00:02<08:27,  1.96it/s, Loss/Training=0.263]0:   0%|          | 5/1000 [00:02<08:27,  1.96it/s, Loss/Training=0.31] 0:   0%|          | 5/1000 [00:02<08:27,  1.96it/s, Loss/Training=0.254]0:   0%|          | 5/1000 [00:02<08:27,  1.96it/s, Loss/Training=0.439]0:   0%|          | 5/1000 [00:03<08:27,  1.96it/s, Loss/Training=0.388]0:   1%|          | 6/1000 [00:03<07:25,  2.23it/s, Loss/Training=0.388]0:   1%|          | 6/1000 [00:03<07:25,  2.23it/s, Loss/Training=0.468]0:   1%|          | 6/1000 [00:03<07:25,  2.23it/s, Loss/Training=0.502]0:   1%|          | 6/1000 [00:03<07:25,  2.23it/s, Loss/Training=0.283]0:   1%|          | 6/1000 [00:03<07:25,  2.23it/s, Loss/Training=0.484]0:   1%|          | 6/1000 [00:03<07:25,  2.23it/s, Loss/Training=0.234]0:   1%|          | 6/1000 [00:03<07:25,  2.23it/s, Loss/Training=0.328]0:   1%|          | 6/1000 [00:03<07:25,  2.23it/s, Loss/Training=0.601]0:   1%|          | 6/1000 [00:03<07:25,  2.23it/s, Loss/Training=0.568]0:   1%|          | 6/1000 [00:03<07:25,  2.23it/s, Loss/Training=0.453]0:   1%|          | 6/1000 [00:03<07:25,  2.23it/s, Loss/Training=0.354]0:   1%|          | 7/1000 [00:03<06:46,  2.44it/s, Loss/Training=0.354]0:   1%|          | 7/1000 [00:03<06:46,  2.44it/s, Loss/Training=0.404]0:   1%|          | 7/1000 [00:03<06:46,  2.44it/s, Loss/Training=0.304]0:   1%|          | 7/1000 [00:03<06:46,  2.44it/s, Loss/Training=0.493]0:   1%|          | 7/1000 [00:03<06:46,  2.44it/s, Loss/Training=0.274]0:   1%|          | 7/1000 [00:03<06:46,  2.44it/s, Loss/Training=0.264]0:   1%|          | 7/1000 [00:03<06:46,  2.44it/s, Loss/Training=0.324]0:   1%|          | 7/1000 [00:03<06:46,  2.44it/s, Loss/Training=0.561]0:   1%|          | 7/1000 [00:03<06:46,  2.44it/s, Loss/Training=0.273]0:   1%|          | 7/1000 [00:03<06:46,  2.44it/s, Loss/Training=0.375]0:   1%|          | 7/1000 [00:03<06:46,  2.44it/s, Loss/Training=0.397]0:   1%|          | 8/1000 [00:03<06:21,  2.60it/s, Loss/Training=0.397]0:   1%|          | 8/1000 [00:03<06:21,  2.60it/s, Loss/Training=0.263]0:   1%|          | 8/1000 [00:03<06:21,  2.60it/s, Loss/Training=0.24] 0:   1%|          | 8/1000 [00:03<06:21,  2.60it/s, Loss/Training=0.333]0:   1%|          | 8/1000 [00:03<06:21,  2.60it/s, Loss/Training=0.45] 0:   1%|          | 8/1000 [00:03<06:21,  2.60it/s, Loss/Training=0.276]0:   1%|          | 8/1000 [00:03<06:21,  2.60it/s, Loss/Training=0.521]0:   1%|          | 8/1000 [00:03<06:21,  2.60it/s, Loss/Training=0.546]0:   1%|          | 8/1000 [00:03<06:21,  2.60it/s, Loss/Training=0.344]0:   1%|          | 8/1000 [00:03<06:21,  2.60it/s, Loss/Training=0.217]0:   1%|          | 8/1000 [00:04<06:21,  2.60it/s, Loss/Training=0.47] 0:   1%|          | 9/1000 [00:04<06:04,  2.72it/s, Loss/Training=0.47]0:   1%|          | 9/1000 [00:04<06:04,  2.72it/s, Loss/Training=0.587]0:   1%|          | 9/1000 [00:04<06:04,  2.72it/s, Loss/Training=0.681]0:   1%|          | 9/1000 [00:04<06:04,  2.72it/s, Loss/Training=0.388]0:   1%|          | 9/1000 [00:04<06:04,  2.72it/s, Loss/Training=0.241]0:   1%|          | 9/1000 [00:04<06:04,  2.72it/s, Loss/Training=0.232]0:   1%|          | 9/1000 [00:04<06:04,  2.72it/s, Loss/Training=0.238]0:   1%|          | 9/1000 [00:04<06:04,  2.72it/s, Loss/Training=0.396]0:   1%|          | 9/1000 [00:04<06:04,  2.72it/s, Loss/Training=0.391]0:   1%|          | 9/1000 [00:04<06:04,  2.72it/s, Loss/Training=0.306]0:   1%|          | 9/1000 [00:04<06:04,  2.72it/s, Loss/Training=0.504]:actor_name:ray_tune_trainable
