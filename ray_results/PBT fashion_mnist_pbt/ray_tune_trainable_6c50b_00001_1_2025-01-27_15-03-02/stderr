:actor_name:ray_tune_trainable
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:123: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'data.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:126: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'targets.pt')))
0:   0%|          | 0/1000 [00:00<?, ?it/s]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=2.27]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=2.28]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=2.3] 0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=2.29]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=2.27]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=2.27]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=2.29]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=2.26]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=2.26]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=2.27]0:   0%|          | 1/1000 [00:00<07:29,  2.22it/s, Loss/Training=2.27]0:   0%|          | 1/1000 [00:00<07:29,  2.22it/s, Loss/Training=2.25]0:   0%|          | 1/1000 [00:00<07:29,  2.22it/s, Loss/Training=2.36]0:   0%|          | 1/1000 [00:00<07:29,  2.22it/s, Loss/Training=2.32]0:   0%|          | 1/1000 [00:00<07:29,  2.22it/s, Loss/Training=2.23]0:   0%|          | 1/1000 [00:00<07:29,  2.22it/s, Loss/Training=2.27]0:   0%|          | 1/1000 [00:00<07:29,  2.22it/s, Loss/Training=2.29]0:   0%|          | 1/1000 [00:00<07:29,  2.22it/s, Loss/Training=2.26]0:   0%|          | 1/1000 [00:00<07:29,  2.22it/s, Loss/Training=2.38]0:   0%|          | 1/1000 [00:00<07:29,  2.22it/s, Loss/Training=2.22]0:   0%|          | 1/1000 [00:00<07:29,  2.22it/s, Loss/Training=2.34]0:   0%|          | 2/1000 [00:00<06:15,  2.66it/s, Loss/Training=2.34]0:   0%|          | 2/1000 [00:00<06:15,  2.66it/s, Loss/Training=2.27]0:   0%|          | 2/1000 [00:00<06:15,  2.66it/s, Loss/Training=2.27]0:   0%|          | 2/1000 [00:00<06:15,  2.66it/s, Loss/Training=2.28]0:   0%|          | 2/1000 [00:00<06:15,  2.66it/s, Loss/Training=2.35]0:   0%|          | 2/1000 [00:00<06:15,  2.66it/s, Loss/Training=2.25]0:   0%|          | 2/1000 [00:00<06:15,  2.66it/s, Loss/Training=2.27]0:   0%|          | 2/1000 [00:00<06:15,  2.66it/s, Loss/Training=2.31]0:   0%|          | 2/1000 [00:00<06:15,  2.66it/s, Loss/Training=2.33]0:   0%|          | 2/1000 [00:01<06:15,  2.66it/s, Loss/Training=2.27]0:   0%|          | 2/1000 [00:01<06:15,  2.66it/s, Loss/Training=2.38]0:   0%|          | 3/1000 [00:01<05:51,  2.84it/s, Loss/Training=2.38]0:   0%|          | 3/1000 [00:01<05:51,  2.84it/s, Loss/Training=2.29]0:   0%|          | 3/1000 [00:01<05:51,  2.84it/s, Loss/Training=2.34]0:   0%|          | 3/1000 [00:01<05:51,  2.84it/s, Loss/Training=2.27]0:   0%|          | 3/1000 [00:01<05:51,  2.84it/s, Loss/Training=2.22]0:   0%|          | 3/1000 [00:01<05:51,  2.84it/s, Loss/Training=2.28]0:   0%|          | 3/1000 [00:01<05:51,  2.84it/s, Loss/Training=2.39]0:   0%|          | 3/1000 [00:01<05:51,  2.84it/s, Loss/Training=2.26]0:   0%|          | 3/1000 [00:01<05:51,  2.84it/s, Loss/Training=2.35]0:   0%|          | 3/1000 [00:01<05:51,  2.84it/s, Loss/Training=2.33]0:   0%|          | 3/1000 [00:01<05:51,  2.84it/s, Loss/Training=2.24]0:   0%|          | 4/1000 [00:01<05:41,  2.92it/s, Loss/Training=2.24]0:   0%|          | 4/1000 [00:01<05:41,  2.92it/s, Loss/Training=2.27]0:   0%|          | 4/1000 [00:01<05:41,  2.92it/s, Loss/Training=2.28]0:   0%|          | 4/1000 [00:01<05:41,  2.92it/s, Loss/Training=2.29]0:   0%|          | 4/1000 [00:01<05:41,  2.92it/s, Loss/Training=2.26]0:   0%|          | 4/1000 [00:01<05:41,  2.92it/s, Loss/Training=2.26]0:   0%|          | 4/1000 [00:01<05:41,  2.92it/s, Loss/Training=2.23]0:   0%|          | 4/1000 [00:01<05:41,  2.92it/s, Loss/Training=2.3] 0:   0%|          | 4/1000 [00:01<05:41,  2.92it/s, Loss/Training=2.25]0:   0%|          | 4/1000 [00:01<05:41,  2.92it/s, Loss/Training=2.34]0:   0%|          | 4/1000 [00:01<05:41,  2.92it/s, Loss/Training=2.35]0:   0%|          | 5/1000 [00:01<05:36,  2.95it/s, Loss/Training=2.35]0:   0%|          | 5/1000 [00:01<05:36,  2.95it/s, Loss/Training=2.26]0:   0%|          | 5/1000 [00:01<05:36,  2.95it/s, Loss/Training=2.22]0:   0%|          | 5/1000 [00:01<05:36,  2.95it/s, Loss/Training=2.33]0:   0%|          | 5/1000 [00:01<05:36,  2.95it/s, Loss/Training=2.28]0:   0%|          | 5/1000 [00:01<05:36,  2.95it/s, Loss/Training=2.28]0:   0%|          | 5/1000 [00:01<05:36,  2.95it/s, Loss/Training=2.3] 0:   0%|          | 5/1000 [00:01<05:36,  2.95it/s, Loss/Training=2.27]0:   0%|          | 5/1000 [00:01<05:36,  2.95it/s, Loss/Training=2.29]0:   0%|          | 5/1000 [00:02<05:36,  2.95it/s, Loss/Training=2.27]0:   0%|          | 5/1000 [00:02<05:36,  2.95it/s, Loss/Training=2.31]0:   1%|          | 6/1000 [00:02<05:32,  2.99it/s, Loss/Training=2.31]0:   1%|          | 6/1000 [00:02<05:32,  2.99it/s, Loss/Training=2.27]0:   1%|          | 6/1000 [00:02<05:32,  2.99it/s, Loss/Training=2.29]0:   1%|          | 6/1000 [00:02<05:32,  2.99it/s, Loss/Training=2.34]0:   1%|          | 6/1000 [00:02<05:32,  2.99it/s, Loss/Training=2.3] 0:   1%|          | 6/1000 [00:02<05:32,  2.99it/s, Loss/Training=2.31]0:   1%|          | 6/1000 [00:02<05:32,  2.99it/s, Loss/Training=2.31]0:   1%|          | 6/1000 [00:02<05:32,  2.99it/s, Loss/Training=2.3] 0:   1%|          | 6/1000 [00:02<05:32,  2.99it/s, Loss/Training=2.29]0:   1%|          | 6/1000 [00:02<05:32,  2.99it/s, Loss/Training=2.31]0:   1%|          | 6/1000 [00:02<05:32,  2.99it/s, Loss/Training=2.3] 0:   1%|          | 7/1000 [00:02<05:29,  3.02it/s, Loss/Training=2.3]0:   1%|          | 7/1000 [00:02<05:29,  3.02it/s, Loss/Training=2.29]0:   1%|          | 7/1000 [00:02<05:29,  3.02it/s, Loss/Training=2.27]0:   1%|          | 7/1000 [00:02<05:29,  3.02it/s, Loss/Training=2.34]0:   1%|          | 7/1000 [00:02<05:29,  3.02it/s, Loss/Training=2.23]0:   1%|          | 7/1000 [00:02<05:29,  3.02it/s, Loss/Training=2.27]0:   1%|          | 7/1000 [00:02<05:29,  3.02it/s, Loss/Training=2.29]0:   1%|          | 7/1000 [00:02<05:29,  3.02it/s, Loss/Training=2.26]0:   1%|          | 7/1000 [00:02<05:29,  3.02it/s, Loss/Training=2.31]0:   1%|          | 7/1000 [00:02<05:29,  3.02it/s, Loss/Training=2.28]0:   1%|          | 7/1000 [00:02<05:29,  3.02it/s, Loss/Training=2.2] 0:   1%|          | 8/1000 [00:02<05:28,  3.02it/s, Loss/Training=2.2]0:   1%|          | 8/1000 [00:02<05:28,  3.02it/s, Loss/Training=2.28]0:   1%|          | 8/1000 [00:02<05:28,  3.02it/s, Loss/Training=2.31]0:   1%|          | 8/1000 [00:02<05:28,  3.02it/s, Loss/Training=2.22]0:   1%|          | 8/1000 [00:02<05:28,  3.02it/s, Loss/Training=2.3] 0:   1%|          | 8/1000 [00:02<05:28,  3.02it/s, Loss/Training=2.28]0:   1%|          | 8/1000 [00:02<05:28,  3.02it/s, Loss/Training=2.27]0:   1%|          | 8/1000 [00:02<05:28,  3.02it/s, Loss/Training=2.27]0:   1%|          | 8/1000 [00:02<05:28,  3.02it/s, Loss/Training=2.24]0:   1%|          | 8/1000 [00:03<05:28,  3.02it/s, Loss/Training=2.24]0:   1%|          | 8/1000 [00:03<05:28,  3.02it/s, Loss/Training=2.2] 0:   1%|          | 9/1000 [00:03<05:51,  2.82it/s, Loss/Training=2.2]0:   1%|          | 9/1000 [00:03<05:51,  2.82it/s, Loss/Training=2.32]0:   1%|          | 9/1000 [00:03<05:51,  2.82it/s, Loss/Training=2.29]0:   1%|          | 9/1000 [00:03<05:51,  2.82it/s, Loss/Training=2.23]0:   1%|          | 9/1000 [00:03<05:51,  2.82it/s, Loss/Training=2.23]0:   1%|          | 9/1000 [00:03<05:51,  2.82it/s, Loss/Training=2.31]0:   1%|          | 9/1000 [00:03<05:51,  2.82it/s, Loss/Training=2.29]0:   1%|          | 9/1000 [00:03<05:51,  2.82it/s, Loss/Training=2.28]0:   1%|          | 9/1000 [00:03<05:51,  2.82it/s, Loss/Training=2.25]0:   1%|          | 9/1000 [00:03<05:51,  2.82it/s, Loss/Training=2.33]0:   1%|          | 9/1000 [00:03<05:51,  2.82it/s, Loss/Training=2.32]0:   1%|          | 9/1000 [00:03<06:33,  2.52it/s, Loss/Training=2.32]:actor_name:ray_tune_trainable
Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_6c50b_00001_1_2025-01-27_15-03-02/checkpoint_tmpef08f8
[INFO 2025-01-27 15:03:58,271] trainable.py: 904  Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_6c50b_00001_1_2025-01-27_15-03-02/checkpoint_tmpef08f8
Current state after restoring: {'_iteration': 100, '_timesteps_total': None, '_time_total': 4.045853853225708, '_episodes_total': None}
[INFO 2025-01-27 15:03:58,271] trainable.py: 913  Current state after restoring: {'_iteration': 100, '_timesteps_total': None, '_time_total': 4.045853853225708, '_episodes_total': None}
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:123: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'data.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:126: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'targets.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/train.py:770: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = to.load(save_file)
0:   0%|          | 0/1000 [00:00<?, ?it/s]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=2.3]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=2.26]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=2.26]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=2.33]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=2.3] 0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=2.35]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=2.33]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=2.27]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=2.27]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=2.2] 0:   0%|          | 1/1000 [00:00<07:18,  2.28it/s, Loss/Training=2.2]0:   0%|          | 1/1000 [00:00<07:18,  2.28it/s, Loss/Training=2.33]0:   0%|          | 1/1000 [00:00<07:18,  2.28it/s, Loss/Training=2.25]0:   0%|          | 1/1000 [00:00<07:18,  2.28it/s, Loss/Training=2.27]0:   0%|          | 1/1000 [00:00<07:18,  2.28it/s, Loss/Training=2.32]0:   0%|          | 1/1000 [00:00<07:18,  2.28it/s, Loss/Training=2.3] 0:   0%|          | 1/1000 [00:00<07:18,  2.28it/s, Loss/Training=2.36]0:   0%|          | 1/1000 [00:00<07:18,  2.28it/s, Loss/Training=2.29]0:   0%|          | 1/1000 [00:00<07:18,  2.28it/s, Loss/Training=2.29]0:   0%|          | 1/1000 [00:00<07:18,  2.28it/s, Loss/Training=2.24]0:   0%|          | 1/1000 [00:00<07:18,  2.28it/s, Loss/Training=2.26]0:   0%|          | 2/1000 [00:00<06:13,  2.67it/s, Loss/Training=2.26]0:   0%|          | 2/1000 [00:00<06:13,  2.67it/s, Loss/Training=2.3] 0:   0%|          | 2/1000 [00:00<06:13,  2.67it/s, Loss/Training=2.27]0:   0%|          | 2/1000 [00:00<06:13,  2.67it/s, Loss/Training=2.33]0:   0%|          | 2/1000 [00:00<06:13,  2.67it/s, Loss/Training=2.32]0:   0%|          | 2/1000 [00:00<06:13,  2.67it/s, Loss/Training=2.31]0:   0%|          | 2/1000 [00:00<06:13,  2.67it/s, Loss/Training=2.5] 0:   0%|          | 2/1000 [00:00<06:13,  2.67it/s, Loss/Training=2.3]0:   0%|          | 2/1000 [00:00<06:13,  2.67it/s, Loss/Training=2.25]0:   0%|          | 2/1000 [00:01<06:13,  2.67it/s, Loss/Training=2.31]0:   0%|          | 2/1000 [00:01<06:13,  2.67it/s, Loss/Training=2.24]0:   0%|          | 3/1000 [00:01<05:53,  2.82it/s, Loss/Training=2.24]0:   0%|          | 3/1000 [00:01<05:53,  2.82it/s, Loss/Training=2.27]0:   0%|          | 3/1000 [00:01<05:53,  2.82it/s, Loss/Training=2.35]0:   0%|          | 3/1000 [00:01<05:53,  2.82it/s, Loss/Training=2.33]0:   0%|          | 3/1000 [00:01<05:53,  2.82it/s, Loss/Training=2.37]0:   0%|          | 3/1000 [00:01<05:53,  2.82it/s, Loss/Training=2.33]0:   0%|          | 3/1000 [00:01<05:53,  2.82it/s, Loss/Training=2.27]0:   0%|          | 3/1000 [00:01<05:53,  2.82it/s, Loss/Training=2.19]0:   0%|          | 3/1000 [00:01<05:53,  2.82it/s, Loss/Training=2.29]0:   0%|          | 3/1000 [00:01<05:53,  2.82it/s, Loss/Training=2.32]0:   0%|          | 3/1000 [00:01<05:53,  2.82it/s, Loss/Training=2.3] 0:   0%|          | 4/1000 [00:01<06:54,  2.41it/s, Loss/Training=2.3]0:   0%|          | 4/1000 [00:01<06:54,  2.41it/s, Loss/Training=2.26]0:   0%|          | 4/1000 [00:01<06:54,  2.41it/s, Loss/Training=2.32]0:   0%|          | 4/1000 [00:01<06:54,  2.41it/s, Loss/Training=2.24]0:   0%|          | 4/1000 [00:01<06:54,  2.41it/s, Loss/Training=2.28]0:   0%|          | 4/1000 [00:01<06:54,  2.41it/s, Loss/Training=2.31]0:   0%|          | 4/1000 [00:01<06:54,  2.41it/s, Loss/Training=2.31]0:   0%|          | 4/1000 [00:01<06:54,  2.41it/s, Loss/Training=2.25]0:   0%|          | 4/1000 [00:01<06:54,  2.41it/s, Loss/Training=2.25]0:   0%|          | 4/1000 [00:01<06:54,  2.41it/s, Loss/Training=2.28]0:   0%|          | 4/1000 [00:01<06:54,  2.41it/s, Loss/Training=2.3] 0:   0%|          | 5/1000 [00:01<06:34,  2.52it/s, Loss/Training=2.3]0:   0%|          | 5/1000 [00:01<06:34,  2.52it/s, Loss/Training=2.28]0:   0%|          | 5/1000 [00:02<06:34,  2.52it/s, Loss/Training=2.2] 0:   0%|          | 5/1000 [00:02<06:34,  2.52it/s, Loss/Training=2.38]0:   0%|          | 5/1000 [00:02<06:34,  2.52it/s, Loss/Training=2.22]0:   0%|          | 5/1000 [00:02<06:34,  2.52it/s, Loss/Training=2.28]0:   0%|          | 5/1000 [00:02<06:34,  2.52it/s, Loss/Training=2.24]0:   0%|          | 5/1000 [00:02<06:34,  2.52it/s, Loss/Training=2.3] 0:   0%|          | 5/1000 [00:02<06:34,  2.52it/s, Loss/Training=2.24]0:   0%|          | 5/1000 [00:02<06:34,  2.52it/s, Loss/Training=2.33]0:   0%|          | 5/1000 [00:02<06:34,  2.52it/s, Loss/Training=2.27]0:   1%|          | 6/1000 [00:02<06:11,  2.67it/s, Loss/Training=2.27]0:   1%|          | 6/1000 [00:02<06:11,  2.67it/s, Loss/Training=2.29]0:   1%|          | 6/1000 [00:02<06:11,  2.67it/s, Loss/Training=2.27]0:   1%|          | 6/1000 [00:02<06:11,  2.67it/s, Loss/Training=2.34]0:   1%|          | 6/1000 [00:02<06:11,  2.67it/s, Loss/Training=2.27]0:   1%|          | 6/1000 [00:02<06:11,  2.67it/s, Loss/Training=2.27]0:   1%|          | 6/1000 [00:02<06:11,  2.67it/s, Loss/Training=2.23]0:   1%|          | 6/1000 [00:02<06:11,  2.67it/s, Loss/Training=2.31]0:   1%|          | 6/1000 [00:02<06:11,  2.67it/s, Loss/Training=2.33]0:   1%|          | 6/1000 [00:02<06:11,  2.67it/s, Loss/Training=2.29]0:   1%|          | 6/1000 [00:02<06:11,  2.67it/s, Loss/Training=2.3] 0:   1%|          | 7/1000 [00:02<05:59,  2.76it/s, Loss/Training=2.3]0:   1%|          | 7/1000 [00:02<05:59,  2.76it/s, Loss/Training=2.3]0:   1%|          | 7/1000 [00:02<05:59,  2.76it/s, Loss/Training=2.29]0:   1%|          | 7/1000 [00:02<05:59,  2.76it/s, Loss/Training=2.32]0:   1%|          | 7/1000 [00:02<05:59,  2.76it/s, Loss/Training=2.3] 0:   1%|          | 7/1000 [00:02<05:59,  2.76it/s, Loss/Training=2.29]0:   1%|          | 7/1000 [00:02<05:59,  2.76it/s, Loss/Training=2.25]0:   1%|          | 7/1000 [00:02<05:59,  2.76it/s, Loss/Training=2.25]0:   1%|          | 7/1000 [00:02<05:59,  2.76it/s, Loss/Training=2.27]0:   1%|          | 7/1000 [00:02<05:59,  2.76it/s, Loss/Training=2.31]0:   1%|          | 7/1000 [00:02<05:59,  2.76it/s, Loss/Training=2.33]0:   1%|          | 8/1000 [00:02<05:52,  2.82it/s, Loss/Training=2.33]0:   1%|          | 8/1000 [00:02<05:52,  2.82it/s, Loss/Training=2.28]0:   1%|          | 8/1000 [00:03<05:52,  2.82it/s, Loss/Training=2.33]0:   1%|          | 8/1000 [00:03<05:52,  2.82it/s, Loss/Training=2.24]0:   1%|          | 8/1000 [00:03<05:52,  2.82it/s, Loss/Training=2.27]0:   1%|          | 8/1000 [00:03<05:52,  2.82it/s, Loss/Training=2.32]0:   1%|          | 8/1000 [00:03<05:52,  2.82it/s, Loss/Training=2.3] 0:   1%|          | 8/1000 [00:03<05:52,  2.82it/s, Loss/Training=2.24]0:   1%|          | 8/1000 [00:03<05:52,  2.82it/s, Loss/Training=2.27]0:   1%|          | 8/1000 [00:03<05:52,  2.82it/s, Loss/Training=2.27]0:   1%|          | 8/1000 [00:03<05:52,  2.82it/s, Loss/Training=2.25]0:   1%|          | 9/1000 [00:03<05:45,  2.87it/s, Loss/Training=2.25]0:   1%|          | 9/1000 [00:03<05:45,  2.87it/s, Loss/Training=2.31]0:   1%|          | 9/1000 [00:03<05:45,  2.87it/s, Loss/Training=2.28]0:   1%|          | 9/1000 [00:03<05:45,  2.87it/s, Loss/Training=2.31]0:   1%|          | 9/1000 [00:03<05:45,  2.87it/s, Loss/Training=2.32]0:   1%|          | 9/1000 [00:03<05:45,  2.87it/s, Loss/Training=2.3] 0:   1%|          | 9/1000 [00:03<05:45,  2.87it/s, Loss/Training=2.27]0:   1%|          | 9/1000 [00:03<05:45,  2.87it/s, Loss/Training=2.33]0:   1%|          | 9/1000 [00:03<05:45,  2.87it/s, Loss/Training=2.26]0:   1%|          | 9/1000 [00:03<05:45,  2.87it/s, Loss/Training=2.26]0:   1%|          | 9/1000 [00:03<05:45,  2.87it/s, Loss/Training=2.23]:actor_name:ray_tune_trainable
Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_6c50b_00001_1_2025-01-27_15-03-02/checkpoint_tmp989a50
[INFO 2025-01-27 15:04:32,828] trainable.py: 904  Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_6c50b_00001_1_2025-01-27_15-03-02/checkpoint_tmp989a50
Current state after restoring: {'_iteration': 200, '_timesteps_total': None, '_time_total': 8.803121328353882, '_episodes_total': None}
[INFO 2025-01-27 15:04:32,828] trainable.py: 913  Current state after restoring: {'_iteration': 200, '_timesteps_total': None, '_time_total': 8.803121328353882, '_episodes_total': None}
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:123: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'data.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:126: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'targets.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/train.py:770: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = to.load(save_file)
0:   0%|          | 0/1000 [00:00<?, ?it/s]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=1.8]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=1.5]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=1.42]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=1.21]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=1.21]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=1.08]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.875]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=1.18] 0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.963]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.82] 0:   0%|          | 1/1000 [00:00<07:07,  2.33it/s, Loss/Training=0.82]0:   0%|          | 1/1000 [00:00<07:07,  2.33it/s, Loss/Training=1.11]0:   0%|          | 1/1000 [00:00<07:07,  2.33it/s, Loss/Training=1.01]0:   0%|          | 1/1000 [00:00<07:07,  2.33it/s, Loss/Training=0.992]0:   0%|          | 1/1000 [00:00<07:07,  2.33it/s, Loss/Training=0.975]0:   0%|          | 1/1000 [00:00<07:07,  2.33it/s, Loss/Training=1.02] 0:   0%|          | 1/1000 [00:00<07:07,  2.33it/s, Loss/Training=0.637]0:   0%|          | 1/1000 [00:00<07:07,  2.33it/s, Loss/Training=0.65] 0:   0%|          | 1/1000 [00:00<07:07,  2.33it/s, Loss/Training=0.726]0:   0%|          | 1/1000 [00:00<07:07,  2.33it/s, Loss/Training=0.759]0:   0%|          | 1/1000 [00:00<07:07,  2.33it/s, Loss/Training=0.813]0:   0%|          | 2/1000 [00:00<06:05,  2.73it/s, Loss/Training=0.813]0:   0%|          | 2/1000 [00:00<06:05,  2.73it/s, Loss/Training=0.764]0:   0%|          | 2/1000 [00:00<06:05,  2.73it/s, Loss/Training=1.03] 0:   0%|          | 2/1000 [00:00<06:05,  2.73it/s, Loss/Training=0.668]0:   0%|          | 2/1000 [00:00<06:05,  2.73it/s, Loss/Training=0.965]0:   0%|          | 2/1000 [00:00<06:05,  2.73it/s, Loss/Training=0.928]0:   0%|          | 2/1000 [00:00<06:05,  2.73it/s, Loss/Training=0.621]0:   0%|          | 2/1000 [00:00<06:05,  2.73it/s, Loss/Training=0.623]0:   0%|          | 2/1000 [00:00<06:05,  2.73it/s, Loss/Training=0.96] 0:   0%|          | 2/1000 [00:00<06:05,  2.73it/s, Loss/Training=0.928]0:   0%|          | 2/1000 [00:01<06:05,  2.73it/s, Loss/Training=0.631]0:   0%|          | 3/1000 [00:01<05:46,  2.88it/s, Loss/Training=0.631]0:   0%|          | 3/1000 [00:01<05:46,  2.88it/s, Loss/Training=0.464]0:   0%|          | 3/1000 [00:01<05:46,  2.88it/s, Loss/Training=0.679]0:   0%|          | 3/1000 [00:01<05:46,  2.88it/s, Loss/Training=0.533]0:   0%|          | 3/1000 [00:01<05:46,  2.88it/s, Loss/Training=0.765]0:   0%|          | 3/1000 [00:01<05:46,  2.88it/s, Loss/Training=0.784]0:   0%|          | 3/1000 [00:01<05:46,  2.88it/s, Loss/Training=0.678]0:   0%|          | 3/1000 [00:01<05:46,  2.88it/s, Loss/Training=0.753]0:   0%|          | 3/1000 [00:01<05:46,  2.88it/s, Loss/Training=0.763]0:   0%|          | 3/1000 [00:01<05:46,  2.88it/s, Loss/Training=0.555]0:   0%|          | 3/1000 [00:01<05:46,  2.88it/s, Loss/Training=0.85] 0:   0%|          | 4/1000 [00:01<05:38,  2.94it/s, Loss/Training=0.85]0:   0%|          | 4/1000 [00:01<05:38,  2.94it/s, Loss/Training=0.733]0:   0%|          | 4/1000 [00:01<05:38,  2.94it/s, Loss/Training=0.691]0:   0%|          | 4/1000 [00:01<05:38,  2.94it/s, Loss/Training=0.434]0:   0%|          | 4/1000 [00:01<05:38,  2.94it/s, Loss/Training=0.733]0:   0%|          | 4/1000 [00:01<05:38,  2.94it/s, Loss/Training=0.477]0:   0%|          | 4/1000 [00:01<05:38,  2.94it/s, Loss/Training=0.695]0:   0%|          | 4/1000 [00:01<05:38,  2.94it/s, Loss/Training=0.539]0:   0%|          | 4/1000 [00:01<05:38,  2.94it/s, Loss/Training=0.81] 0:   0%|          | 4/1000 [00:01<05:38,  2.94it/s, Loss/Training=0.621]0:   0%|          | 4/1000 [00:01<05:38,  2.94it/s, Loss/Training=0.575]0:   0%|          | 5/1000 [00:01<05:34,  2.98it/s, Loss/Training=0.575]0:   0%|          | 5/1000 [00:01<05:34,  2.98it/s, Loss/Training=0.58] 0:   0%|          | 5/1000 [00:01<05:34,  2.98it/s, Loss/Training=0.608]0:   0%|          | 5/1000 [00:01<05:34,  2.98it/s, Loss/Training=0.573]0:   0%|          | 5/1000 [00:01<05:34,  2.98it/s, Loss/Training=0.562]0:   0%|          | 5/1000 [00:01<05:34,  2.98it/s, Loss/Training=0.512]0:   0%|          | 5/1000 [00:01<05:34,  2.98it/s, Loss/Training=0.678]0:   0%|          | 5/1000 [00:01<05:34,  2.98it/s, Loss/Training=0.687]0:   0%|          | 5/1000 [00:01<05:34,  2.98it/s, Loss/Training=0.537]0:   0%|          | 5/1000 [00:01<05:34,  2.98it/s, Loss/Training=0.52] 0:   0%|          | 5/1000 [00:02<05:34,  2.98it/s, Loss/Training=0.487]0:   1%|          | 6/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.487]0:   1%|          | 6/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.647]0:   1%|          | 6/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.676]0:   1%|          | 6/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.322]0:   1%|          | 6/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.712]0:   1%|          | 6/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.437]0:   1%|          | 6/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.586]0:   1%|          | 6/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.493]0:   1%|          | 6/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.454]0:   1%|          | 6/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.717]0:   1%|          | 6/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.602]0:   1%|          | 7/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.602]0:   1%|          | 7/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.444]0:   1%|          | 7/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.511]0:   1%|          | 7/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.499]0:   1%|          | 7/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.562]0:   1%|          | 7/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.507]0:   1%|          | 7/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.875]0:   1%|          | 7/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.553]0:   1%|          | 7/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.642]0:   1%|          | 7/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.962]0:   1%|          | 7/1000 [00:02<05:36,  2.95it/s, Loss/Training=0.723]0:   1%|          | 8/1000 [00:02<05:39,  2.92it/s, Loss/Training=0.723]0:   1%|          | 8/1000 [00:02<05:39,  2.92it/s, Loss/Training=0.605]0:   1%|          | 8/1000 [00:02<05:39,  2.92it/s, Loss/Training=0.654]0:   1%|          | 8/1000 [00:02<05:39,  2.92it/s, Loss/Training=0.459]0:   1%|          | 8/1000 [00:02<05:39,  2.92it/s, Loss/Training=0.61] 0:   1%|          | 8/1000 [00:02<05:39,  2.92it/s, Loss/Training=0.67]0:   1%|          | 8/1000 [00:02<05:39,  2.92it/s, Loss/Training=0.562]0:   1%|          | 8/1000 [00:02<05:39,  2.92it/s, Loss/Training=0.452]0:   1%|          | 8/1000 [00:02<05:39,  2.92it/s, Loss/Training=0.46] 0:   1%|          | 8/1000 [00:03<05:39,  2.92it/s, Loss/Training=0.499]0:   1%|          | 8/1000 [00:03<05:39,  2.92it/s, Loss/Training=0.324]0:   1%|          | 9/1000 [00:03<05:36,  2.95it/s, Loss/Training=0.324]0:   1%|          | 9/1000 [00:03<05:36,  2.95it/s, Loss/Training=0.577]0:   1%|          | 9/1000 [00:03<05:36,  2.95it/s, Loss/Training=0.619]0:   1%|          | 9/1000 [00:03<05:36,  2.95it/s, Loss/Training=0.829]0:   1%|          | 9/1000 [00:03<05:36,  2.95it/s, Loss/Training=0.925]0:   1%|          | 9/1000 [00:03<05:36,  2.95it/s, Loss/Training=0.575]0:   1%|          | 9/1000 [00:03<05:36,  2.95it/s, Loss/Training=0.493]0:   1%|          | 9/1000 [00:03<05:36,  2.95it/s, Loss/Training=0.234]0:   1%|          | 9/1000 [00:03<05:36,  2.95it/s, Loss/Training=0.386]0:   1%|          | 9/1000 [00:03<05:36,  2.95it/s, Loss/Training=0.546]0:   1%|          | 9/1000 [00:03<05:36,  2.95it/s, Loss/Training=0.665]:actor_name:ray_tune_trainable
Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_6c50b_00001_1_2025-01-27_15-03-02/checkpoint_tmp87222e
[INFO 2025-01-27 15:04:59,608] trainable.py: 904  Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_6c50b_00001_1_2025-01-27_15-03-02/checkpoint_tmp87222e
Current state after restoring: {'_iteration': 300, '_timesteps_total': None, '_time_total': 12.809467315673828, '_episodes_total': None}
[INFO 2025-01-27 15:04:59,608] trainable.py: 913  Current state after restoring: {'_iteration': 300, '_timesteps_total': None, '_time_total': 12.809467315673828, '_episodes_total': None}
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:123: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'data.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:126: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'targets.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/train.py:770: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = to.load(save_file)
0:   0%|          | 0/1000 [00:00<?, ?it/s]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.528]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.836]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.443]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.67] 0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.534]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.487]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.728]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.424]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.488]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.585]0:   0%|          | 1/1000 [00:00<07:47,  2.14it/s, Loss/Training=0.585]0:   0%|          | 1/1000 [00:00<07:47,  2.14it/s, Loss/Training=0.598]0:   0%|          | 1/1000 [00:00<07:47,  2.14it/s, Loss/Training=0.527]0:   0%|          | 1/1000 [00:00<07:47,  2.14it/s, Loss/Training=0.472]0:   0%|          | 1/1000 [00:00<07:47,  2.14it/s, Loss/Training=0.777]0:   0%|          | 1/1000 [00:00<07:47,  2.14it/s, Loss/Training=0.385]0:   0%|          | 1/1000 [00:00<07:47,  2.14it/s, Loss/Training=0.532]0:   0%|          | 1/1000 [00:00<07:47,  2.14it/s, Loss/Training=0.719]0:   0%|          | 1/1000 [00:00<07:47,  2.14it/s, Loss/Training=0.654]0:   0%|          | 1/1000 [00:00<07:47,  2.14it/s, Loss/Training=0.476]0:   0%|          | 1/1000 [00:00<07:47,  2.14it/s, Loss/Training=0.554]0:   0%|          | 2/1000 [00:00<06:30,  2.56it/s, Loss/Training=0.554]0:   0%|          | 2/1000 [00:00<06:30,  2.56it/s, Loss/Training=0.473]0:   0%|          | 2/1000 [00:00<06:30,  2.56it/s, Loss/Training=0.399]0:   0%|          | 2/1000 [00:00<06:30,  2.56it/s, Loss/Training=0.681]0:   0%|          | 2/1000 [00:00<06:30,  2.56it/s, Loss/Training=0.509]0:   0%|          | 2/1000 [00:00<06:30,  2.56it/s, Loss/Training=0.342]0:   0%|          | 2/1000 [00:00<06:30,  2.56it/s, Loss/Training=0.554]0:   0%|          | 2/1000 [00:00<06:30,  2.56it/s, Loss/Training=0.608]0:   0%|          | 2/1000 [00:01<06:30,  2.56it/s, Loss/Training=0.374]0:   0%|          | 2/1000 [00:01<06:30,  2.56it/s, Loss/Training=0.341]0:   0%|          | 2/1000 [00:01<06:30,  2.56it/s, Loss/Training=0.457]0:   0%|          | 3/1000 [00:01<06:06,  2.72it/s, Loss/Training=0.457]0:   0%|          | 3/1000 [00:01<06:06,  2.72it/s, Loss/Training=0.435]0:   0%|          | 3/1000 [00:01<06:06,  2.72it/s, Loss/Training=0.468]0:   0%|          | 3/1000 [00:01<06:06,  2.72it/s, Loss/Training=0.506]0:   0%|          | 3/1000 [00:01<06:06,  2.72it/s, Loss/Training=0.557]0:   0%|          | 3/1000 [00:01<06:06,  2.72it/s, Loss/Training=0.659]0:   0%|          | 3/1000 [00:01<06:06,  2.72it/s, Loss/Training=0.444]0:   0%|          | 3/1000 [00:01<06:06,  2.72it/s, Loss/Training=0.506]0:   0%|          | 3/1000 [00:01<06:06,  2.72it/s, Loss/Training=0.567]0:   0%|          | 3/1000 [00:01<06:06,  2.72it/s, Loss/Training=0.402]0:   0%|          | 3/1000 [00:01<06:06,  2.72it/s, Loss/Training=0.472]0:   0%|          | 4/1000 [00:01<05:56,  2.79it/s, Loss/Training=0.472]0:   0%|          | 4/1000 [00:01<05:56,  2.79it/s, Loss/Training=0.405]0:   0%|          | 4/1000 [00:01<05:56,  2.79it/s, Loss/Training=0.437]0:   0%|          | 4/1000 [00:01<05:56,  2.79it/s, Loss/Training=0.384]0:   0%|          | 4/1000 [00:01<05:56,  2.79it/s, Loss/Training=0.465]0:   0%|          | 4/1000 [00:01<05:56,  2.79it/s, Loss/Training=0.273]0:   0%|          | 4/1000 [00:01<05:56,  2.79it/s, Loss/Training=0.637]0:   0%|          | 4/1000 [00:01<05:56,  2.79it/s, Loss/Training=0.646]0:   0%|          | 4/1000 [00:01<05:56,  2.79it/s, Loss/Training=0.587]0:   0%|          | 4/1000 [00:01<05:56,  2.79it/s, Loss/Training=0.654]0:   0%|          | 4/1000 [00:01<05:56,  2.79it/s, Loss/Training=0.316]0:   0%|          | 5/1000 [00:01<05:47,  2.87it/s, Loss/Training=0.316]0:   0%|          | 5/1000 [00:01<05:47,  2.87it/s, Loss/Training=0.437]0:   0%|          | 5/1000 [00:01<05:47,  2.87it/s, Loss/Training=0.335]0:   0%|          | 5/1000 [00:01<05:47,  2.87it/s, Loss/Training=0.375]0:   0%|          | 5/1000 [00:01<05:47,  2.87it/s, Loss/Training=0.479]0:   0%|          | 5/1000 [00:01<05:47,  2.87it/s, Loss/Training=0.47] 0:   0%|          | 5/1000 [00:01<05:47,  2.87it/s, Loss/Training=0.498]0:   0%|          | 5/1000 [00:02<05:47,  2.87it/s, Loss/Training=0.472]0:   0%|          | 5/1000 [00:02<05:47,  2.87it/s, Loss/Training=0.467]0:   0%|          | 5/1000 [00:02<05:47,  2.87it/s, Loss/Training=0.501]0:   0%|          | 5/1000 [00:02<05:47,  2.87it/s, Loss/Training=0.564]0:   1%|          | 6/1000 [00:02<05:39,  2.93it/s, Loss/Training=0.564]0:   1%|          | 6/1000 [00:02<05:39,  2.93it/s, Loss/Training=0.471]0:   1%|          | 6/1000 [00:02<05:39,  2.93it/s, Loss/Training=0.334]0:   1%|          | 6/1000 [00:02<05:39,  2.93it/s, Loss/Training=0.363]0:   1%|          | 6/1000 [00:02<05:39,  2.93it/s, Loss/Training=0.288]0:   1%|          | 6/1000 [00:02<05:39,  2.93it/s, Loss/Training=0.466]0:   1%|          | 6/1000 [00:02<05:39,  2.93it/s, Loss/Training=0.752]0:   1%|          | 6/1000 [00:02<05:39,  2.93it/s, Loss/Training=0.377]0:   1%|          | 6/1000 [00:02<05:39,  2.93it/s, Loss/Training=0.27] 0:   1%|          | 6/1000 [00:02<05:39,  2.93it/s, Loss/Training=0.462]0:   1%|          | 6/1000 [00:02<05:39,  2.93it/s, Loss/Training=0.409]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.409]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.651]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.433]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.481]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.236]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.426]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.516]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.488]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.452]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.688]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.646]0:   1%|          | 8/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.646]0:   1%|          | 8/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.638]0:   1%|          | 8/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.601]0:   1%|          | 8/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.338]0:   1%|          | 8/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.408]0:   1%|          | 8/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.401]0:   1%|          | 8/1000 [00:02<05:33,  2.98it/s, Loss/Training=0.338]0:   1%|          | 8/1000 [00:03<05:33,  2.98it/s, Loss/Training=0.716]0:   1%|          | 8/1000 [00:03<05:33,  2.98it/s, Loss/Training=0.53] 0:   1%|          | 8/1000 [00:03<05:33,  2.98it/s, Loss/Training=0.36]0:   1%|          | 8/1000 [00:03<05:33,  2.98it/s, Loss/Training=0.53]0:   1%|          | 9/1000 [00:03<05:32,  2.98it/s, Loss/Training=0.53]0:   1%|          | 9/1000 [00:03<05:32,  2.98it/s, Loss/Training=0.609]0:   1%|          | 9/1000 [00:03<05:32,  2.98it/s, Loss/Training=0.475]0:   1%|          | 9/1000 [00:03<05:32,  2.98it/s, Loss/Training=0.393]0:   1%|          | 9/1000 [00:03<05:32,  2.98it/s, Loss/Training=0.319]0:   1%|          | 9/1000 [00:03<05:32,  2.98it/s, Loss/Training=0.556]0:   1%|          | 9/1000 [00:03<05:32,  2.98it/s, Loss/Training=0.515]0:   1%|          | 9/1000 [00:03<05:32,  2.98it/s, Loss/Training=0.453]0:   1%|          | 9/1000 [00:03<05:32,  2.98it/s, Loss/Training=0.414]0:   1%|          | 9/1000 [00:03<05:32,  2.98it/s, Loss/Training=0.39] 0:   1%|          | 9/1000 [00:03<05:32,  2.98it/s, Loss/Training=0.461]0:   1%|          | 9/1000 [00:03<06:40,  2.47it/s, Loss/Training=0.461]
:actor_name:ray_tune_trainable
Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_6c50b_00001_1_2025-01-27_15-03-02/checkpoint_tmpbbd40d
[INFO 2025-01-27 15:05:33,250] trainable.py: 904  Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_6c50b_00001_1_2025-01-27_15-03-02/checkpoint_tmpbbd40d
Current state after restoring: {'_iteration': 400, '_timesteps_total': None, '_time_total': 16.864840984344482, '_episodes_total': None}
[INFO 2025-01-27 15:05:33,250] trainable.py: 913  Current state after restoring: {'_iteration': 400, '_timesteps_total': None, '_time_total': 16.864840984344482, '_episodes_total': None}
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:123: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'data.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:126: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'targets.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/train.py:770: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = to.load(save_file)
0:   0%|          | 0/1000 [00:00<?, ?it/s]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.346]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.46] 0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.566]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.714]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.511]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.366]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.546]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.494]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.322]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.322]0:   0%|          | 1/1000 [00:00<07:58,  2.09it/s, Loss/Training=0.322]0:   0%|          | 1/1000 [00:00<07:58,  2.09it/s, Loss/Training=0.374]0:   0%|          | 1/1000 [00:00<07:58,  2.09it/s, Loss/Training=0.469]0:   0%|          | 1/1000 [00:00<07:58,  2.09it/s, Loss/Training=0.359]0:   0%|          | 1/1000 [00:00<07:58,  2.09it/s, Loss/Training=0.364]0:   0%|          | 1/1000 [00:00<07:58,  2.09it/s, Loss/Training=0.451]0:   0%|          | 1/1000 [00:00<07:58,  2.09it/s, Loss/Training=0.432]0:   0%|          | 1/1000 [00:00<07:58,  2.09it/s, Loss/Training=0.448]0:   0%|          | 1/1000 [00:00<07:58,  2.09it/s, Loss/Training=0.296]0:   0%|          | 1/1000 [00:00<07:58,  2.09it/s, Loss/Training=0.453]0:   0%|          | 1/1000 [00:00<07:58,  2.09it/s, Loss/Training=0.447]0:   0%|          | 2/1000 [00:00<06:36,  2.52it/s, Loss/Training=0.447]0:   0%|          | 2/1000 [00:00<06:36,  2.52it/s, Loss/Training=0.378]0:   0%|          | 2/1000 [00:00<06:36,  2.52it/s, Loss/Training=0.327]0:   0%|          | 2/1000 [00:00<06:36,  2.52it/s, Loss/Training=0.508]0:   0%|          | 2/1000 [00:00<06:36,  2.52it/s, Loss/Training=0.527]0:   0%|          | 2/1000 [00:00<06:36,  2.52it/s, Loss/Training=0.344]0:   0%|          | 2/1000 [00:00<06:36,  2.52it/s, Loss/Training=0.358]0:   0%|          | 2/1000 [00:01<06:36,  2.52it/s, Loss/Training=0.412]0:   0%|          | 2/1000 [00:01<06:36,  2.52it/s, Loss/Training=0.366]0:   0%|          | 2/1000 [00:01<06:36,  2.52it/s, Loss/Training=0.56] 0:   0%|          | 2/1000 [00:01<06:36,  2.52it/s, Loss/Training=0.408]0:   0%|          | 3/1000 [00:01<06:07,  2.71it/s, Loss/Training=0.408]0:   0%|          | 3/1000 [00:01<06:07,  2.71it/s, Loss/Training=0.584]0:   0%|          | 3/1000 [00:01<06:07,  2.71it/s, Loss/Training=0.711]0:   0%|          | 3/1000 [00:01<06:07,  2.71it/s, Loss/Training=0.422]0:   0%|          | 3/1000 [00:01<06:07,  2.71it/s, Loss/Training=0.552]0:   0%|          | 3/1000 [00:01<06:07,  2.71it/s, Loss/Training=0.371]0:   0%|          | 3/1000 [00:01<06:07,  2.71it/s, Loss/Training=0.503]0:   0%|          | 3/1000 [00:01<06:07,  2.71it/s, Loss/Training=0.532]0:   0%|          | 3/1000 [00:01<06:07,  2.71it/s, Loss/Training=0.518]0:   0%|          | 3/1000 [00:01<06:07,  2.71it/s, Loss/Training=0.437]0:   0%|          | 3/1000 [00:01<06:07,  2.71it/s, Loss/Training=0.614]0:   0%|          | 4/1000 [00:01<05:56,  2.79it/s, Loss/Training=0.614]0:   0%|          | 4/1000 [00:01<05:56,  2.79it/s, Loss/Training=0.196]0:   0%|          | 4/1000 [00:01<05:56,  2.79it/s, Loss/Training=0.456]0:   0%|          | 4/1000 [00:01<05:56,  2.79it/s, Loss/Training=0.4]  0:   0%|          | 4/1000 [00:01<05:56,  2.79it/s, Loss/Training=0.397]0:   0%|          | 4/1000 [00:01<05:56,  2.79it/s, Loss/Training=0.466]0:   0%|          | 4/1000 [00:01<05:56,  2.79it/s, Loss/Training=0.548]0:   0%|          | 4/1000 [00:01<05:56,  2.79it/s, Loss/Training=0.458]0:   0%|          | 4/1000 [00:01<05:56,  2.79it/s, Loss/Training=0.327]0:   0%|          | 4/1000 [00:01<05:56,  2.79it/s, Loss/Training=0.362]0:   0%|          | 4/1000 [00:01<05:56,  2.79it/s, Loss/Training=0.241]0:   0%|          | 5/1000 [00:01<05:49,  2.84it/s, Loss/Training=0.241]0:   0%|          | 5/1000 [00:01<05:49,  2.84it/s, Loss/Training=0.494]0:   0%|          | 5/1000 [00:01<05:49,  2.84it/s, Loss/Training=0.335]0:   0%|          | 5/1000 [00:01<05:49,  2.84it/s, Loss/Training=0.324]0:   0%|          | 5/1000 [00:01<05:49,  2.84it/s, Loss/Training=0.371]0:   0%|          | 5/1000 [00:01<05:49,  2.84it/s, Loss/Training=0.395]0:   0%|          | 5/1000 [00:01<05:49,  2.84it/s, Loss/Training=0.365]0:   0%|          | 5/1000 [00:02<05:49,  2.84it/s, Loss/Training=0.214]0:   0%|          | 5/1000 [00:02<05:49,  2.84it/s, Loss/Training=0.308]0:   0%|          | 5/1000 [00:02<05:49,  2.84it/s, Loss/Training=0.413]0:   0%|          | 5/1000 [00:02<05:49,  2.84it/s, Loss/Training=0.279]0:   1%|          | 6/1000 [00:02<05:45,  2.87it/s, Loss/Training=0.279]0:   1%|          | 6/1000 [00:02<05:45,  2.87it/s, Loss/Training=0.524]0:   1%|          | 6/1000 [00:02<05:45,  2.87it/s, Loss/Training=0.5]  0:   1%|          | 6/1000 [00:02<05:45,  2.87it/s, Loss/Training=0.494]0:   1%|          | 6/1000 [00:02<05:45,  2.87it/s, Loss/Training=0.546]0:   1%|          | 6/1000 [00:02<05:45,  2.87it/s, Loss/Training=0.395]0:   1%|          | 6/1000 [00:02<05:45,  2.87it/s, Loss/Training=0.357]0:   1%|          | 6/1000 [00:02<05:45,  2.87it/s, Loss/Training=0.533]0:   1%|          | 6/1000 [00:02<05:45,  2.87it/s, Loss/Training=0.281]0:   1%|          | 6/1000 [00:02<05:45,  2.87it/s, Loss/Training=0.513]0:   1%|          | 6/1000 [00:02<05:45,  2.87it/s, Loss/Training=0.513]0:   1%|          | 7/1000 [00:02<05:40,  2.92it/s, Loss/Training=0.513]0:   1%|          | 7/1000 [00:02<05:40,  2.92it/s, Loss/Training=0.285]0:   1%|          | 7/1000 [00:02<05:40,  2.92it/s, Loss/Training=0.6]  0:   1%|          | 7/1000 [00:02<05:40,  2.92it/s, Loss/Training=0.401]0:   1%|          | 7/1000 [00:02<05:40,  2.92it/s, Loss/Training=0.453]0:   1%|          | 7/1000 [00:02<05:40,  2.92it/s, Loss/Training=0.29] 0:   1%|          | 7/1000 [00:02<05:40,  2.92it/s, Loss/Training=0.348]0:   1%|          | 7/1000 [00:02<05:40,  2.92it/s, Loss/Training=0.321]0:   1%|          | 7/1000 [00:02<05:40,  2.92it/s, Loss/Training=0.438]0:   1%|          | 7/1000 [00:02<05:40,  2.92it/s, Loss/Training=0.503]0:   1%|          | 7/1000 [00:02<05:40,  2.92it/s, Loss/Training=0.345]0:   1%|          | 8/1000 [00:02<05:37,  2.94it/s, Loss/Training=0.345]0:   1%|          | 8/1000 [00:02<05:37,  2.94it/s, Loss/Training=0.373]0:   1%|          | 8/1000 [00:02<05:37,  2.94it/s, Loss/Training=0.496]0:   1%|          | 8/1000 [00:02<05:37,  2.94it/s, Loss/Training=0.353]0:   1%|          | 8/1000 [00:02<05:37,  2.94it/s, Loss/Training=0.628]0:   1%|          | 8/1000 [00:02<05:37,  2.94it/s, Loss/Training=0.741]0:   1%|          | 8/1000 [00:03<05:37,  2.94it/s, Loss/Training=0.522]0:   1%|          | 8/1000 [00:03<05:37,  2.94it/s, Loss/Training=0.438]0:   1%|          | 8/1000 [00:03<05:37,  2.94it/s, Loss/Training=0.458]0:   1%|          | 8/1000 [00:03<05:37,  2.94it/s, Loss/Training=0.174]0:   1%|          | 8/1000 [00:03<05:37,  2.94it/s, Loss/Training=0.327]0:   1%|          | 9/1000 [00:03<05:33,  2.97it/s, Loss/Training=0.327]0:   1%|          | 9/1000 [00:03<05:33,  2.97it/s, Loss/Training=0.374]0:   1%|          | 9/1000 [00:03<05:33,  2.97it/s, Loss/Training=0.397]0:   1%|          | 9/1000 [00:03<05:33,  2.97it/s, Loss/Training=0.309]0:   1%|          | 9/1000 [00:03<05:33,  2.97it/s, Loss/Training=0.446]0:   1%|          | 9/1000 [00:03<05:33,  2.97it/s, Loss/Training=0.455]0:   1%|          | 9/1000 [00:03<05:33,  2.97it/s, Loss/Training=0.327]0:   1%|          | 9/1000 [00:03<05:33,  2.97it/s, Loss/Training=0.315]0:   1%|          | 9/1000 [00:03<05:33,  2.97it/s, Loss/Training=0.54] 0:   1%|          | 9/1000 [00:03<05:33,  2.97it/s, Loss/Training=0.357]0:   1%|          | 9/1000 [00:03<05:33,  2.97it/s, Loss/Training=0.387]:actor_name:ray_tune_trainable
Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_6c50b_00001_1_2025-01-27_15-03-02/checkpoint_tmpff561b
[INFO 2025-01-27 15:06:01,796] trainable.py: 904  Restored on 10.12.92.124 from checkpoint: /home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/ray_results/PBT fashion_mnist_pbt/ray_tune_trainable_6c50b_00001_1_2025-01-27_15-03-02/checkpoint_tmpff561b
Current state after restoring: {'_iteration': 500, '_timesteps_total': None, '_time_total': 20.93709373474121, '_episodes_total': None}
[INFO 2025-01-27 15:06:01,796] trainable.py: 913  Current state after restoring: {'_iteration': 500, '_timesteps_total': None, '_time_total': 20.93709373474121, '_episodes_total': None}
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:123: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'data.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/datasets.py:126: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  to.load(os.path.join(root, 'targets.pt')))
/home/scs_deal_learning/users/mchowdhu/OptimisingWeightUpdateHyperparameters/train.py:770: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = to.load(save_file)
0:   0%|          | 0/1000 [00:00<?, ?it/s]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.285]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.614]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.481]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.379]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.464]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.736]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.445]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.294]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.424]0:   0%|          | 0/1000 [00:00<?, ?it/s, Loss/Training=0.268]0:   0%|          | 1/1000 [00:00<07:23,  2.25it/s, Loss/Training=0.268]0:   0%|          | 1/1000 [00:00<07:23,  2.25it/s, Loss/Training=0.544]0:   0%|          | 1/1000 [00:00<07:23,  2.25it/s, Loss/Training=0.427]0:   0%|          | 1/1000 [00:00<07:23,  2.25it/s, Loss/Training=0.433]0:   0%|          | 1/1000 [00:00<07:23,  2.25it/s, Loss/Training=0.399]0:   0%|          | 1/1000 [00:00<07:23,  2.25it/s, Loss/Training=0.337]0:   0%|          | 1/1000 [00:00<07:23,  2.25it/s, Loss/Training=0.419]0:   0%|          | 1/1000 [00:00<07:23,  2.25it/s, Loss/Training=0.324]0:   0%|          | 1/1000 [00:00<07:23,  2.25it/s, Loss/Training=0.179]0:   0%|          | 1/1000 [00:00<07:23,  2.25it/s, Loss/Training=0.471]0:   0%|          | 1/1000 [00:00<07:23,  2.25it/s, Loss/Training=0.493]0:   0%|          | 2/1000 [00:00<06:21,  2.62it/s, Loss/Training=0.493]0:   0%|          | 2/1000 [00:00<06:21,  2.62it/s, Loss/Training=0.332]0:   0%|          | 2/1000 [00:00<06:21,  2.62it/s, Loss/Training=0.192]0:   0%|          | 2/1000 [00:00<06:21,  2.62it/s, Loss/Training=0.388]0:   0%|          | 2/1000 [00:00<06:21,  2.62it/s, Loss/Training=0.512]0:   0%|          | 2/1000 [00:00<06:21,  2.62it/s, Loss/Training=0.344]0:   0%|          | 2/1000 [00:00<06:21,  2.62it/s, Loss/Training=0.622]0:   0%|          | 2/1000 [00:00<06:21,  2.62it/s, Loss/Training=0.593]0:   0%|          | 2/1000 [00:00<06:21,  2.62it/s, Loss/Training=0.247]0:   0%|          | 2/1000 [00:01<06:21,  2.62it/s, Loss/Training=0.465]0:   0%|          | 2/1000 [00:01<06:21,  2.62it/s, Loss/Training=0.559]0:   0%|          | 3/1000 [00:01<06:00,  2.76it/s, Loss/Training=0.559]0:   0%|          | 3/1000 [00:01<06:00,  2.76it/s, Loss/Training=0.438]0:   0%|          | 3/1000 [00:01<06:00,  2.76it/s, Loss/Training=0.414]0:   0%|          | 3/1000 [00:01<06:00,  2.76it/s, Loss/Training=0.355]0:   0%|          | 3/1000 [00:01<06:00,  2.76it/s, Loss/Training=0.256]0:   0%|          | 3/1000 [00:01<06:00,  2.76it/s, Loss/Training=0.366]0:   0%|          | 3/1000 [00:01<06:00,  2.76it/s, Loss/Training=0.247]0:   0%|          | 3/1000 [00:01<06:00,  2.76it/s, Loss/Training=0.547]0:   0%|          | 3/1000 [00:01<06:00,  2.76it/s, Loss/Training=0.512]0:   0%|          | 3/1000 [00:01<06:00,  2.76it/s, Loss/Training=0.584]0:   0%|          | 3/1000 [00:01<06:00,  2.76it/s, Loss/Training=0.556]0:   0%|          | 4/1000 [00:01<05:46,  2.87it/s, Loss/Training=0.556]0:   0%|          | 4/1000 [00:01<05:46,  2.87it/s, Loss/Training=0.413]0:   0%|          | 4/1000 [00:01<05:46,  2.87it/s, Loss/Training=0.439]0:   0%|          | 4/1000 [00:01<05:46,  2.87it/s, Loss/Training=0.319]0:   0%|          | 4/1000 [00:01<05:46,  2.87it/s, Loss/Training=0.503]0:   0%|          | 4/1000 [00:01<05:46,  2.87it/s, Loss/Training=0.395]0:   0%|          | 4/1000 [00:01<05:46,  2.87it/s, Loss/Training=0.448]0:   0%|          | 4/1000 [00:01<05:46,  2.87it/s, Loss/Training=0.319]0:   0%|          | 4/1000 [00:01<05:46,  2.87it/s, Loss/Training=0.483]0:   0%|          | 4/1000 [00:01<05:46,  2.87it/s, Loss/Training=0.302]0:   0%|          | 4/1000 [00:01<05:46,  2.87it/s, Loss/Training=0.251]0:   0%|          | 5/1000 [00:01<05:44,  2.88it/s, Loss/Training=0.251]0:   0%|          | 5/1000 [00:01<05:44,  2.88it/s, Loss/Training=0.54] 0:   0%|          | 5/1000 [00:01<05:44,  2.88it/s, Loss/Training=0.376]0:   0%|          | 5/1000 [00:01<05:44,  2.88it/s, Loss/Training=0.406]0:   0%|          | 5/1000 [00:01<05:44,  2.88it/s, Loss/Training=0.376]0:   0%|          | 5/1000 [00:01<05:44,  2.88it/s, Loss/Training=0.308]0:   0%|          | 5/1000 [00:01<05:44,  2.88it/s, Loss/Training=0.428]0:   0%|          | 5/1000 [00:01<05:44,  2.88it/s, Loss/Training=0.344]0:   0%|          | 5/1000 [00:02<05:44,  2.88it/s, Loss/Training=0.353]0:   0%|          | 5/1000 [00:02<05:44,  2.88it/s, Loss/Training=0.307]0:   0%|          | 5/1000 [00:02<05:44,  2.88it/s, Loss/Training=0.392]0:   1%|          | 6/1000 [00:02<05:37,  2.95it/s, Loss/Training=0.392]0:   1%|          | 6/1000 [00:02<05:37,  2.95it/s, Loss/Training=0.511]0:   1%|          | 6/1000 [00:02<05:37,  2.95it/s, Loss/Training=0.27] 0:   1%|          | 6/1000 [00:02<05:37,  2.95it/s, Loss/Training=0.505]0:   1%|          | 6/1000 [00:02<05:37,  2.95it/s, Loss/Training=0.411]0:   1%|          | 6/1000 [00:02<05:37,  2.95it/s, Loss/Training=0.562]0:   1%|          | 6/1000 [00:02<05:37,  2.95it/s, Loss/Training=0.405]0:   1%|          | 6/1000 [00:02<05:37,  2.95it/s, Loss/Training=0.475]0:   1%|          | 6/1000 [00:02<05:37,  2.95it/s, Loss/Training=0.346]0:   1%|          | 6/1000 [00:02<05:37,  2.95it/s, Loss/Training=0.383]0:   1%|          | 6/1000 [00:02<05:37,  2.95it/s, Loss/Training=0.334]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.334]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.661]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.357]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.488]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.462]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.383]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.481]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.315]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.433]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.875]0:   1%|          | 7/1000 [00:02<05:34,  2.97it/s, Loss/Training=0.384]0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.384]0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.338]0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.549]0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.325]0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.429]0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.479]0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.425]0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.628]0:   1%|          | 8/1000 [00:02<05:31,  2.99it/s, Loss/Training=0.591]0:   1%|          | 8/1000 [00:03<05:31,  2.99it/s, Loss/Training=0.265]0:   1%|          | 8/1000 [00:03<05:31,  2.99it/s, Loss/Training=0.416]0:   1%|          | 9/1000 [00:03<05:28,  3.02it/s, Loss/Training=0.416]0:   1%|          | 9/1000 [00:03<05:28,  3.02it/s, Loss/Training=0.47] 0:   1%|          | 9/1000 [00:03<05:28,  3.02it/s, Loss/Training=0.519]0:   1%|          | 9/1000 [00:03<05:28,  3.02it/s, Loss/Training=0.32] 0:   1%|          | 9/1000 [00:03<05:28,  3.02it/s, Loss/Training=0.416]0:   1%|          | 9/1000 [00:03<05:28,  3.02it/s, Loss/Training=0.484]0:   1%|          | 9/1000 [00:03<05:28,  3.02it/s, Loss/Training=0.507]0:   1%|          | 9/1000 [00:03<05:28,  3.02it/s, Loss/Training=0.355]0:   1%|          | 9/1000 [00:03<05:28,  3.02it/s, Loss/Training=0.286]0:   1%|          | 9/1000 [00:03<05:28,  3.02it/s, Loss/Training=0.606]0:   1%|          | 9/1000 [00:03<05:28,  3.02it/s, Loss/Training=0.215]0:   1%|          | 9/1000 [00:03<06:30,  2.54it/s, Loss/Training=0.215]
